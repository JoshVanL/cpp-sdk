// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dapr/dapr.proto

#include "dapr/dapr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_dapr_2fdapr_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fdapr_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InvokeBindingEnvelope_MetadataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fdapr_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InvokeServiceEnvelope_MetadataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fdapr_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fdapr_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StateRequest_MetadataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fdapr_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_State_MetadataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fdapr_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RetryPolicy;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fdapr_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StateOptions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fdapr_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StateRequestOptions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fdapr_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StateRetryPolicy;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fdapr_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_StateRequest;
}  // namespace protobuf_dapr_2fdapr_2eproto
namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_google_2fprotobuf_2fduration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration;
}  // namespace protobuf_google_2fprotobuf_2fduration_2eproto
namespace dapr {
class InvokeServiceResponseEnvelope_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse>
      _instance;
} _InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse_default_instance_;
class InvokeServiceResponseEnvelopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InvokeServiceResponseEnvelope>
      _instance;
} _InvokeServiceResponseEnvelope_default_instance_;
class DeleteStateEnvelopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteStateEnvelope>
      _instance;
} _DeleteStateEnvelope_default_instance_;
class SaveStateEnvelopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SaveStateEnvelope>
      _instance;
} _SaveStateEnvelope_default_instance_;
class GetStateEnvelopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetStateEnvelope>
      _instance;
} _GetStateEnvelope_default_instance_;
class GetStateResponseEnvelopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetStateResponseEnvelope>
      _instance;
} _GetStateResponseEnvelope_default_instance_;
class InvokeBindingEnvelope_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InvokeBindingEnvelope_MetadataEntry_DoNotUse>
      _instance;
} _InvokeBindingEnvelope_MetadataEntry_DoNotUse_default_instance_;
class InvokeBindingEnvelopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InvokeBindingEnvelope>
      _instance;
} _InvokeBindingEnvelope_default_instance_;
class InvokeServiceEnvelope_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InvokeServiceEnvelope_MetadataEntry_DoNotUse>
      _instance;
} _InvokeServiceEnvelope_MetadataEntry_DoNotUse_default_instance_;
class InvokeServiceEnvelopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InvokeServiceEnvelope>
      _instance;
} _InvokeServiceEnvelope_default_instance_;
class PublishEventEnvelopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PublishEventEnvelope>
      _instance;
} _PublishEventEnvelope_default_instance_;
class State_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<State_MetadataEntry_DoNotUse>
      _instance;
} _State_MetadataEntry_DoNotUse_default_instance_;
class StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<State>
      _instance;
} _State_default_instance_;
class StateOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateOptions>
      _instance;
} _StateOptions_default_instance_;
class RetryPolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RetryPolicy>
      _instance;
} _RetryPolicy_default_instance_;
class StateRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateRequest_MetadataEntry_DoNotUse>
      _instance;
} _StateRequest_MetadataEntry_DoNotUse_default_instance_;
class StateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateRequest>
      _instance;
} _StateRequest_default_instance_;
class StateRequestOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateRequestOptions>
      _instance;
} _StateRequestOptions_default_instance_;
class StateRetryPolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateRetryPolicy>
      _instance;
} _StateRetryPolicy_default_instance_;
}  // namespace dapr
namespace protobuf_dapr_2fdapr_2eproto {
static void InitDefaultsInvokeServiceResponseEnvelope_MetadataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse();
  }
  ::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInvokeServiceResponseEnvelope_MetadataEntry_DoNotUse}, {}};

static void InitDefaultsInvokeServiceResponseEnvelope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_InvokeServiceResponseEnvelope_default_instance_;
    new (ptr) ::dapr::InvokeServiceResponseEnvelope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::InvokeServiceResponseEnvelope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_InvokeServiceResponseEnvelope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsInvokeServiceResponseEnvelope}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,
      &protobuf_dapr_2fdapr_2eproto::scc_info_InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse.base,}};

static void InitDefaultsDeleteStateEnvelope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_DeleteStateEnvelope_default_instance_;
    new (ptr) ::dapr::DeleteStateEnvelope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::DeleteStateEnvelope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeleteStateEnvelope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeleteStateEnvelope}, {
      &protobuf_dapr_2fdapr_2eproto::scc_info_StateOptions.base,}};

static void InitDefaultsSaveStateEnvelope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_SaveStateEnvelope_default_instance_;
    new (ptr) ::dapr::SaveStateEnvelope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::SaveStateEnvelope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SaveStateEnvelope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSaveStateEnvelope}, {
      &protobuf_dapr_2fdapr_2eproto::scc_info_StateRequest.base,}};

static void InitDefaultsGetStateEnvelope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_GetStateEnvelope_default_instance_;
    new (ptr) ::dapr::GetStateEnvelope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::GetStateEnvelope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetStateEnvelope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetStateEnvelope}, {}};

static void InitDefaultsGetStateResponseEnvelope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_GetStateResponseEnvelope_default_instance_;
    new (ptr) ::dapr::GetStateResponseEnvelope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::GetStateResponseEnvelope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetStateResponseEnvelope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetStateResponseEnvelope}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsInvokeBindingEnvelope_MetadataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_InvokeBindingEnvelope_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse();
  }
  ::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InvokeBindingEnvelope_MetadataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInvokeBindingEnvelope_MetadataEntry_DoNotUse}, {}};

static void InitDefaultsInvokeBindingEnvelope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_InvokeBindingEnvelope_default_instance_;
    new (ptr) ::dapr::InvokeBindingEnvelope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::InvokeBindingEnvelope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_InvokeBindingEnvelope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsInvokeBindingEnvelope}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,
      &protobuf_dapr_2fdapr_2eproto::scc_info_InvokeBindingEnvelope_MetadataEntry_DoNotUse.base,}};

static void InitDefaultsInvokeServiceEnvelope_MetadataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_InvokeServiceEnvelope_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse();
  }
  ::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InvokeServiceEnvelope_MetadataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInvokeServiceEnvelope_MetadataEntry_DoNotUse}, {}};

static void InitDefaultsInvokeServiceEnvelope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_InvokeServiceEnvelope_default_instance_;
    new (ptr) ::dapr::InvokeServiceEnvelope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::InvokeServiceEnvelope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_InvokeServiceEnvelope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsInvokeServiceEnvelope}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,
      &protobuf_dapr_2fdapr_2eproto::scc_info_InvokeServiceEnvelope_MetadataEntry_DoNotUse.base,}};

static void InitDefaultsPublishEventEnvelope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_PublishEventEnvelope_default_instance_;
    new (ptr) ::dapr::PublishEventEnvelope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::PublishEventEnvelope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PublishEventEnvelope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPublishEventEnvelope}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsState_MetadataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_State_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::State_MetadataEntry_DoNotUse();
  }
  ::dapr::State_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_State_MetadataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsState_MetadataEntry_DoNotUse}, {}};

static void InitDefaultsState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_State_default_instance_;
    new (ptr) ::dapr::State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::State::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_State =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsState}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,
      &protobuf_dapr_2fdapr_2eproto::scc_info_State_MetadataEntry_DoNotUse.base,
      &protobuf_dapr_2fdapr_2eproto::scc_info_StateOptions.base,}};

static void InitDefaultsStateOptions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_StateOptions_default_instance_;
    new (ptr) ::dapr::StateOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::StateOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StateOptions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStateOptions}, {
      &protobuf_dapr_2fdapr_2eproto::scc_info_RetryPolicy.base,}};

static void InitDefaultsRetryPolicy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_RetryPolicy_default_instance_;
    new (ptr) ::dapr::RetryPolicy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::RetryPolicy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RetryPolicy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRetryPolicy}, {
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,}};

static void InitDefaultsStateRequest_MetadataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_StateRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::StateRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::StateRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StateRequest_MetadataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStateRequest_MetadataEntry_DoNotUse}, {}};

static void InitDefaultsStateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_StateRequest_default_instance_;
    new (ptr) ::dapr::StateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::StateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_StateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsStateRequest}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,
      &protobuf_dapr_2fdapr_2eproto::scc_info_StateRequest_MetadataEntry_DoNotUse.base,
      &protobuf_dapr_2fdapr_2eproto::scc_info_StateRequestOptions.base,}};

static void InitDefaultsStateRequestOptions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_StateRequestOptions_default_instance_;
    new (ptr) ::dapr::StateRequestOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::StateRequestOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StateRequestOptions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStateRequestOptions}, {
      &protobuf_dapr_2fdapr_2eproto::scc_info_StateRetryPolicy.base,}};

static void InitDefaultsStateRetryPolicy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_StateRetryPolicy_default_instance_;
    new (ptr) ::dapr::StateRetryPolicy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::StateRetryPolicy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StateRetryPolicy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStateRetryPolicy}, {
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InvokeServiceResponseEnvelope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteStateEnvelope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SaveStateEnvelope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetStateEnvelope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetStateResponseEnvelope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InvokeBindingEnvelope_MetadataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InvokeBindingEnvelope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InvokeServiceEnvelope_MetadataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InvokeServiceEnvelope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PublishEventEnvelope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_State_MetadataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_State.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StateOptions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RetryPolicy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StateRequest_MetadataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StateRequestOptions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StateRetryPolicy.base);
}

::google::protobuf::Metadata file_level_metadata[19];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceResponseEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceResponseEnvelope, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceResponseEnvelope, metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::DeleteStateEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::DeleteStateEnvelope, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::DeleteStateEnvelope, etag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::DeleteStateEnvelope, options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::SaveStateEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::SaveStateEnvelope, requests_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::GetStateEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::GetStateEnvelope, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::GetStateEnvelope, consistency_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::GetStateResponseEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::GetStateResponseEnvelope, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::GetStateResponseEnvelope, etag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeBindingEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeBindingEnvelope, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeBindingEnvelope, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeBindingEnvelope, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceEnvelope, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceEnvelope, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceEnvelope, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::InvokeServiceEnvelope, metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::PublishEventEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::PublishEventEnvelope, topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::PublishEventEnvelope, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::State_MetadataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::State_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::State_MetadataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::State_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::State, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::State, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::State, etag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::State, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::State, options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateOptions, concurrency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateOptions, consistency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateOptions, retrypolicy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::RetryPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::RetryPolicy, threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::RetryPolicy, pattern_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::RetryPolicy, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRequest_MetadataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRequest_MetadataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRequest, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRequest, etag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRequest, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRequest, options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRequestOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRequestOptions, concurrency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRequestOptions, consistency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRequestOptions, retrypolicy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRetryPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRetryPolicy, threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRetryPolicy, pattern_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::StateRetryPolicy, interval_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse)},
  { 9, -1, sizeof(::dapr::InvokeServiceResponseEnvelope)},
  { 16, -1, sizeof(::dapr::DeleteStateEnvelope)},
  { 24, -1, sizeof(::dapr::SaveStateEnvelope)},
  { 30, -1, sizeof(::dapr::GetStateEnvelope)},
  { 37, -1, sizeof(::dapr::GetStateResponseEnvelope)},
  { 44, 51, sizeof(::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse)},
  { 53, -1, sizeof(::dapr::InvokeBindingEnvelope)},
  { 61, 68, sizeof(::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse)},
  { 70, -1, sizeof(::dapr::InvokeServiceEnvelope)},
  { 79, -1, sizeof(::dapr::PublishEventEnvelope)},
  { 86, 93, sizeof(::dapr::State_MetadataEntry_DoNotUse)},
  { 95, -1, sizeof(::dapr::State)},
  { 105, -1, sizeof(::dapr::StateOptions)},
  { 113, -1, sizeof(::dapr::RetryPolicy)},
  { 121, 128, sizeof(::dapr::StateRequest_MetadataEntry_DoNotUse)},
  { 130, -1, sizeof(::dapr::StateRequest)},
  { 140, -1, sizeof(::dapr::StateRequestOptions)},
  { 148, -1, sizeof(::dapr::StateRetryPolicy)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_InvokeServiceResponseEnvelope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_DeleteStateEnvelope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_SaveStateEnvelope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_GetStateEnvelope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_GetStateResponseEnvelope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_InvokeBindingEnvelope_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_InvokeBindingEnvelope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_InvokeServiceEnvelope_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_InvokeServiceEnvelope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_PublishEventEnvelope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_State_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_StateOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_RetryPolicy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_StateRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_StateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_StateRequestOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::_StateRetryPolicy_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "dapr/dapr.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 19);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017dapr/dapr.proto\022\004dapr\032\031google/protobuf"
      "/any.proto\032\033google/protobuf/empty.proto\032"
      "\036google/protobuf/duration.proto\"\271\001\n\035Invo"
      "keServiceResponseEnvelope\022\"\n\004data\030\001 \001(\0132"
      "\024.google.protobuf.Any\022C\n\010metadata\030\002 \003(\0132"
      "1.dapr.InvokeServiceResponseEnvelope.Met"
      "adataEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t"
      "\022\r\n\005value\030\002 \001(\t:\0028\001\"U\n\023DeleteStateEnvelo"
      "pe\022\013\n\003key\030\001 \001(\t\022\014\n\004etag\030\002 \001(\t\022#\n\007options"
      "\030\003 \001(\0132\022.dapr.StateOptions\"9\n\021SaveStateE"
      "nvelope\022$\n\010requests\030\001 \003(\0132\022.dapr.StateRe"
      "quest\"4\n\020GetStateEnvelope\022\013\n\003key\030\001 \001(\t\022\023"
      "\n\013consistency\030\002 \001(\t\"L\n\030GetStateResponseE"
      "nvelope\022\"\n\004data\030\001 \001(\0132\024.google.protobuf."
      "Any\022\014\n\004etag\030\002 \001(\t\"\267\001\n\025InvokeBindingEnvel"
      "ope\022\014\n\004name\030\001 \001(\t\022\"\n\004data\030\002 \001(\0132\024.google"
      ".protobuf.Any\022;\n\010metadata\030\003 \003(\0132).dapr.I"
      "nvokeBindingEnvelope.MetadataEntry\032/\n\rMe"
      "tadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:"
      "\0028\001\"\305\001\n\025InvokeServiceEnvelope\022\n\n\002id\030\001 \001("
      "\t\022\016\n\006method\030\002 \001(\t\022\"\n\004data\030\003 \001(\0132\024.google"
      ".protobuf.Any\022;\n\010metadata\030\004 \003(\0132).dapr.I"
      "nvokeServiceEnvelope.MetadataEntry\032/\n\rMe"
      "tadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:"
      "\0028\001\"I\n\024PublishEventEnvelope\022\r\n\005topic\030\001 \001"
      "(\t\022\"\n\004data\030\002 \001(\0132\024.google.protobuf.Any\"\312"
      "\001\n\005State\022\013\n\003key\030\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.g"
      "oogle.protobuf.Any\022\014\n\004etag\030\003 \001(\t\022+\n\010meta"
      "data\030\004 \003(\0132\031.dapr.State.MetadataEntry\022#\n"
      "\007options\030\005 \001(\0132\022.dapr.StateOptions\032/\n\rMe"
      "tadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:"
      "\0028\001\"`\n\014StateOptions\022\023\n\013concurrency\030\001 \001(\t"
      "\022\023\n\013consistency\030\002 \001(\t\022&\n\013retryPolicy\030\003 \001"
      "(\0132\021.dapr.RetryPolicy\"^\n\013RetryPolicy\022\021\n\t"
      "threshold\030\001 \001(\005\022\017\n\007pattern\030\002 \001(\t\022+\n\010inte"
      "rval\030\003 \001(\0132\031.google.protobuf.Duration\"\337\001"
      "\n\014StateRequest\022\013\n\003key\030\001 \001(\t\022#\n\005value\030\002 \001"
      "(\0132\024.google.protobuf.Any\022\014\n\004etag\030\003 \001(\t\0222"
      "\n\010metadata\030\004 \003(\0132 .dapr.StateRequest.Met"
      "adataEntry\022*\n\007options\030\005 \001(\0132\031.dapr.State"
      "RequestOptions\032/\n\rMetadataEntry\022\013\n\003key\030\001"
      " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"l\n\023StateRequestO"
      "ptions\022\023\n\013concurrency\030\001 \001(\t\022\023\n\013consisten"
      "cy\030\002 \001(\t\022+\n\013retryPolicy\030\003 \001(\0132\026.dapr.Sta"
      "teRetryPolicy\"c\n\020StateRetryPolicy\022\021\n\tthr"
      "eshold\030\001 \001(\005\022\017\n\007pattern\030\002 \001(\t\022+\n\010interva"
      "l\030\003 \001(\0132\031.google.protobuf.Duration2\263\003\n\004D"
      "apr\022D\n\014PublishEvent\022\032.dapr.PublishEventE"
      "nvelope\032\026.google.protobuf.Empty\"\000\022S\n\rInv"
      "okeService\022\033.dapr.InvokeServiceEnvelope\032"
      "#.dapr.InvokeServiceResponseEnvelope\"\000\022F"
      "\n\rInvokeBinding\022\033.dapr.InvokeBindingEnve"
      "lope\032\026.google.protobuf.Empty\"\000\022D\n\010GetSta"
      "te\022\026.dapr.GetStateEnvelope\032\036.dapr.GetSta"
      "teResponseEnvelope\"\000\022>\n\tSaveState\022\027.dapr"
      ".SaveStateEnvelope\032\026.google.protobuf.Emp"
      "ty\"\000\022B\n\013DeleteState\022\031.dapr.DeleteStateEn"
      "velope\032\026.google.protobuf.Empty\"\000B(\n\007io.d"
      "aprB\nDaprProtos\252\002\020Dapr.Client.Grpcb\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2362);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dapr/dapr.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_dapr_2fdapr_2eproto
namespace dapr {

// ===================================================================

InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse() {}
InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse::MergeFrom(const InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[0];
}
void InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void InvokeServiceResponseEnvelope::InitAsDefaultInstance() {
  ::dapr::_InvokeServiceResponseEnvelope_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void InvokeServiceResponseEnvelope::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvokeServiceResponseEnvelope::kDataFieldNumber;
const int InvokeServiceResponseEnvelope::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvokeServiceResponseEnvelope::InvokeServiceResponseEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fdapr_2eproto::scc_info_InvokeServiceResponseEnvelope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.InvokeServiceResponseEnvelope)
}
InvokeServiceResponseEnvelope::InvokeServiceResponseEnvelope(const InvokeServiceResponseEnvelope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.InvokeServiceResponseEnvelope)
}

void InvokeServiceResponseEnvelope::SharedCtor() {
  data_ = NULL;
}

InvokeServiceResponseEnvelope::~InvokeServiceResponseEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.InvokeServiceResponseEnvelope)
  SharedDtor();
}

void InvokeServiceResponseEnvelope::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void InvokeServiceResponseEnvelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InvokeServiceResponseEnvelope::descriptor() {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InvokeServiceResponseEnvelope& InvokeServiceResponseEnvelope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fdapr_2eproto::scc_info_InvokeServiceResponseEnvelope.base);
  return *internal_default_instance();
}


void InvokeServiceResponseEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.InvokeServiceResponseEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool InvokeServiceResponseEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.InvokeServiceResponseEnvelope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> metadata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeServiceResponseEnvelope.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeServiceResponseEnvelope.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.InvokeServiceResponseEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.InvokeServiceResponseEnvelope)
  return false;
#undef DO_
}

void InvokeServiceResponseEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.InvokeServiceResponseEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_data(), output);
  }

  // map<string, string> metadata = 2;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceResponseEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceResponseEnvelope.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.InvokeServiceResponseEnvelope)
}

::google::protobuf::uint8* InvokeServiceResponseEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.InvokeServiceResponseEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_data(), deterministic, target);
  }

  // map<string, string> metadata = 2;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceResponseEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceResponseEnvelope.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.InvokeServiceResponseEnvelope)
  return target;
}

size_t InvokeServiceResponseEnvelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.InvokeServiceResponseEnvelope)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> metadata = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::std::unique_ptr<InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .google.protobuf.Any data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvokeServiceResponseEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.InvokeServiceResponseEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  const InvokeServiceResponseEnvelope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InvokeServiceResponseEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.InvokeServiceResponseEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.InvokeServiceResponseEnvelope)
    MergeFrom(*source);
  }
}

void InvokeServiceResponseEnvelope::MergeFrom(const InvokeServiceResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.InvokeServiceResponseEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
}

void InvokeServiceResponseEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.InvokeServiceResponseEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvokeServiceResponseEnvelope::CopyFrom(const InvokeServiceResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.InvokeServiceResponseEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeServiceResponseEnvelope::IsInitialized() const {
  return true;
}

void InvokeServiceResponseEnvelope::Swap(InvokeServiceResponseEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvokeServiceResponseEnvelope::InternalSwap(InvokeServiceResponseEnvelope* other) {
  using std::swap;
  metadata_.Swap(&other->metadata_);
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InvokeServiceResponseEnvelope::GetMetadata() const {
  protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteStateEnvelope::InitAsDefaultInstance() {
  ::dapr::_DeleteStateEnvelope_default_instance_._instance.get_mutable()->options_ = const_cast< ::dapr::StateOptions*>(
      ::dapr::StateOptions::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteStateEnvelope::kKeyFieldNumber;
const int DeleteStateEnvelope::kEtagFieldNumber;
const int DeleteStateEnvelope::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteStateEnvelope::DeleteStateEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fdapr_2eproto::scc_info_DeleteStateEnvelope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.DeleteStateEnvelope)
}
DeleteStateEnvelope::DeleteStateEnvelope(const DeleteStateEnvelope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.etag().size() > 0) {
    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  if (from.has_options()) {
    options_ = new ::dapr::StateOptions(*from.options_);
  } else {
    options_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.DeleteStateEnvelope)
}

void DeleteStateEnvelope::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  options_ = NULL;
}

DeleteStateEnvelope::~DeleteStateEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.DeleteStateEnvelope)
  SharedDtor();
}

void DeleteStateEnvelope::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete options_;
}

void DeleteStateEnvelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteStateEnvelope::descriptor() {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteStateEnvelope& DeleteStateEnvelope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fdapr_2eproto::scc_info_DeleteStateEnvelope.base);
  return *internal_default_instance();
}


void DeleteStateEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.DeleteStateEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && options_ != NULL) {
    delete options_;
  }
  options_ = NULL;
  _internal_metadata_.Clear();
}

bool DeleteStateEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.DeleteStateEnvelope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.DeleteStateEnvelope.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string etag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->etag().data(), static_cast<int>(this->etag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.DeleteStateEnvelope.etag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dapr.StateOptions options = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.DeleteStateEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.DeleteStateEnvelope)
  return false;
#undef DO_
}

void DeleteStateEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.DeleteStateEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.DeleteStateEnvelope.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string etag = 2;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), static_cast<int>(this->etag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.DeleteStateEnvelope.etag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->etag(), output);
  }

  // .dapr.StateOptions options = 3;
  if (this->has_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_options(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.DeleteStateEnvelope)
}

::google::protobuf::uint8* DeleteStateEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.DeleteStateEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.DeleteStateEnvelope.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string etag = 2;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), static_cast<int>(this->etag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.DeleteStateEnvelope.etag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->etag(), target);
  }

  // .dapr.StateOptions options = 3;
  if (this->has_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_options(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.DeleteStateEnvelope)
  return target;
}

size_t DeleteStateEnvelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.DeleteStateEnvelope)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string etag = 2;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->etag());
  }

  // .dapr.StateOptions options = 3;
  if (this->has_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *options_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteStateEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.DeleteStateEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteStateEnvelope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteStateEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.DeleteStateEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.DeleteStateEnvelope)
    MergeFrom(*source);
  }
}

void DeleteStateEnvelope::MergeFrom(const DeleteStateEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.DeleteStateEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.etag().size() > 0) {

    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  if (from.has_options()) {
    mutable_options()->::dapr::StateOptions::MergeFrom(from.options());
  }
}

void DeleteStateEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.DeleteStateEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteStateEnvelope::CopyFrom(const DeleteStateEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.DeleteStateEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteStateEnvelope::IsInitialized() const {
  return true;
}

void DeleteStateEnvelope::Swap(DeleteStateEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteStateEnvelope::InternalSwap(DeleteStateEnvelope* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  etag_.Swap(&other->etag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(options_, other->options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteStateEnvelope::GetMetadata() const {
  protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SaveStateEnvelope::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveStateEnvelope::kRequestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveStateEnvelope::SaveStateEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fdapr_2eproto::scc_info_SaveStateEnvelope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.SaveStateEnvelope)
}
SaveStateEnvelope::SaveStateEnvelope(const SaveStateEnvelope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      requests_(from.requests_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.SaveStateEnvelope)
}

void SaveStateEnvelope::SharedCtor() {
}

SaveStateEnvelope::~SaveStateEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.SaveStateEnvelope)
  SharedDtor();
}

void SaveStateEnvelope::SharedDtor() {
}

void SaveStateEnvelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SaveStateEnvelope::descriptor() {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SaveStateEnvelope& SaveStateEnvelope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fdapr_2eproto::scc_info_SaveStateEnvelope.base);
  return *internal_default_instance();
}


void SaveStateEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.SaveStateEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requests_.Clear();
  _internal_metadata_.Clear();
}

bool SaveStateEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.SaveStateEnvelope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dapr.StateRequest requests = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_requests()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.SaveStateEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.SaveStateEnvelope)
  return false;
#undef DO_
}

void SaveStateEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.SaveStateEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dapr.StateRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->requests(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.SaveStateEnvelope)
}

::google::protobuf::uint8* SaveStateEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.SaveStateEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dapr.StateRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->requests(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.SaveStateEnvelope)
  return target;
}

size_t SaveStateEnvelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.SaveStateEnvelope)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .dapr.StateRequest requests = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->requests_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->requests(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SaveStateEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.SaveStateEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveStateEnvelope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveStateEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.SaveStateEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.SaveStateEnvelope)
    MergeFrom(*source);
  }
}

void SaveStateEnvelope::MergeFrom(const SaveStateEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.SaveStateEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requests_.MergeFrom(from.requests_);
}

void SaveStateEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.SaveStateEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveStateEnvelope::CopyFrom(const SaveStateEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.SaveStateEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveStateEnvelope::IsInitialized() const {
  return true;
}

void SaveStateEnvelope::Swap(SaveStateEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveStateEnvelope::InternalSwap(SaveStateEnvelope* other) {
  using std::swap;
  CastToBase(&requests_)->InternalSwap(CastToBase(&other->requests_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SaveStateEnvelope::GetMetadata() const {
  protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetStateEnvelope::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStateEnvelope::kKeyFieldNumber;
const int GetStateEnvelope::kConsistencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStateEnvelope::GetStateEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fdapr_2eproto::scc_info_GetStateEnvelope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.GetStateEnvelope)
}
GetStateEnvelope::GetStateEnvelope(const GetStateEnvelope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  consistency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.consistency().size() > 0) {
    consistency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consistency_);
  }
  // @@protoc_insertion_point(copy_constructor:dapr.GetStateEnvelope)
}

void GetStateEnvelope::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetStateEnvelope::~GetStateEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.GetStateEnvelope)
  SharedDtor();
}

void GetStateEnvelope::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetStateEnvelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetStateEnvelope::descriptor() {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetStateEnvelope& GetStateEnvelope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fdapr_2eproto::scc_info_GetStateEnvelope.base);
  return *internal_default_instance();
}


void GetStateEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.GetStateEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetStateEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.GetStateEnvelope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.GetStateEnvelope.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string consistency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_consistency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->consistency().data(), static_cast<int>(this->consistency().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.GetStateEnvelope.consistency"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.GetStateEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.GetStateEnvelope)
  return false;
#undef DO_
}

void GetStateEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.GetStateEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetStateEnvelope.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string consistency = 2;
  if (this->consistency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consistency().data(), static_cast<int>(this->consistency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetStateEnvelope.consistency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->consistency(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.GetStateEnvelope)
}

::google::protobuf::uint8* GetStateEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.GetStateEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetStateEnvelope.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string consistency = 2;
  if (this->consistency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consistency().data(), static_cast<int>(this->consistency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetStateEnvelope.consistency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->consistency(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.GetStateEnvelope)
  return target;
}

size_t GetStateEnvelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.GetStateEnvelope)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string consistency = 2;
  if (this->consistency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->consistency());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStateEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.GetStateEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStateEnvelope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetStateEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.GetStateEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.GetStateEnvelope)
    MergeFrom(*source);
  }
}

void GetStateEnvelope::MergeFrom(const GetStateEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.GetStateEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.consistency().size() > 0) {

    consistency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consistency_);
  }
}

void GetStateEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.GetStateEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStateEnvelope::CopyFrom(const GetStateEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.GetStateEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStateEnvelope::IsInitialized() const {
  return true;
}

void GetStateEnvelope::Swap(GetStateEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetStateEnvelope::InternalSwap(GetStateEnvelope* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  consistency_.Swap(&other->consistency_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetStateEnvelope::GetMetadata() const {
  protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetStateResponseEnvelope::InitAsDefaultInstance() {
  ::dapr::_GetStateResponseEnvelope_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void GetStateResponseEnvelope::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStateResponseEnvelope::kDataFieldNumber;
const int GetStateResponseEnvelope::kEtagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStateResponseEnvelope::GetStateResponseEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fdapr_2eproto::scc_info_GetStateResponseEnvelope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.GetStateResponseEnvelope)
}
GetStateResponseEnvelope::GetStateResponseEnvelope(const GetStateResponseEnvelope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.etag().size() > 0) {
    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.GetStateResponseEnvelope)
}

void GetStateResponseEnvelope::SharedCtor() {
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
}

GetStateResponseEnvelope::~GetStateResponseEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.GetStateResponseEnvelope)
  SharedDtor();
}

void GetStateResponseEnvelope::SharedDtor() {
  etag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void GetStateResponseEnvelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetStateResponseEnvelope::descriptor() {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetStateResponseEnvelope& GetStateResponseEnvelope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fdapr_2eproto::scc_info_GetStateResponseEnvelope.base);
  return *internal_default_instance();
}


void GetStateResponseEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.GetStateResponseEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool GetStateResponseEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.GetStateResponseEnvelope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string etag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->etag().data(), static_cast<int>(this->etag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.GetStateResponseEnvelope.etag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.GetStateResponseEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.GetStateResponseEnvelope)
  return false;
#undef DO_
}

void GetStateResponseEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.GetStateResponseEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_data(), output);
  }

  // string etag = 2;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), static_cast<int>(this->etag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetStateResponseEnvelope.etag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->etag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.GetStateResponseEnvelope)
}

::google::protobuf::uint8* GetStateResponseEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.GetStateResponseEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_data(), deterministic, target);
  }

  // string etag = 2;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), static_cast<int>(this->etag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetStateResponseEnvelope.etag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->etag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.GetStateResponseEnvelope)
  return target;
}

size_t GetStateResponseEnvelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.GetStateResponseEnvelope)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string etag = 2;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->etag());
  }

  // .google.protobuf.Any data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStateResponseEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.GetStateResponseEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStateResponseEnvelope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetStateResponseEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.GetStateResponseEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.GetStateResponseEnvelope)
    MergeFrom(*source);
  }
}

void GetStateResponseEnvelope::MergeFrom(const GetStateResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.GetStateResponseEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.etag().size() > 0) {

    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
}

void GetStateResponseEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.GetStateResponseEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStateResponseEnvelope::CopyFrom(const GetStateResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.GetStateResponseEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStateResponseEnvelope::IsInitialized() const {
  return true;
}

void GetStateResponseEnvelope::Swap(GetStateResponseEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetStateResponseEnvelope::InternalSwap(GetStateResponseEnvelope* other) {
  using std::swap;
  etag_.Swap(&other->etag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetStateResponseEnvelope::GetMetadata() const {
  protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

InvokeBindingEnvelope_MetadataEntry_DoNotUse::InvokeBindingEnvelope_MetadataEntry_DoNotUse() {}
InvokeBindingEnvelope_MetadataEntry_DoNotUse::InvokeBindingEnvelope_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void InvokeBindingEnvelope_MetadataEntry_DoNotUse::MergeFrom(const InvokeBindingEnvelope_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata InvokeBindingEnvelope_MetadataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[6];
}
void InvokeBindingEnvelope_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void InvokeBindingEnvelope::InitAsDefaultInstance() {
  ::dapr::_InvokeBindingEnvelope_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void InvokeBindingEnvelope::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvokeBindingEnvelope::kNameFieldNumber;
const int InvokeBindingEnvelope::kDataFieldNumber;
const int InvokeBindingEnvelope::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvokeBindingEnvelope::InvokeBindingEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fdapr_2eproto::scc_info_InvokeBindingEnvelope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.InvokeBindingEnvelope)
}
InvokeBindingEnvelope::InvokeBindingEnvelope(const InvokeBindingEnvelope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.InvokeBindingEnvelope)
}

void InvokeBindingEnvelope::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
}

InvokeBindingEnvelope::~InvokeBindingEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.InvokeBindingEnvelope)
  SharedDtor();
}

void InvokeBindingEnvelope::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void InvokeBindingEnvelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InvokeBindingEnvelope::descriptor() {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InvokeBindingEnvelope& InvokeBindingEnvelope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fdapr_2eproto::scc_info_InvokeBindingEnvelope.base);
  return *internal_default_instance();
}


void InvokeBindingEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.InvokeBindingEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool InvokeBindingEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.InvokeBindingEnvelope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeBindingEnvelope.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          InvokeBindingEnvelope_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              InvokeBindingEnvelope_MetadataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeBindingEnvelope.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeBindingEnvelope.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.InvokeBindingEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.InvokeBindingEnvelope)
  return false;
#undef DO_
}

void InvokeBindingEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.InvokeBindingEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.InvokeBindingEnvelope.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.protobuf.Any data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_data(), output);
  }

  // map<string, string> metadata = 3;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeBindingEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeBindingEnvelope.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<InvokeBindingEnvelope_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<InvokeBindingEnvelope_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.InvokeBindingEnvelope)
}

::google::protobuf::uint8* InvokeBindingEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.InvokeBindingEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.InvokeBindingEnvelope.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.protobuf.Any data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_data(), deterministic, target);
  }

  // map<string, string> metadata = 3;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeBindingEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeBindingEnvelope.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<InvokeBindingEnvelope_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<InvokeBindingEnvelope_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.InvokeBindingEnvelope)
  return target;
}

size_t InvokeBindingEnvelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.InvokeBindingEnvelope)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> metadata = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::std::unique_ptr<InvokeBindingEnvelope_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.protobuf.Any data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvokeBindingEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.InvokeBindingEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  const InvokeBindingEnvelope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InvokeBindingEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.InvokeBindingEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.InvokeBindingEnvelope)
    MergeFrom(*source);
  }
}

void InvokeBindingEnvelope::MergeFrom(const InvokeBindingEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.InvokeBindingEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
}

void InvokeBindingEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.InvokeBindingEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvokeBindingEnvelope::CopyFrom(const InvokeBindingEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.InvokeBindingEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeBindingEnvelope::IsInitialized() const {
  return true;
}

void InvokeBindingEnvelope::Swap(InvokeBindingEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvokeBindingEnvelope::InternalSwap(InvokeBindingEnvelope* other) {
  using std::swap;
  metadata_.Swap(&other->metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InvokeBindingEnvelope::GetMetadata() const {
  protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

InvokeServiceEnvelope_MetadataEntry_DoNotUse::InvokeServiceEnvelope_MetadataEntry_DoNotUse() {}
InvokeServiceEnvelope_MetadataEntry_DoNotUse::InvokeServiceEnvelope_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void InvokeServiceEnvelope_MetadataEntry_DoNotUse::MergeFrom(const InvokeServiceEnvelope_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata InvokeServiceEnvelope_MetadataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[8];
}
void InvokeServiceEnvelope_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void InvokeServiceEnvelope::InitAsDefaultInstance() {
  ::dapr::_InvokeServiceEnvelope_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void InvokeServiceEnvelope::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvokeServiceEnvelope::kIdFieldNumber;
const int InvokeServiceEnvelope::kMethodFieldNumber;
const int InvokeServiceEnvelope::kDataFieldNumber;
const int InvokeServiceEnvelope::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvokeServiceEnvelope::InvokeServiceEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fdapr_2eproto::scc_info_InvokeServiceEnvelope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.InvokeServiceEnvelope)
}
InvokeServiceEnvelope::InvokeServiceEnvelope(const InvokeServiceEnvelope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.InvokeServiceEnvelope)
}

void InvokeServiceEnvelope::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
}

InvokeServiceEnvelope::~InvokeServiceEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.InvokeServiceEnvelope)
  SharedDtor();
}

void InvokeServiceEnvelope::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void InvokeServiceEnvelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InvokeServiceEnvelope::descriptor() {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InvokeServiceEnvelope& InvokeServiceEnvelope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fdapr_2eproto::scc_info_InvokeServiceEnvelope.base);
  return *internal_default_instance();
}


void InvokeServiceEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.InvokeServiceEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool InvokeServiceEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.InvokeServiceEnvelope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeServiceEnvelope.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string method = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), static_cast<int>(this->method().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeServiceEnvelope.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> metadata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          InvokeServiceEnvelope_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              InvokeServiceEnvelope_MetadataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeServiceEnvelope.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeServiceEnvelope.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.InvokeServiceEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.InvokeServiceEnvelope)
  return false;
#undef DO_
}

void InvokeServiceEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.InvokeServiceEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.InvokeServiceEnvelope.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.InvokeServiceEnvelope.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->method(), output);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_data(), output);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceEnvelope.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<InvokeServiceEnvelope_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<InvokeServiceEnvelope_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.InvokeServiceEnvelope)
}

::google::protobuf::uint8* InvokeServiceEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.InvokeServiceEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.InvokeServiceEnvelope.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.InvokeServiceEnvelope.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->method(), target);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_data(), deterministic, target);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceEnvelope.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<InvokeServiceEnvelope_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<InvokeServiceEnvelope_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.InvokeServiceEnvelope)
  return target;
}

size_t InvokeServiceEnvelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.InvokeServiceEnvelope)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> metadata = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::std::unique_ptr<InvokeServiceEnvelope_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvokeServiceEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.InvokeServiceEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  const InvokeServiceEnvelope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InvokeServiceEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.InvokeServiceEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.InvokeServiceEnvelope)
    MergeFrom(*source);
  }
}

void InvokeServiceEnvelope::MergeFrom(const InvokeServiceEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.InvokeServiceEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
}

void InvokeServiceEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.InvokeServiceEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvokeServiceEnvelope::CopyFrom(const InvokeServiceEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.InvokeServiceEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeServiceEnvelope::IsInitialized() const {
  return true;
}

void InvokeServiceEnvelope::Swap(InvokeServiceEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvokeServiceEnvelope::InternalSwap(InvokeServiceEnvelope* other) {
  using std::swap;
  metadata_.Swap(&other->metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  method_.Swap(&other->method_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InvokeServiceEnvelope::GetMetadata() const {
  protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PublishEventEnvelope::InitAsDefaultInstance() {
  ::dapr::_PublishEventEnvelope_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void PublishEventEnvelope::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublishEventEnvelope::kTopicFieldNumber;
const int PublishEventEnvelope::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublishEventEnvelope::PublishEventEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fdapr_2eproto::scc_info_PublishEventEnvelope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.PublishEventEnvelope)
}
PublishEventEnvelope::PublishEventEnvelope(const PublishEventEnvelope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.PublishEventEnvelope)
}

void PublishEventEnvelope::SharedCtor() {
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
}

PublishEventEnvelope::~PublishEventEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.PublishEventEnvelope)
  SharedDtor();
}

void PublishEventEnvelope::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void PublishEventEnvelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PublishEventEnvelope::descriptor() {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PublishEventEnvelope& PublishEventEnvelope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fdapr_2eproto::scc_info_PublishEventEnvelope.base);
  return *internal_default_instance();
}


void PublishEventEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.PublishEventEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool PublishEventEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.PublishEventEnvelope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.PublishEventEnvelope.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.PublishEventEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.PublishEventEnvelope)
  return false;
#undef DO_
}

void PublishEventEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.PublishEventEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.PublishEventEnvelope.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // .google.protobuf.Any data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.PublishEventEnvelope)
}

::google::protobuf::uint8* PublishEventEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.PublishEventEnvelope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.PublishEventEnvelope.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // .google.protobuf.Any data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.PublishEventEnvelope)
  return target;
}

size_t PublishEventEnvelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.PublishEventEnvelope)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // .google.protobuf.Any data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublishEventEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.PublishEventEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  const PublishEventEnvelope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PublishEventEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.PublishEventEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.PublishEventEnvelope)
    MergeFrom(*source);
  }
}

void PublishEventEnvelope::MergeFrom(const PublishEventEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.PublishEventEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
}

void PublishEventEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.PublishEventEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublishEventEnvelope::CopyFrom(const PublishEventEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.PublishEventEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishEventEnvelope::IsInitialized() const {
  return true;
}

void PublishEventEnvelope::Swap(PublishEventEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublishEventEnvelope::InternalSwap(PublishEventEnvelope* other) {
  using std::swap;
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PublishEventEnvelope::GetMetadata() const {
  protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

State_MetadataEntry_DoNotUse::State_MetadataEntry_DoNotUse() {}
State_MetadataEntry_DoNotUse::State_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void State_MetadataEntry_DoNotUse::MergeFrom(const State_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata State_MetadataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[11];
}
void State_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void State::InitAsDefaultInstance() {
  ::dapr::_State_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::dapr::_State_default_instance_._instance.get_mutable()->options_ = const_cast< ::dapr::StateOptions*>(
      ::dapr::StateOptions::internal_default_instance());
}
void State::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int State::kKeyFieldNumber;
const int State::kValueFieldNumber;
const int State::kEtagFieldNumber;
const int State::kMetadataFieldNumber;
const int State::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

State::State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fdapr_2eproto::scc_info_State.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.State)
}
State::State(const State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.etag().size() > 0) {
    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  if (from.has_value()) {
    value_ = new ::google::protobuf::Any(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_options()) {
    options_ = new ::dapr::StateOptions(*from.options_);
  } else {
    options_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.State)
}

void State::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&options_) -
      reinterpret_cast<char*>(&value_)) + sizeof(options_));
}

State::~State() {
  // @@protoc_insertion_point(destructor:dapr.State)
  SharedDtor();
}

void State::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete options_;
}

void State::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* State::descriptor() {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const State& State::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fdapr_2eproto::scc_info_State.base);
  return *internal_default_instance();
}


void State::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && options_ != NULL) {
    delete options_;
  }
  options_ = NULL;
  _internal_metadata_.Clear();
}

bool State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.State)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.State.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string etag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->etag().data(), static_cast<int>(this->etag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.State.etag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> metadata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          State_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              State_MetadataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.State.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.State.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dapr.StateOptions options = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.State)
  return false;
#undef DO_
}

void State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.State.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // .google.protobuf.Any value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  // string etag = 3;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), static_cast<int>(this->etag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.State.etag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->etag(), output);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.State.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.State.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<State_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<State_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .dapr.StateOptions options = 5;
  if (this->has_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_options(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.State)
}

::google::protobuf::uint8* State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.State.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // .google.protobuf.Any value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  // string etag = 3;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), static_cast<int>(this->etag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.State.etag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->etag(), target);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.State.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.State.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<State_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<State_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .dapr.StateOptions options = 5;
  if (this->has_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_options(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.State)
  return target;
}

size_t State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> metadata = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::std::unique_ptr<State_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string etag = 3;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->etag());
  }

  // .google.protobuf.Any value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .dapr.StateOptions options = 5;
  if (this->has_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *options_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.State)
  GOOGLE_DCHECK_NE(&from, this);
  const State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.State)
    MergeFrom(*source);
  }
}

void State::MergeFrom(const State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.etag().size() > 0) {

    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  if (from.has_value()) {
    mutable_value()->::google::protobuf::Any::MergeFrom(from.value());
  }
  if (from.has_options()) {
    mutable_options()->::dapr::StateOptions::MergeFrom(from.options());
  }
}

void State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void State::CopyFrom(const State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool State::IsInitialized() const {
  return true;
}

void State::Swap(State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void State::InternalSwap(State* other) {
  using std::swap;
  metadata_.Swap(&other->metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  etag_.Swap(&other->etag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(options_, other->options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata State::GetMetadata() const {
  protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StateOptions::InitAsDefaultInstance() {
  ::dapr::_StateOptions_default_instance_._instance.get_mutable()->retrypolicy_ = const_cast< ::dapr::RetryPolicy*>(
      ::dapr::RetryPolicy::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateOptions::kConcurrencyFieldNumber;
const int StateOptions::kConsistencyFieldNumber;
const int StateOptions::kRetryPolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateOptions::StateOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fdapr_2eproto::scc_info_StateOptions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.StateOptions)
}
StateOptions::StateOptions(const StateOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  concurrency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.concurrency().size() > 0) {
    concurrency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.concurrency_);
  }
  consistency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.consistency().size() > 0) {
    consistency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consistency_);
  }
  if (from.has_retrypolicy()) {
    retrypolicy_ = new ::dapr::RetryPolicy(*from.retrypolicy_);
  } else {
    retrypolicy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.StateOptions)
}

void StateOptions::SharedCtor() {
  concurrency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retrypolicy_ = NULL;
}

StateOptions::~StateOptions() {
  // @@protoc_insertion_point(destructor:dapr.StateOptions)
  SharedDtor();
}

void StateOptions::SharedDtor() {
  concurrency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete retrypolicy_;
}

void StateOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StateOptions::descriptor() {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StateOptions& StateOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fdapr_2eproto::scc_info_StateOptions.base);
  return *internal_default_instance();
}


void StateOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.StateOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  concurrency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && retrypolicy_ != NULL) {
    delete retrypolicy_;
  }
  retrypolicy_ = NULL;
  _internal_metadata_.Clear();
}

bool StateOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.StateOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string concurrency = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_concurrency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->concurrency().data(), static_cast<int>(this->concurrency().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateOptions.concurrency"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string consistency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_consistency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->consistency().data(), static_cast<int>(this->consistency().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateOptions.consistency"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dapr.RetryPolicy retryPolicy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_retrypolicy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.StateOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.StateOptions)
  return false;
#undef DO_
}

void StateOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.StateOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string concurrency = 1;
  if (this->concurrency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concurrency().data(), static_cast<int>(this->concurrency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateOptions.concurrency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->concurrency(), output);
  }

  // string consistency = 2;
  if (this->consistency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consistency().data(), static_cast<int>(this->consistency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateOptions.consistency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->consistency(), output);
  }

  // .dapr.RetryPolicy retryPolicy = 3;
  if (this->has_retrypolicy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_retrypolicy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.StateOptions)
}

::google::protobuf::uint8* StateOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.StateOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string concurrency = 1;
  if (this->concurrency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concurrency().data(), static_cast<int>(this->concurrency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateOptions.concurrency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->concurrency(), target);
  }

  // string consistency = 2;
  if (this->consistency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consistency().data(), static_cast<int>(this->consistency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateOptions.consistency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->consistency(), target);
  }

  // .dapr.RetryPolicy retryPolicy = 3;
  if (this->has_retrypolicy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_retrypolicy(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.StateOptions)
  return target;
}

size_t StateOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.StateOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string concurrency = 1;
  if (this->concurrency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->concurrency());
  }

  // string consistency = 2;
  if (this->consistency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->consistency());
  }

  // .dapr.RetryPolicy retryPolicy = 3;
  if (this->has_retrypolicy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *retrypolicy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.StateOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const StateOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.StateOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.StateOptions)
    MergeFrom(*source);
  }
}

void StateOptions::MergeFrom(const StateOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.StateOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.concurrency().size() > 0) {

    concurrency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.concurrency_);
  }
  if (from.consistency().size() > 0) {

    consistency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consistency_);
  }
  if (from.has_retrypolicy()) {
    mutable_retrypolicy()->::dapr::RetryPolicy::MergeFrom(from.retrypolicy());
  }
}

void StateOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.StateOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateOptions::CopyFrom(const StateOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.StateOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateOptions::IsInitialized() const {
  return true;
}

void StateOptions::Swap(StateOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateOptions::InternalSwap(StateOptions* other) {
  using std::swap;
  concurrency_.Swap(&other->concurrency_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  consistency_.Swap(&other->consistency_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(retrypolicy_, other->retrypolicy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StateOptions::GetMetadata() const {
  protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RetryPolicy::InitAsDefaultInstance() {
  ::dapr::_RetryPolicy_default_instance_._instance.get_mutable()->interval_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void RetryPolicy::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetryPolicy::kThresholdFieldNumber;
const int RetryPolicy::kPatternFieldNumber;
const int RetryPolicy::kIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetryPolicy::RetryPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fdapr_2eproto::scc_info_RetryPolicy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.RetryPolicy)
}
RetryPolicy::RetryPolicy(const RetryPolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pattern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pattern().size() > 0) {
    pattern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pattern_);
  }
  if (from.has_interval()) {
    interval_ = new ::google::protobuf::Duration(*from.interval_);
  } else {
    interval_ = NULL;
  }
  threshold_ = from.threshold_;
  // @@protoc_insertion_point(copy_constructor:dapr.RetryPolicy)
}

void RetryPolicy::SharedCtor() {
  pattern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&threshold_) -
      reinterpret_cast<char*>(&interval_)) + sizeof(threshold_));
}

RetryPolicy::~RetryPolicy() {
  // @@protoc_insertion_point(destructor:dapr.RetryPolicy)
  SharedDtor();
}

void RetryPolicy::SharedDtor() {
  pattern_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete interval_;
}

void RetryPolicy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RetryPolicy::descriptor() {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RetryPolicy& RetryPolicy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fdapr_2eproto::scc_info_RetryPolicy.base);
  return *internal_default_instance();
}


void RetryPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.RetryPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  threshold_ = 0;
  _internal_metadata_.Clear();
}

bool RetryPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.RetryPolicy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 threshold = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pattern = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pattern()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pattern().data(), static_cast<int>(this->pattern().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.RetryPolicy.pattern"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration interval = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.RetryPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.RetryPolicy)
  return false;
#undef DO_
}

void RetryPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.RetryPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 threshold = 1;
  if (this->threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->threshold(), output);
  }

  // string pattern = 2;
  if (this->pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pattern().data(), static_cast<int>(this->pattern().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.RetryPolicy.pattern");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pattern(), output);
  }

  // .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_interval(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.RetryPolicy)
}

::google::protobuf::uint8* RetryPolicy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.RetryPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 threshold = 1;
  if (this->threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->threshold(), target);
  }

  // string pattern = 2;
  if (this->pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pattern().data(), static_cast<int>(this->pattern().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.RetryPolicy.pattern");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pattern(), target);
  }

  // .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_interval(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.RetryPolicy)
  return target;
}

size_t RetryPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.RetryPolicy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pattern = 2;
  if (this->pattern().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pattern());
  }

  // .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *interval_);
  }

  // int32 threshold = 1;
  if (this->threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->threshold());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RetryPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.RetryPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const RetryPolicy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RetryPolicy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.RetryPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.RetryPolicy)
    MergeFrom(*source);
  }
}

void RetryPolicy::MergeFrom(const RetryPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.RetryPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pattern().size() > 0) {

    pattern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pattern_);
  }
  if (from.has_interval()) {
    mutable_interval()->::google::protobuf::Duration::MergeFrom(from.interval());
  }
  if (from.threshold() != 0) {
    set_threshold(from.threshold());
  }
}

void RetryPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.RetryPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetryPolicy::CopyFrom(const RetryPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.RetryPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetryPolicy::IsInitialized() const {
  return true;
}

void RetryPolicy::Swap(RetryPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetryPolicy::InternalSwap(RetryPolicy* other) {
  using std::swap;
  pattern_.Swap(&other->pattern_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(interval_, other->interval_);
  swap(threshold_, other->threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RetryPolicy::GetMetadata() const {
  protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

StateRequest_MetadataEntry_DoNotUse::StateRequest_MetadataEntry_DoNotUse() {}
StateRequest_MetadataEntry_DoNotUse::StateRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void StateRequest_MetadataEntry_DoNotUse::MergeFrom(const StateRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata StateRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[15];
}
void StateRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void StateRequest::InitAsDefaultInstance() {
  ::dapr::_StateRequest_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::dapr::_StateRequest_default_instance_._instance.get_mutable()->options_ = const_cast< ::dapr::StateRequestOptions*>(
      ::dapr::StateRequestOptions::internal_default_instance());
}
void StateRequest::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateRequest::kKeyFieldNumber;
const int StateRequest::kValueFieldNumber;
const int StateRequest::kEtagFieldNumber;
const int StateRequest::kMetadataFieldNumber;
const int StateRequest::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateRequest::StateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fdapr_2eproto::scc_info_StateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.StateRequest)
}
StateRequest::StateRequest(const StateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.etag().size() > 0) {
    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  if (from.has_value()) {
    value_ = new ::google::protobuf::Any(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_options()) {
    options_ = new ::dapr::StateRequestOptions(*from.options_);
  } else {
    options_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.StateRequest)
}

void StateRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&options_) -
      reinterpret_cast<char*>(&value_)) + sizeof(options_));
}

StateRequest::~StateRequest() {
  // @@protoc_insertion_point(destructor:dapr.StateRequest)
  SharedDtor();
}

void StateRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete options_;
}

void StateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StateRequest::descriptor() {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StateRequest& StateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fdapr_2eproto::scc_info_StateRequest.base);
  return *internal_default_instance();
}


void StateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.StateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && options_ != NULL) {
    delete options_;
  }
  options_ = NULL;
  _internal_metadata_.Clear();
}

bool StateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.StateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateRequest.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string etag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->etag().data(), static_cast<int>(this->etag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateRequest.etag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> metadata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          StateRequest_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              StateRequest_MetadataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateRequest.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateRequest.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dapr.StateRequestOptions options = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.StateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.StateRequest)
  return false;
#undef DO_
}

void StateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.StateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // .google.protobuf.Any value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  // string etag = 3;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), static_cast<int>(this->etag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequest.etag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->etag(), output);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.StateRequest.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.StateRequest.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<StateRequest_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<StateRequest_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .dapr.StateRequestOptions options = 5;
  if (this->has_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_options(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.StateRequest)
}

::google::protobuf::uint8* StateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.StateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // .google.protobuf.Any value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  // string etag = 3;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), static_cast<int>(this->etag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequest.etag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->etag(), target);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.StateRequest.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.StateRequest.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<StateRequest_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<StateRequest_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .dapr.StateRequestOptions options = 5;
  if (this->has_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_options(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.StateRequest)
  return target;
}

size_t StateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.StateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> metadata = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::std::unique_ptr<StateRequest_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string etag = 3;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->etag());
  }

  // .google.protobuf.Any value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .dapr.StateRequestOptions options = 5;
  if (this->has_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *options_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.StateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.StateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.StateRequest)
    MergeFrom(*source);
  }
}

void StateRequest::MergeFrom(const StateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.StateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.etag().size() > 0) {

    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  if (from.has_value()) {
    mutable_value()->::google::protobuf::Any::MergeFrom(from.value());
  }
  if (from.has_options()) {
    mutable_options()->::dapr::StateRequestOptions::MergeFrom(from.options());
  }
}

void StateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.StateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateRequest::CopyFrom(const StateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.StateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateRequest::IsInitialized() const {
  return true;
}

void StateRequest::Swap(StateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateRequest::InternalSwap(StateRequest* other) {
  using std::swap;
  metadata_.Swap(&other->metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  etag_.Swap(&other->etag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(options_, other->options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StateRequest::GetMetadata() const {
  protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StateRequestOptions::InitAsDefaultInstance() {
  ::dapr::_StateRequestOptions_default_instance_._instance.get_mutable()->retrypolicy_ = const_cast< ::dapr::StateRetryPolicy*>(
      ::dapr::StateRetryPolicy::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateRequestOptions::kConcurrencyFieldNumber;
const int StateRequestOptions::kConsistencyFieldNumber;
const int StateRequestOptions::kRetryPolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateRequestOptions::StateRequestOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fdapr_2eproto::scc_info_StateRequestOptions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.StateRequestOptions)
}
StateRequestOptions::StateRequestOptions(const StateRequestOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  concurrency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.concurrency().size() > 0) {
    concurrency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.concurrency_);
  }
  consistency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.consistency().size() > 0) {
    consistency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consistency_);
  }
  if (from.has_retrypolicy()) {
    retrypolicy_ = new ::dapr::StateRetryPolicy(*from.retrypolicy_);
  } else {
    retrypolicy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.StateRequestOptions)
}

void StateRequestOptions::SharedCtor() {
  concurrency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retrypolicy_ = NULL;
}

StateRequestOptions::~StateRequestOptions() {
  // @@protoc_insertion_point(destructor:dapr.StateRequestOptions)
  SharedDtor();
}

void StateRequestOptions::SharedDtor() {
  concurrency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete retrypolicy_;
}

void StateRequestOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StateRequestOptions::descriptor() {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StateRequestOptions& StateRequestOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fdapr_2eproto::scc_info_StateRequestOptions.base);
  return *internal_default_instance();
}


void StateRequestOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.StateRequestOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  concurrency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && retrypolicy_ != NULL) {
    delete retrypolicy_;
  }
  retrypolicy_ = NULL;
  _internal_metadata_.Clear();
}

bool StateRequestOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.StateRequestOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string concurrency = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_concurrency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->concurrency().data(), static_cast<int>(this->concurrency().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateRequestOptions.concurrency"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string consistency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_consistency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->consistency().data(), static_cast<int>(this->consistency().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateRequestOptions.consistency"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dapr.StateRetryPolicy retryPolicy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_retrypolicy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.StateRequestOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.StateRequestOptions)
  return false;
#undef DO_
}

void StateRequestOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.StateRequestOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string concurrency = 1;
  if (this->concurrency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concurrency().data(), static_cast<int>(this->concurrency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequestOptions.concurrency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->concurrency(), output);
  }

  // string consistency = 2;
  if (this->consistency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consistency().data(), static_cast<int>(this->consistency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequestOptions.consistency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->consistency(), output);
  }

  // .dapr.StateRetryPolicy retryPolicy = 3;
  if (this->has_retrypolicy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_retrypolicy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.StateRequestOptions)
}

::google::protobuf::uint8* StateRequestOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.StateRequestOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string concurrency = 1;
  if (this->concurrency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concurrency().data(), static_cast<int>(this->concurrency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequestOptions.concurrency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->concurrency(), target);
  }

  // string consistency = 2;
  if (this->consistency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consistency().data(), static_cast<int>(this->consistency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequestOptions.consistency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->consistency(), target);
  }

  // .dapr.StateRetryPolicy retryPolicy = 3;
  if (this->has_retrypolicy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_retrypolicy(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.StateRequestOptions)
  return target;
}

size_t StateRequestOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.StateRequestOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string concurrency = 1;
  if (this->concurrency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->concurrency());
  }

  // string consistency = 2;
  if (this->consistency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->consistency());
  }

  // .dapr.StateRetryPolicy retryPolicy = 3;
  if (this->has_retrypolicy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *retrypolicy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateRequestOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.StateRequestOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const StateRequestOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateRequestOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.StateRequestOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.StateRequestOptions)
    MergeFrom(*source);
  }
}

void StateRequestOptions::MergeFrom(const StateRequestOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.StateRequestOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.concurrency().size() > 0) {

    concurrency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.concurrency_);
  }
  if (from.consistency().size() > 0) {

    consistency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consistency_);
  }
  if (from.has_retrypolicy()) {
    mutable_retrypolicy()->::dapr::StateRetryPolicy::MergeFrom(from.retrypolicy());
  }
}

void StateRequestOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.StateRequestOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateRequestOptions::CopyFrom(const StateRequestOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.StateRequestOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateRequestOptions::IsInitialized() const {
  return true;
}

void StateRequestOptions::Swap(StateRequestOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateRequestOptions::InternalSwap(StateRequestOptions* other) {
  using std::swap;
  concurrency_.Swap(&other->concurrency_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  consistency_.Swap(&other->consistency_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(retrypolicy_, other->retrypolicy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StateRequestOptions::GetMetadata() const {
  protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StateRetryPolicy::InitAsDefaultInstance() {
  ::dapr::_StateRetryPolicy_default_instance_._instance.get_mutable()->interval_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void StateRetryPolicy::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateRetryPolicy::kThresholdFieldNumber;
const int StateRetryPolicy::kPatternFieldNumber;
const int StateRetryPolicy::kIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateRetryPolicy::StateRetryPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fdapr_2eproto::scc_info_StateRetryPolicy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.StateRetryPolicy)
}
StateRetryPolicy::StateRetryPolicy(const StateRetryPolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pattern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pattern().size() > 0) {
    pattern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pattern_);
  }
  if (from.has_interval()) {
    interval_ = new ::google::protobuf::Duration(*from.interval_);
  } else {
    interval_ = NULL;
  }
  threshold_ = from.threshold_;
  // @@protoc_insertion_point(copy_constructor:dapr.StateRetryPolicy)
}

void StateRetryPolicy::SharedCtor() {
  pattern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&threshold_) -
      reinterpret_cast<char*>(&interval_)) + sizeof(threshold_));
}

StateRetryPolicy::~StateRetryPolicy() {
  // @@protoc_insertion_point(destructor:dapr.StateRetryPolicy)
  SharedDtor();
}

void StateRetryPolicy::SharedDtor() {
  pattern_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete interval_;
}

void StateRetryPolicy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StateRetryPolicy::descriptor() {
  ::protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StateRetryPolicy& StateRetryPolicy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fdapr_2eproto::scc_info_StateRetryPolicy.base);
  return *internal_default_instance();
}


void StateRetryPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.StateRetryPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  threshold_ = 0;
  _internal_metadata_.Clear();
}

bool StateRetryPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.StateRetryPolicy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 threshold = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pattern = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pattern()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pattern().data(), static_cast<int>(this->pattern().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateRetryPolicy.pattern"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration interval = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.StateRetryPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.StateRetryPolicy)
  return false;
#undef DO_
}

void StateRetryPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.StateRetryPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 threshold = 1;
  if (this->threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->threshold(), output);
  }

  // string pattern = 2;
  if (this->pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pattern().data(), static_cast<int>(this->pattern().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRetryPolicy.pattern");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pattern(), output);
  }

  // .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_interval(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.StateRetryPolicy)
}

::google::protobuf::uint8* StateRetryPolicy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.StateRetryPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 threshold = 1;
  if (this->threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->threshold(), target);
  }

  // string pattern = 2;
  if (this->pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pattern().data(), static_cast<int>(this->pattern().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRetryPolicy.pattern");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pattern(), target);
  }

  // .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_interval(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.StateRetryPolicy)
  return target;
}

size_t StateRetryPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.StateRetryPolicy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pattern = 2;
  if (this->pattern().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pattern());
  }

  // .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *interval_);
  }

  // int32 threshold = 1;
  if (this->threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->threshold());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateRetryPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.StateRetryPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const StateRetryPolicy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateRetryPolicy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.StateRetryPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.StateRetryPolicy)
    MergeFrom(*source);
  }
}

void StateRetryPolicy::MergeFrom(const StateRetryPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.StateRetryPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pattern().size() > 0) {

    pattern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pattern_);
  }
  if (from.has_interval()) {
    mutable_interval()->::google::protobuf::Duration::MergeFrom(from.interval());
  }
  if (from.threshold() != 0) {
    set_threshold(from.threshold());
  }
}

void StateRetryPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.StateRetryPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateRetryPolicy::CopyFrom(const StateRetryPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.StateRetryPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateRetryPolicy::IsInitialized() const {
  return true;
}

void StateRetryPolicy::Swap(StateRetryPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateRetryPolicy::InternalSwap(StateRetryPolicy* other) {
  using std::swap;
  pattern_.Swap(&other->pattern_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(interval_, other->interval_);
  swap(threshold_, other->threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StateRetryPolicy::GetMetadata() const {
  protobuf_dapr_2fdapr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fdapr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dapr
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::InvokeServiceResponseEnvelope* Arena::CreateMaybeMessage< ::dapr::InvokeServiceResponseEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::InvokeServiceResponseEnvelope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::DeleteStateEnvelope* Arena::CreateMaybeMessage< ::dapr::DeleteStateEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::DeleteStateEnvelope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::SaveStateEnvelope* Arena::CreateMaybeMessage< ::dapr::SaveStateEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::SaveStateEnvelope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::GetStateEnvelope* Arena::CreateMaybeMessage< ::dapr::GetStateEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::GetStateEnvelope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::GetStateResponseEnvelope* Arena::CreateMaybeMessage< ::dapr::GetStateResponseEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::GetStateResponseEnvelope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::InvokeBindingEnvelope* Arena::CreateMaybeMessage< ::dapr::InvokeBindingEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::InvokeBindingEnvelope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::InvokeServiceEnvelope* Arena::CreateMaybeMessage< ::dapr::InvokeServiceEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::InvokeServiceEnvelope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::PublishEventEnvelope* Arena::CreateMaybeMessage< ::dapr::PublishEventEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::PublishEventEnvelope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::State_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::State_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::State_MetadataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::State* Arena::CreateMaybeMessage< ::dapr::State >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::State >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::StateOptions* Arena::CreateMaybeMessage< ::dapr::StateOptions >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::StateOptions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::RetryPolicy* Arena::CreateMaybeMessage< ::dapr::RetryPolicy >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::RetryPolicy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::StateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::StateRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::StateRequest_MetadataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::StateRequest* Arena::CreateMaybeMessage< ::dapr::StateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::StateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::StateRequestOptions* Arena::CreateMaybeMessage< ::dapr::StateRequestOptions >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::StateRequestOptions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::StateRetryPolicy* Arena::CreateMaybeMessage< ::dapr::StateRetryPolicy >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::StateRetryPolicy >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
