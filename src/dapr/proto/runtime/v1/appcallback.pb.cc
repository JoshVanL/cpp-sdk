// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dapr/proto/runtime/v1/appcallback.proto

#include "dapr/proto/runtime/v1/appcallback.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_StateItem;
}  // namespace protobuf_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto
namespace protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BindingEventRequest_MetadataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TopicRule;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TopicSubscription_MetadataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TopicRoutes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TopicSubscription;
}  // namespace protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto
namespace dapr {
namespace proto {
namespace runtime {
namespace v1 {
class TopicEventRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopicEventRequest>
      _instance;
} _TopicEventRequest_default_instance_;
class TopicEventResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopicEventResponse>
      _instance;
} _TopicEventResponse_default_instance_;
class BindingEventRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BindingEventRequest_MetadataEntry_DoNotUse>
      _instance;
} _BindingEventRequest_MetadataEntry_DoNotUse_default_instance_;
class BindingEventRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BindingEventRequest>
      _instance;
} _BindingEventRequest_default_instance_;
class BindingEventResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BindingEventResponse>
      _instance;
} _BindingEventResponse_default_instance_;
class ListTopicSubscriptionsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListTopicSubscriptionsResponse>
      _instance;
} _ListTopicSubscriptionsResponse_default_instance_;
class TopicSubscription_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopicSubscription_MetadataEntry_DoNotUse>
      _instance;
} _TopicSubscription_MetadataEntry_DoNotUse_default_instance_;
class TopicSubscriptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopicSubscription>
      _instance;
} _TopicSubscription_default_instance_;
class TopicRoutesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopicRoutes>
      _instance;
} _TopicRoutes_default_instance_;
class TopicRuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TopicRule>
      _instance;
} _TopicRule_default_instance_;
class ListInputBindingsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInputBindingsResponse>
      _instance;
} _ListInputBindingsResponse_default_instance_;
}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace dapr
namespace protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto {
static void InitDefaultsTopicEventRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicEventRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicEventRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TopicEventRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TopicEventRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTopicEventRequest}, {}};

static void InitDefaultsTopicEventResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicEventResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicEventResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TopicEventResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TopicEventResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTopicEventResponse}, {}};

static void InitDefaultsBindingEventRequest_MetadataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_BindingEventRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BindingEventRequest_MetadataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBindingEventRequest_MetadataEntry_DoNotUse}, {}};

static void InitDefaultsBindingEventRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_BindingEventRequest_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::BindingEventRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::BindingEventRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BindingEventRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBindingEventRequest}, {
      &protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_BindingEventRequest_MetadataEntry_DoNotUse.base,}};

static void InitDefaultsBindingEventResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_BindingEventResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::BindingEventResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::BindingEventResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BindingEventResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBindingEventResponse}, {
      &protobuf_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto::scc_info_StateItem.base,}};

static void InitDefaultsListTopicSubscriptionsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_ListTopicSubscriptionsResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListTopicSubscriptionsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListTopicSubscriptionsResponse}, {
      &protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_TopicSubscription.base,}};

static void InitDefaultsTopicSubscription_MetadataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicSubscription_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse();
  }
  ::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TopicSubscription_MetadataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTopicSubscription_MetadataEntry_DoNotUse}, {}};

static void InitDefaultsTopicSubscription() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicSubscription_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicSubscription();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TopicSubscription::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TopicSubscription =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTopicSubscription}, {
      &protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_TopicSubscription_MetadataEntry_DoNotUse.base,
      &protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_TopicRoutes.base,}};

static void InitDefaultsTopicRoutes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicRoutes_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicRoutes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TopicRoutes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TopicRoutes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTopicRoutes}, {
      &protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_TopicRule.base,}};

static void InitDefaultsTopicRule() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_TopicRule_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::TopicRule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::TopicRule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TopicRule =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTopicRule}, {}};

static void InitDefaultsListInputBindingsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::proto::runtime::v1::_ListInputBindingsResponse_default_instance_;
    new (ptr) ::dapr::proto::runtime::v1::ListInputBindingsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::proto::runtime::v1::ListInputBindingsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInputBindingsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInputBindingsResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TopicEventRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TopicEventResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BindingEventRequest_MetadataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BindingEventRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BindingEventResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListTopicSubscriptionsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TopicSubscription_MetadataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TopicSubscription.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TopicRoutes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TopicRule.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInputBindingsResponse.base);
}

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, spec_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, data_content_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, pubsub_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventRequest, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicEventResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventRequest, metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventResponse, store_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventResponse, states_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventResponse, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventResponse, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::BindingEventResponse, concurrency_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse, subscriptions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription, pubsub_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription, topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription, routes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicSubscription, dead_letter_topic_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicRoutes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicRoutes, rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicRoutes, default__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicRule, match_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::TopicRule, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::ListInputBindingsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dapr::proto::runtime::v1::ListInputBindingsResponse, bindings_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dapr::proto::runtime::v1::TopicEventRequest)},
  { 14, -1, sizeof(::dapr::proto::runtime::v1::TopicEventResponse)},
  { 20, 27, sizeof(::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse)},
  { 29, -1, sizeof(::dapr::proto::runtime::v1::BindingEventRequest)},
  { 37, -1, sizeof(::dapr::proto::runtime::v1::BindingEventResponse)},
  { 47, -1, sizeof(::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse)},
  { 53, 60, sizeof(::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse)},
  { 62, -1, sizeof(::dapr::proto::runtime::v1::TopicSubscription)},
  { 72, -1, sizeof(::dapr::proto::runtime::v1::TopicRoutes)},
  { 79, -1, sizeof(::dapr::proto::runtime::v1::TopicRule)},
  { 86, -1, sizeof(::dapr::proto::runtime::v1::ListInputBindingsResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::proto::runtime::v1::_TopicEventRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::proto::runtime::v1::_TopicEventResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::proto::runtime::v1::_BindingEventRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::proto::runtime::v1::_BindingEventRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::proto::runtime::v1::_BindingEventResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::proto::runtime::v1::_ListTopicSubscriptionsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::proto::runtime::v1::_TopicSubscription_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::proto::runtime::v1::_TopicSubscription_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::proto::runtime::v1::_TopicRoutes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::proto::runtime::v1::_TopicRule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dapr::proto::runtime::v1::_ListInputBindingsResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "dapr/proto/runtime/v1/appcallback.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\'dapr/proto/runtime/v1/appcallback.prot"
      "o\022\025dapr.proto.runtime.v1\032\033google/protobu"
      "f/empty.proto\032!dapr/proto/common/v1/comm"
      "on.proto\"\256\001\n\021TopicEventRequest\022\n\n\002id\030\001 \001"
      "(\t\022\016\n\006source\030\002 \001(\t\022\014\n\004type\030\003 \001(\t\022\024\n\014spec"
      "_version\030\004 \001(\t\022\031\n\021data_content_type\030\005 \001("
      "\t\022\014\n\004data\030\007 \001(\014\022\r\n\005topic\030\006 \001(\t\022\023\n\013pubsub"
      "_name\030\010 \001(\t\022\014\n\004path\030\t \001(\t\"\246\001\n\022TopicEvent"
      "Response\022R\n\006status\030\001 \001(\0162B.dapr.proto.ru"
      "ntime.v1.TopicEventResponse.TopicEventRe"
      "sponseStatus\"<\n\030TopicEventResponseStatus"
      "\022\013\n\007SUCCESS\020\000\022\t\n\005RETRY\020\001\022\010\n\004DROP\020\002\"\256\001\n\023B"
      "indingEventRequest\022\014\n\004name\030\001 \001(\t\022\014\n\004data"
      "\030\002 \001(\014\022J\n\010metadata\030\003 \003(\01328.dapr.proto.ru"
      "ntime.v1.BindingEventRequest.MetadataEnt"
      "ry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
      "e\030\002 \001(\t:\0028\001\"\210\002\n\024BindingEventResponse\022\022\n\n"
      "store_name\030\001 \001(\t\022/\n\006states\030\002 \003(\0132\037.dapr."
      "proto.common.v1.StateItem\022\n\n\002to\030\003 \003(\t\022\014\n"
      "\004data\030\004 \001(\014\022X\n\013concurrency\030\005 \001(\0162C.dapr."
      "proto.runtime.v1.BindingEventResponse.Bi"
      "ndingEventConcurrency\"7\n\027BindingEventCon"
      "currency\022\016\n\nSEQUENTIAL\020\000\022\014\n\010PARALLEL\020\001\"a"
      "\n\036ListTopicSubscriptionsResponse\022\?\n\rsubs"
      "criptions\030\001 \003(\0132(.dapr.proto.runtime.v1."
      "TopicSubscription\"\201\002\n\021TopicSubscription\022"
      "\023\n\013pubsub_name\030\001 \001(\t\022\r\n\005topic\030\002 \001(\t\022H\n\010m"
      "etadata\030\003 \003(\01326.dapr.proto.runtime.v1.To"
      "picSubscription.MetadataEntry\0222\n\006routes\030"
      "\005 \001(\0132\".dapr.proto.runtime.v1.TopicRoute"
      "s\022\031\n\021dead_letter_topic\030\006 \001(\t\032/\n\rMetadata"
      "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"O\n"
      "\013TopicRoutes\022/\n\005rules\030\001 \003(\0132 .dapr.proto"
      ".runtime.v1.TopicRule\022\017\n\007default\030\002 \001(\t\"("
      "\n\tTopicRule\022\r\n\005match\030\001 \001(\t\022\014\n\004path\030\002 \001(\t"
      "\"-\n\031ListInputBindingsResponse\022\020\n\010binding"
      "s\030\001 \003(\t2\206\004\n\013AppCallback\022W\n\010OnInvoke\022#.da"
      "pr.proto.common.v1.InvokeRequest\032$.dapr."
      "proto.common.v1.InvokeResponse\"\000\022i\n\026List"
      "TopicSubscriptions\022\026.google.protobuf.Emp"
      "ty\0325.dapr.proto.runtime.v1.ListTopicSubs"
      "criptionsResponse\"\000\022e\n\014OnTopicEvent\022(.da"
      "pr.proto.runtime.v1.TopicEventRequest\032)."
      "dapr.proto.runtime.v1.TopicEventResponse"
      "\"\000\022_\n\021ListInputBindings\022\026.google.protobu"
      "f.Empty\0320.dapr.proto.runtime.v1.ListInpu"
      "tBindingsResponse\"\000\022k\n\016OnBindingEvent\022*."
      "dapr.proto.runtime.v1.BindingEventReques"
      "t\032+.dapr.proto.runtime.v1.BindingEventRe"
      "sponse\"\000By\n\nio.dapr.v1B\025DaprAppCallbackP"
      "rotosZ1github.com/dapr/dapr/pkg/proto/ru"
      "ntime/v1;runtime\252\002 Dapr.AppCallback.Auto"
      "gen.Grpc.v1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2099);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dapr/proto/runtime/v1/appcallback.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_dapr_2fproto_2fcommon_2fv1_2fcommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto
namespace dapr {
namespace proto {
namespace runtime {
namespace v1 {
const ::google::protobuf::EnumDescriptor* TopicEventResponse_TopicEventResponseStatus_descriptor() {
  protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_enum_descriptors[0];
}
bool TopicEventResponse_TopicEventResponseStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TopicEventResponse_TopicEventResponseStatus TopicEventResponse::SUCCESS;
const TopicEventResponse_TopicEventResponseStatus TopicEventResponse::RETRY;
const TopicEventResponse_TopicEventResponseStatus TopicEventResponse::DROP;
const TopicEventResponse_TopicEventResponseStatus TopicEventResponse::TopicEventResponseStatus_MIN;
const TopicEventResponse_TopicEventResponseStatus TopicEventResponse::TopicEventResponseStatus_MAX;
const int TopicEventResponse::TopicEventResponseStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BindingEventResponse_BindingEventConcurrency_descriptor() {
  protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_enum_descriptors[1];
}
bool BindingEventResponse_BindingEventConcurrency_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BindingEventResponse_BindingEventConcurrency BindingEventResponse::SEQUENTIAL;
const BindingEventResponse_BindingEventConcurrency BindingEventResponse::PARALLEL;
const BindingEventResponse_BindingEventConcurrency BindingEventResponse::BindingEventConcurrency_MIN;
const BindingEventResponse_BindingEventConcurrency BindingEventResponse::BindingEventConcurrency_MAX;
const int BindingEventResponse::BindingEventConcurrency_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void TopicEventRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicEventRequest::kIdFieldNumber;
const int TopicEventRequest::kSourceFieldNumber;
const int TopicEventRequest::kTypeFieldNumber;
const int TopicEventRequest::kSpecVersionFieldNumber;
const int TopicEventRequest::kDataContentTypeFieldNumber;
const int TopicEventRequest::kDataFieldNumber;
const int TopicEventRequest::kTopicFieldNumber;
const int TopicEventRequest::kPubsubNameFieldNumber;
const int TopicEventRequest::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicEventRequest::TopicEventRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_TopicEventRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.proto.runtime.v1.TopicEventRequest)
}
TopicEventRequest::TopicEventRequest(const TopicEventRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source().size() > 0) {
    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  spec_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.spec_version().size() > 0) {
    spec_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spec_version_);
  }
  data_content_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_content_type().size() > 0) {
    data_content_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_content_type_);
  }
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  pubsub_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pubsub_name().size() > 0) {
    pubsub_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubsub_name_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TopicEventRequest)
}

void TopicEventRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spec_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_content_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubsub_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TopicEventRequest::~TopicEventRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TopicEventRequest)
  SharedDtor();
}

void TopicEventRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spec_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_content_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubsub_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TopicEventRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopicEventRequest::descriptor() {
  ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopicEventRequest& TopicEventRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_TopicEventRequest.base);
  return *internal_default_instance();
}


void TopicEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TopicEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spec_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubsub_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TopicEventRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.proto.runtime.v1.TopicEventRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicEventRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source().data(), static_cast<int>(this->source().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicEventRequest.source"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicEventRequest.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string spec_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_spec_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->spec_version().data(), static_cast<int>(this->spec_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicEventRequest.spec_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data_content_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_content_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_content_type().data(), static_cast<int>(this->data_content_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicEventRequest.data_content_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string topic = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicEventRequest.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pubsub_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pubsub_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pubsub_name().data(), static_cast<int>(this->pubsub_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicEventRequest.pubsub_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicEventRequest.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.proto.runtime.v1.TopicEventRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.proto.runtime.v1.TopicEventRequest)
  return false;
#undef DO_
}

void TopicEventRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.proto.runtime.v1.TopicEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string source = 2;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->source(), output);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // string spec_version = 4;
  if (this->spec_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spec_version().data(), static_cast<int>(this->spec_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.spec_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->spec_version(), output);
  }

  // string data_content_type = 5;
  if (this->data_content_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_content_type().data(), static_cast<int>(this->data_content_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.data_content_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->data_content_type(), output);
  }

  // string topic = 6;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->topic(), output);
  }

  // bytes data = 7;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->data(), output);
  }

  // string pubsub_name = 8;
  if (this->pubsub_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pubsub_name().data(), static_cast<int>(this->pubsub_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.pubsub_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->pubsub_name(), output);
  }

  // string path = 9;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.proto.runtime.v1.TopicEventRequest)
}

::google::protobuf::uint8* TopicEventRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TopicEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string source = 2;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->source(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // string spec_version = 4;
  if (this->spec_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spec_version().data(), static_cast<int>(this->spec_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.spec_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->spec_version(), target);
  }

  // string data_content_type = 5;
  if (this->data_content_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_content_type().data(), static_cast<int>(this->data_content_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.data_content_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->data_content_type(), target);
  }

  // string topic = 6;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->topic(), target);
  }

  // bytes data = 7;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->data(), target);
  }

  // string pubsub_name = 8;
  if (this->pubsub_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pubsub_name().data(), static_cast<int>(this->pubsub_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.pubsub_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->pubsub_name(), target);
  }

  // string path = 9;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicEventRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TopicEventRequest)
  return target;
}

size_t TopicEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TopicEventRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string source = 2;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string spec_version = 4;
  if (this->spec_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->spec_version());
  }

  // string data_content_type = 5;
  if (this->data_content_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_content_type());
  }

  // string topic = 6;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // bytes data = 7;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string pubsub_name = 8;
  if (this->pubsub_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pubsub_name());
  }

  // string path = 9;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicEventRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TopicEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicEventRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicEventRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TopicEventRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TopicEventRequest)
    MergeFrom(*source);
  }
}

void TopicEventRequest::MergeFrom(const TopicEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TopicEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.source().size() > 0) {

    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.spec_version().size() > 0) {

    spec_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spec_version_);
  }
  if (from.data_content_type().size() > 0) {

    data_content_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_content_type_);
  }
  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.pubsub_name().size() > 0) {

    pubsub_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubsub_name_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void TopicEventRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TopicEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicEventRequest::CopyFrom(const TopicEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TopicEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicEventRequest::IsInitialized() const {
  return true;
}

void TopicEventRequest::Swap(TopicEventRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicEventRequest::InternalSwap(TopicEventRequest* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_.Swap(&other->source_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  spec_version_.Swap(&other->spec_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_content_type_.Swap(&other->data_content_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pubsub_name_.Swap(&other->pubsub_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopicEventRequest::GetMetadata() const {
  protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TopicEventResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicEventResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicEventResponse::TopicEventResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_TopicEventResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.proto.runtime.v1.TopicEventResponse)
}
TopicEventResponse::TopicEventResponse(const TopicEventResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TopicEventResponse)
}

void TopicEventResponse::SharedCtor() {
  status_ = 0;
}

TopicEventResponse::~TopicEventResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TopicEventResponse)
  SharedDtor();
}

void TopicEventResponse::SharedDtor() {
}

void TopicEventResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopicEventResponse::descriptor() {
  ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopicEventResponse& TopicEventResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_TopicEventResponse.base);
  return *internal_default_instance();
}


void TopicEventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TopicEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear();
}

bool TopicEventResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.proto.runtime.v1.TopicEventResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::dapr::proto::runtime::v1::TopicEventResponse_TopicEventResponseStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.proto.runtime.v1.TopicEventResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.proto.runtime.v1.TopicEventResponse)
  return false;
#undef DO_
}

void TopicEventResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.proto.runtime.v1.TopicEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.proto.runtime.v1.TopicEventResponse)
}

::google::protobuf::uint8* TopicEventResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TopicEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TopicEventResponse)
  return target;
}

size_t TopicEventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TopicEventResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .dapr.proto.runtime.v1.TopicEventResponse.TopicEventResponseStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicEventResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TopicEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicEventResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicEventResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TopicEventResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TopicEventResponse)
    MergeFrom(*source);
  }
}

void TopicEventResponse::MergeFrom(const TopicEventResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TopicEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    set_status(from.status());
  }
}

void TopicEventResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TopicEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicEventResponse::CopyFrom(const TopicEventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TopicEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicEventResponse::IsInitialized() const {
  return true;
}

void TopicEventResponse::Swap(TopicEventResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicEventResponse::InternalSwap(TopicEventResponse* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopicEventResponse::GetMetadata() const {
  protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

BindingEventRequest_MetadataEntry_DoNotUse::BindingEventRequest_MetadataEntry_DoNotUse() {}
BindingEventRequest_MetadataEntry_DoNotUse::BindingEventRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void BindingEventRequest_MetadataEntry_DoNotUse::MergeFrom(const BindingEventRequest_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata BindingEventRequest_MetadataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[2];
}
void BindingEventRequest_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void BindingEventRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindingEventRequest::kNameFieldNumber;
const int BindingEventRequest::kDataFieldNumber;
const int BindingEventRequest::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindingEventRequest::BindingEventRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_BindingEventRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.proto.runtime.v1.BindingEventRequest)
}
BindingEventRequest::BindingEventRequest(const BindingEventRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.BindingEventRequest)
}

void BindingEventRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BindingEventRequest::~BindingEventRequest() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.BindingEventRequest)
  SharedDtor();
}

void BindingEventRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BindingEventRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BindingEventRequest::descriptor() {
  ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BindingEventRequest& BindingEventRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_BindingEventRequest.base);
  return *internal_default_instance();
}


void BindingEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.BindingEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool BindingEventRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.proto.runtime.v1.BindingEventRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.BindingEventRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          BindingEventRequest_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              BindingEventRequest_MetadataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.BindingEventRequest.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.BindingEventRequest.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.proto.runtime.v1.BindingEventRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.proto.runtime.v1.BindingEventRequest)
  return false;
#undef DO_
}

void BindingEventRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.proto.runtime.v1.BindingEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BindingEventRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // map<string, string> metadata = 3;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.BindingEventRequest.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.BindingEventRequest.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<BindingEventRequest_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<BindingEventRequest_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.proto.runtime.v1.BindingEventRequest)
}

::google::protobuf::uint8* BindingEventRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.BindingEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BindingEventRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.BindingEventRequest.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.BindingEventRequest.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<BindingEventRequest_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<BindingEventRequest_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.BindingEventRequest)
  return target;
}

size_t BindingEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.BindingEventRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> metadata = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::std::unique_ptr<BindingEventRequest_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BindingEventRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.BindingEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BindingEventRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindingEventRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.BindingEventRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.BindingEventRequest)
    MergeFrom(*source);
  }
}

void BindingEventRequest::MergeFrom(const BindingEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.BindingEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void BindingEventRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.BindingEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindingEventRequest::CopyFrom(const BindingEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.BindingEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindingEventRequest::IsInitialized() const {
  return true;
}

void BindingEventRequest::Swap(BindingEventRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindingEventRequest::InternalSwap(BindingEventRequest* other) {
  using std::swap;
  metadata_.Swap(&other->metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BindingEventRequest::GetMetadata() const {
  protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BindingEventResponse::InitAsDefaultInstance() {
}
void BindingEventResponse::clear_states() {
  states_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindingEventResponse::kStoreNameFieldNumber;
const int BindingEventResponse::kStatesFieldNumber;
const int BindingEventResponse::kToFieldNumber;
const int BindingEventResponse::kDataFieldNumber;
const int BindingEventResponse::kConcurrencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindingEventResponse::BindingEventResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_BindingEventResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.proto.runtime.v1.BindingEventResponse)
}
BindingEventResponse::BindingEventResponse(const BindingEventResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      states_(from.states_),
      to_(from.to_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  store_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.store_name().size() > 0) {
    store_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.store_name_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  concurrency_ = from.concurrency_;
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.BindingEventResponse)
}

void BindingEventResponse::SharedCtor() {
  store_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  concurrency_ = 0;
}

BindingEventResponse::~BindingEventResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.BindingEventResponse)
  SharedDtor();
}

void BindingEventResponse::SharedDtor() {
  store_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BindingEventResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BindingEventResponse::descriptor() {
  ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BindingEventResponse& BindingEventResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_BindingEventResponse.base);
  return *internal_default_instance();
}


void BindingEventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.BindingEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  states_.Clear();
  to_.Clear();
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  concurrency_ = 0;
  _internal_metadata_.Clear();
}

bool BindingEventResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.proto.runtime.v1.BindingEventResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string store_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_store_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->store_name().data(), static_cast<int>(this->store_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.BindingEventResponse.store_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .dapr.proto.common.v1.StateItem states = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_states()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string to = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to(this->to_size() - 1).data(),
            static_cast<int>(this->to(this->to_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.BindingEventResponse.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dapr.proto.runtime.v1.BindingEventResponse.BindingEventConcurrency concurrency = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_concurrency(static_cast< ::dapr::proto::runtime::v1::BindingEventResponse_BindingEventConcurrency >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.proto.runtime.v1.BindingEventResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.proto.runtime.v1.BindingEventResponse)
  return false;
#undef DO_
}

void BindingEventResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.proto.runtime.v1.BindingEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->store_name().data(), static_cast<int>(this->store_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BindingEventResponse.store_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->store_name(), output);
  }

  // repeated .dapr.proto.common.v1.StateItem states = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->states_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->states(static_cast<int>(i)),
      output);
  }

  // repeated string to = 3;
  for (int i = 0, n = this->to_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to(i).data(), static_cast<int>(this->to(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BindingEventResponse.to");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->to(i), output);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  // .dapr.proto.runtime.v1.BindingEventResponse.BindingEventConcurrency concurrency = 5;
  if (this->concurrency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->concurrency(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.proto.runtime.v1.BindingEventResponse)
}

::google::protobuf::uint8* BindingEventResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.BindingEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->store_name().data(), static_cast<int>(this->store_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BindingEventResponse.store_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->store_name(), target);
  }

  // repeated .dapr.proto.common.v1.StateItem states = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->states_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->states(static_cast<int>(i)), deterministic, target);
  }

  // repeated string to = 3;
  for (int i = 0, n = this->to_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to(i).data(), static_cast<int>(this->to(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.BindingEventResponse.to");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->to(i), target);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  // .dapr.proto.runtime.v1.BindingEventResponse.BindingEventConcurrency concurrency = 5;
  if (this->concurrency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->concurrency(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.BindingEventResponse)
  return target;
}

size_t BindingEventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.BindingEventResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .dapr.proto.common.v1.StateItem states = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->states_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->states(static_cast<int>(i)));
    }
  }

  // repeated string to = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->to_size());
  for (int i = 0, n = this->to_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->to(i));
  }

  // string store_name = 1;
  if (this->store_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->store_name());
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .dapr.proto.runtime.v1.BindingEventResponse.BindingEventConcurrency concurrency = 5;
  if (this->concurrency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->concurrency());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BindingEventResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.BindingEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BindingEventResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindingEventResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.BindingEventResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.BindingEventResponse)
    MergeFrom(*source);
  }
}

void BindingEventResponse::MergeFrom(const BindingEventResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.BindingEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  states_.MergeFrom(from.states_);
  to_.MergeFrom(from.to_);
  if (from.store_name().size() > 0) {

    store_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.store_name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.concurrency() != 0) {
    set_concurrency(from.concurrency());
  }
}

void BindingEventResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.BindingEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindingEventResponse::CopyFrom(const BindingEventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.BindingEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindingEventResponse::IsInitialized() const {
  return true;
}

void BindingEventResponse::Swap(BindingEventResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindingEventResponse::InternalSwap(BindingEventResponse* other) {
  using std::swap;
  CastToBase(&states_)->InternalSwap(CastToBase(&other->states_));
  to_.InternalSwap(CastToBase(&other->to_));
  store_name_.Swap(&other->store_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(concurrency_, other->concurrency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BindingEventResponse::GetMetadata() const {
  protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListTopicSubscriptionsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListTopicSubscriptionsResponse::kSubscriptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListTopicSubscriptionsResponse::ListTopicSubscriptionsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_ListTopicSubscriptionsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
}
ListTopicSubscriptionsResponse::ListTopicSubscriptionsResponse(const ListTopicSubscriptionsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      subscriptions_(from.subscriptions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
}

void ListTopicSubscriptionsResponse::SharedCtor() {
}

ListTopicSubscriptionsResponse::~ListTopicSubscriptionsResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  SharedDtor();
}

void ListTopicSubscriptionsResponse::SharedDtor() {
}

void ListTopicSubscriptionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListTopicSubscriptionsResponse::descriptor() {
  ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListTopicSubscriptionsResponse& ListTopicSubscriptionsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_ListTopicSubscriptionsResponse.base);
  return *internal_default_instance();
}


void ListTopicSubscriptionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscriptions_.Clear();
  _internal_metadata_.Clear();
}

bool ListTopicSubscriptionsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dapr.proto.runtime.v1.TopicSubscription subscriptions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_subscriptions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  return false;
#undef DO_
}

void ListTopicSubscriptionsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.TopicSubscription subscriptions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscriptions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->subscriptions(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
}

::google::protobuf::uint8* ListTopicSubscriptionsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.TopicSubscription subscriptions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscriptions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->subscriptions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  return target;
}

size_t ListTopicSubscriptionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .dapr.proto.runtime.v1.TopicSubscription subscriptions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->subscriptions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subscriptions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTopicSubscriptionsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTopicSubscriptionsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListTopicSubscriptionsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
    MergeFrom(*source);
  }
}

void ListTopicSubscriptionsResponse::MergeFrom(const ListTopicSubscriptionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscriptions_.MergeFrom(from.subscriptions_);
}

void ListTopicSubscriptionsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTopicSubscriptionsResponse::CopyFrom(const ListTopicSubscriptionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.ListTopicSubscriptionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTopicSubscriptionsResponse::IsInitialized() const {
  return true;
}

void ListTopicSubscriptionsResponse::Swap(ListTopicSubscriptionsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListTopicSubscriptionsResponse::InternalSwap(ListTopicSubscriptionsResponse* other) {
  using std::swap;
  CastToBase(&subscriptions_)->InternalSwap(CastToBase(&other->subscriptions_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListTopicSubscriptionsResponse::GetMetadata() const {
  protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

TopicSubscription_MetadataEntry_DoNotUse::TopicSubscription_MetadataEntry_DoNotUse() {}
TopicSubscription_MetadataEntry_DoNotUse::TopicSubscription_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TopicSubscription_MetadataEntry_DoNotUse::MergeFrom(const TopicSubscription_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TopicSubscription_MetadataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[6];
}
void TopicSubscription_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void TopicSubscription::InitAsDefaultInstance() {
  ::dapr::proto::runtime::v1::_TopicSubscription_default_instance_._instance.get_mutable()->routes_ = const_cast< ::dapr::proto::runtime::v1::TopicRoutes*>(
      ::dapr::proto::runtime::v1::TopicRoutes::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicSubscription::kPubsubNameFieldNumber;
const int TopicSubscription::kTopicFieldNumber;
const int TopicSubscription::kMetadataFieldNumber;
const int TopicSubscription::kRoutesFieldNumber;
const int TopicSubscription::kDeadLetterTopicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicSubscription::TopicSubscription()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_TopicSubscription.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.proto.runtime.v1.TopicSubscription)
}
TopicSubscription::TopicSubscription(const TopicSubscription& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  pubsub_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pubsub_name().size() > 0) {
    pubsub_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubsub_name_);
  }
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  dead_letter_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dead_letter_topic().size() > 0) {
    dead_letter_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dead_letter_topic_);
  }
  if (from.has_routes()) {
    routes_ = new ::dapr::proto::runtime::v1::TopicRoutes(*from.routes_);
  } else {
    routes_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TopicSubscription)
}

void TopicSubscription::SharedCtor() {
  pubsub_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dead_letter_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routes_ = NULL;
}

TopicSubscription::~TopicSubscription() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TopicSubscription)
  SharedDtor();
}

void TopicSubscription::SharedDtor() {
  pubsub_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dead_letter_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete routes_;
}

void TopicSubscription::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopicSubscription::descriptor() {
  ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopicSubscription& TopicSubscription::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_TopicSubscription.base);
  return *internal_default_instance();
}


void TopicSubscription::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TopicSubscription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  pubsub_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dead_letter_topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && routes_ != NULL) {
    delete routes_;
  }
  routes_ = NULL;
  _internal_metadata_.Clear();
}

bool TopicSubscription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.proto.runtime.v1.TopicSubscription)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pubsub_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pubsub_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pubsub_name().data(), static_cast<int>(this->pubsub_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicSubscription.pubsub_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string topic = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicSubscription.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          TopicSubscription_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TopicSubscription_MetadataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicSubscription.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicSubscription.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dapr.proto.runtime.v1.TopicRoutes routes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_routes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dead_letter_topic = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dead_letter_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dead_letter_topic().data(), static_cast<int>(this->dead_letter_topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicSubscription.dead_letter_topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.proto.runtime.v1.TopicSubscription)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.proto.runtime.v1.TopicSubscription)
  return false;
#undef DO_
}

void TopicSubscription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.proto.runtime.v1.TopicSubscription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pubsub_name = 1;
  if (this->pubsub_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pubsub_name().data(), static_cast<int>(this->pubsub_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicSubscription.pubsub_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pubsub_name(), output);
  }

  // string topic = 2;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicSubscription.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->topic(), output);
  }

  // map<string, string> metadata = 3;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.TopicSubscription.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.TopicSubscription.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TopicSubscription_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TopicSubscription_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .dapr.proto.runtime.v1.TopicRoutes routes = 5;
  if (this->has_routes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_routes(), output);
  }

  // string dead_letter_topic = 6;
  if (this->dead_letter_topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dead_letter_topic().data(), static_cast<int>(this->dead_letter_topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicSubscription.dead_letter_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->dead_letter_topic(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.proto.runtime.v1.TopicSubscription)
}

::google::protobuf::uint8* TopicSubscription::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TopicSubscription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pubsub_name = 1;
  if (this->pubsub_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pubsub_name().data(), static_cast<int>(this->pubsub_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicSubscription.pubsub_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pubsub_name(), target);
  }

  // string topic = 2;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicSubscription.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->topic(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.TopicSubscription.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.proto.runtime.v1.TopicSubscription.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TopicSubscription_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TopicSubscription_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .dapr.proto.runtime.v1.TopicRoutes routes = 5;
  if (this->has_routes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_routes(), deterministic, target);
  }

  // string dead_letter_topic = 6;
  if (this->dead_letter_topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dead_letter_topic().data(), static_cast<int>(this->dead_letter_topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicSubscription.dead_letter_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->dead_letter_topic(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TopicSubscription)
  return target;
}

size_t TopicSubscription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TopicSubscription)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> metadata = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::std::unique_ptr<TopicSubscription_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string pubsub_name = 1;
  if (this->pubsub_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pubsub_name());
  }

  // string topic = 2;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // string dead_letter_topic = 6;
  if (this->dead_letter_topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dead_letter_topic());
  }

  // .dapr.proto.runtime.v1.TopicRoutes routes = 5;
  if (this->has_routes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *routes_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicSubscription::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TopicSubscription)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicSubscription* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicSubscription>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TopicSubscription)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TopicSubscription)
    MergeFrom(*source);
  }
}

void TopicSubscription::MergeFrom(const TopicSubscription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TopicSubscription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.pubsub_name().size() > 0) {

    pubsub_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubsub_name_);
  }
  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.dead_letter_topic().size() > 0) {

    dead_letter_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dead_letter_topic_);
  }
  if (from.has_routes()) {
    mutable_routes()->::dapr::proto::runtime::v1::TopicRoutes::MergeFrom(from.routes());
  }
}

void TopicSubscription::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TopicSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicSubscription::CopyFrom(const TopicSubscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TopicSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicSubscription::IsInitialized() const {
  return true;
}

void TopicSubscription::Swap(TopicSubscription* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicSubscription::InternalSwap(TopicSubscription* other) {
  using std::swap;
  metadata_.Swap(&other->metadata_);
  pubsub_name_.Swap(&other->pubsub_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dead_letter_topic_.Swap(&other->dead_letter_topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(routes_, other->routes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopicSubscription::GetMetadata() const {
  protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TopicRoutes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicRoutes::kRulesFieldNumber;
const int TopicRoutes::kDefaultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicRoutes::TopicRoutes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_TopicRoutes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.proto.runtime.v1.TopicRoutes)
}
TopicRoutes::TopicRoutes(const TopicRoutes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rules_(from.rules_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  default__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.default_().size() > 0) {
    default__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default__);
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TopicRoutes)
}

void TopicRoutes::SharedCtor() {
  default__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TopicRoutes::~TopicRoutes() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TopicRoutes)
  SharedDtor();
}

void TopicRoutes::SharedDtor() {
  default__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TopicRoutes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopicRoutes::descriptor() {
  ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopicRoutes& TopicRoutes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_TopicRoutes.base);
  return *internal_default_instance();
}


void TopicRoutes::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TopicRoutes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rules_.Clear();
  default__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TopicRoutes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.proto.runtime.v1.TopicRoutes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dapr.proto.runtime.v1.TopicRule rules = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string default = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_().data(), static_cast<int>(this->default_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicRoutes.default"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.proto.runtime.v1.TopicRoutes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.proto.runtime.v1.TopicRoutes)
  return false;
#undef DO_
}

void TopicRoutes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.proto.runtime.v1.TopicRoutes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.TopicRule rules = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->rules(static_cast<int>(i)),
      output);
  }

  // string default = 2;
  if (this->default_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_().data(), static_cast<int>(this->default_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicRoutes.default");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->default_(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.proto.runtime.v1.TopicRoutes)
}

::google::protobuf::uint8* TopicRoutes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TopicRoutes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dapr.proto.runtime.v1.TopicRule rules = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rules(static_cast<int>(i)), deterministic, target);
  }

  // string default = 2;
  if (this->default_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_().data(), static_cast<int>(this->default_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicRoutes.default");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->default_(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TopicRoutes)
  return target;
}

size_t TopicRoutes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TopicRoutes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .dapr.proto.runtime.v1.TopicRule rules = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rules_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rules(static_cast<int>(i)));
    }
  }

  // string default = 2;
  if (this->default_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->default_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicRoutes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TopicRoutes)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicRoutes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicRoutes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TopicRoutes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TopicRoutes)
    MergeFrom(*source);
  }
}

void TopicRoutes::MergeFrom(const TopicRoutes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TopicRoutes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rules_.MergeFrom(from.rules_);
  if (from.default_().size() > 0) {

    default__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default__);
  }
}

void TopicRoutes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TopicRoutes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicRoutes::CopyFrom(const TopicRoutes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TopicRoutes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicRoutes::IsInitialized() const {
  return true;
}

void TopicRoutes::Swap(TopicRoutes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicRoutes::InternalSwap(TopicRoutes* other) {
  using std::swap;
  CastToBase(&rules_)->InternalSwap(CastToBase(&other->rules_));
  default__.Swap(&other->default__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopicRoutes::GetMetadata() const {
  protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TopicRule::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicRule::kMatchFieldNumber;
const int TopicRule::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicRule::TopicRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_TopicRule.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.proto.runtime.v1.TopicRule)
}
TopicRule::TopicRule(const TopicRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  match_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.match().size() > 0) {
    match_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.match_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.TopicRule)
}

void TopicRule::SharedCtor() {
  match_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TopicRule::~TopicRule() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.TopicRule)
  SharedDtor();
}

void TopicRule::SharedDtor() {
  match_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TopicRule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TopicRule::descriptor() {
  ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopicRule& TopicRule::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_TopicRule.base);
  return *internal_default_instance();
}


void TopicRule::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.TopicRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  match_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TopicRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.proto.runtime.v1.TopicRule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string match = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_match()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->match().data(), static_cast<int>(this->match().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicRule.match"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.TopicRule.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.proto.runtime.v1.TopicRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.proto.runtime.v1.TopicRule)
  return false;
#undef DO_
}

void TopicRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.proto.runtime.v1.TopicRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string match = 1;
  if (this->match().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->match().data(), static_cast<int>(this->match().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicRule.match");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->match(), output);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicRule.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.proto.runtime.v1.TopicRule)
}

::google::protobuf::uint8* TopicRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.TopicRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string match = 1;
  if (this->match().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->match().data(), static_cast<int>(this->match().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicRule.match");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->match(), target);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.TopicRule.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.TopicRule)
  return target;
}

size_t TopicRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.TopicRule)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string match = 1;
  if (this->match().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->match());
  }

  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TopicRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.TopicRule)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.TopicRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.TopicRule)
    MergeFrom(*source);
  }
}

void TopicRule::MergeFrom(const TopicRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.TopicRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.match().size() > 0) {

    match_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.match_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void TopicRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.TopicRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicRule::CopyFrom(const TopicRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.TopicRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicRule::IsInitialized() const {
  return true;
}

void TopicRule::Swap(TopicRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicRule::InternalSwap(TopicRule* other) {
  using std::swap;
  match_.Swap(&other->match_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TopicRule::GetMetadata() const {
  protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInputBindingsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInputBindingsResponse::kBindingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInputBindingsResponse::ListInputBindingsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_ListInputBindingsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.proto.runtime.v1.ListInputBindingsResponse)
}
ListInputBindingsResponse::ListInputBindingsResponse(const ListInputBindingsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bindings_(from.bindings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapr.proto.runtime.v1.ListInputBindingsResponse)
}

void ListInputBindingsResponse::SharedCtor() {
}

ListInputBindingsResponse::~ListInputBindingsResponse() {
  // @@protoc_insertion_point(destructor:dapr.proto.runtime.v1.ListInputBindingsResponse)
  SharedDtor();
}

void ListInputBindingsResponse::SharedDtor() {
}

void ListInputBindingsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInputBindingsResponse::descriptor() {
  ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInputBindingsResponse& ListInputBindingsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::scc_info_ListInputBindingsResponse.base);
  return *internal_default_instance();
}


void ListInputBindingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bindings_.Clear();
  _internal_metadata_.Clear();
}

bool ListInputBindingsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string bindings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_bindings()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bindings(this->bindings_size() - 1).data(),
            static_cast<int>(this->bindings(this->bindings_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.proto.runtime.v1.ListInputBindingsResponse.bindings"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.proto.runtime.v1.ListInputBindingsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.proto.runtime.v1.ListInputBindingsResponse)
  return false;
#undef DO_
}

void ListInputBindingsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string bindings = 1;
  for (int i = 0, n = this->bindings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bindings(i).data(), static_cast<int>(this->bindings(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.ListInputBindingsResponse.bindings");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->bindings(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dapr.proto.runtime.v1.ListInputBindingsResponse)
}

::google::protobuf::uint8* ListInputBindingsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string bindings = 1;
  for (int i = 0, n = this->bindings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bindings(i).data(), static_cast<int>(this->bindings(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.proto.runtime.v1.ListInputBindingsResponse.bindings");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->bindings(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.proto.runtime.v1.ListInputBindingsResponse)
  return target;
}

size_t ListInputBindingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string bindings = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bindings_size());
  for (int i = 0, n = this->bindings_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->bindings(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInputBindingsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInputBindingsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInputBindingsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.proto.runtime.v1.ListInputBindingsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.proto.runtime.v1.ListInputBindingsResponse)
    MergeFrom(*source);
  }
}

void ListInputBindingsResponse::MergeFrom(const ListInputBindingsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bindings_.MergeFrom(from.bindings_);
}

void ListInputBindingsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInputBindingsResponse::CopyFrom(const ListInputBindingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.proto.runtime.v1.ListInputBindingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInputBindingsResponse::IsInitialized() const {
  return true;
}

void ListInputBindingsResponse::Swap(ListInputBindingsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInputBindingsResponse::InternalSwap(ListInputBindingsResponse* other) {
  using std::swap;
  bindings_.InternalSwap(CastToBase(&other->bindings_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInputBindingsResponse::GetMetadata() const {
  protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dapr_2fproto_2fruntime_2fv1_2fappcallback_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace dapr
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::proto::runtime::v1::TopicEventRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicEventRequest >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::proto::runtime::v1::TopicEventRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::proto::runtime::v1::TopicEventResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicEventResponse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::proto::runtime::v1::TopicEventResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::proto::runtime::v1::BindingEventRequest_MetadataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::proto::runtime::v1::BindingEventRequest* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::BindingEventRequest >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::proto::runtime::v1::BindingEventRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::proto::runtime::v1::BindingEventResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::BindingEventResponse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::proto::runtime::v1::BindingEventResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::proto::runtime::v1::ListTopicSubscriptionsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::proto::runtime::v1::TopicSubscription_MetadataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::proto::runtime::v1::TopicSubscription* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicSubscription >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::proto::runtime::v1::TopicSubscription >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::proto::runtime::v1::TopicRoutes* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicRoutes >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::proto::runtime::v1::TopicRoutes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::proto::runtime::v1::TopicRule* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::TopicRule >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::proto::runtime::v1::TopicRule >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapr::proto::runtime::v1::ListInputBindingsResponse* Arena::CreateMaybeMessage< ::dapr::proto::runtime::v1::ListInputBindingsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::proto::runtime::v1::ListInputBindingsResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
