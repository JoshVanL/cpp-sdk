// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dapr/proto/runtime/v1/dapr.proto

#ifndef PROTOBUF_INCLUDED_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto
#define PROTOBUF_INCLUDED_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/empty.pb.h>
#include "dapr/proto/common/v1/common.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto 

namespace protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[40];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto
namespace dapr {
namespace proto {
namespace runtime {
namespace v1 {
class BulkStateItem;
class BulkStateItemDefaultTypeInternal;
extern BulkStateItemDefaultTypeInternal _BulkStateItem_default_instance_;
class BulkStateItem_MetadataEntry_DoNotUse;
class BulkStateItem_MetadataEntry_DoNotUseDefaultTypeInternal;
extern BulkStateItem_MetadataEntry_DoNotUseDefaultTypeInternal _BulkStateItem_MetadataEntry_DoNotUse_default_instance_;
class DeleteStateRequest;
class DeleteStateRequestDefaultTypeInternal;
extern DeleteStateRequestDefaultTypeInternal _DeleteStateRequest_default_instance_;
class DeleteStateRequest_MetadataEntry_DoNotUse;
class DeleteStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern DeleteStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal _DeleteStateRequest_MetadataEntry_DoNotUse_default_instance_;
class ExecuteActorStateTransactionRequest;
class ExecuteActorStateTransactionRequestDefaultTypeInternal;
extern ExecuteActorStateTransactionRequestDefaultTypeInternal _ExecuteActorStateTransactionRequest_default_instance_;
class ExecuteStateTransactionRequest;
class ExecuteStateTransactionRequestDefaultTypeInternal;
extern ExecuteStateTransactionRequestDefaultTypeInternal _ExecuteStateTransactionRequest_default_instance_;
class ExecuteStateTransactionRequest_MetadataEntry_DoNotUse;
class ExecuteStateTransactionRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern ExecuteStateTransactionRequest_MetadataEntry_DoNotUseDefaultTypeInternal _ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_default_instance_;
class GetActorStateRequest;
class GetActorStateRequestDefaultTypeInternal;
extern GetActorStateRequestDefaultTypeInternal _GetActorStateRequest_default_instance_;
class GetActorStateResponse;
class GetActorStateResponseDefaultTypeInternal;
extern GetActorStateResponseDefaultTypeInternal _GetActorStateResponse_default_instance_;
class GetBulkSecretRequest;
class GetBulkSecretRequestDefaultTypeInternal;
extern GetBulkSecretRequestDefaultTypeInternal _GetBulkSecretRequest_default_instance_;
class GetBulkSecretRequest_MetadataEntry_DoNotUse;
class GetBulkSecretRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetBulkSecretRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetBulkSecretRequest_MetadataEntry_DoNotUse_default_instance_;
class GetBulkSecretResponse;
class GetBulkSecretResponseDefaultTypeInternal;
extern GetBulkSecretResponseDefaultTypeInternal _GetBulkSecretResponse_default_instance_;
class GetBulkSecretResponse_DataEntry_DoNotUse;
class GetBulkSecretResponse_DataEntry_DoNotUseDefaultTypeInternal;
extern GetBulkSecretResponse_DataEntry_DoNotUseDefaultTypeInternal _GetBulkSecretResponse_DataEntry_DoNotUse_default_instance_;
class GetBulkStateRequest;
class GetBulkStateRequestDefaultTypeInternal;
extern GetBulkStateRequestDefaultTypeInternal _GetBulkStateRequest_default_instance_;
class GetBulkStateRequest_MetadataEntry_DoNotUse;
class GetBulkStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetBulkStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetBulkStateRequest_MetadataEntry_DoNotUse_default_instance_;
class GetBulkStateResponse;
class GetBulkStateResponseDefaultTypeInternal;
extern GetBulkStateResponseDefaultTypeInternal _GetBulkStateResponse_default_instance_;
class GetSecretRequest;
class GetSecretRequestDefaultTypeInternal;
extern GetSecretRequestDefaultTypeInternal _GetSecretRequest_default_instance_;
class GetSecretRequest_MetadataEntry_DoNotUse;
class GetSecretRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetSecretRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetSecretRequest_MetadataEntry_DoNotUse_default_instance_;
class GetSecretResponse;
class GetSecretResponseDefaultTypeInternal;
extern GetSecretResponseDefaultTypeInternal _GetSecretResponse_default_instance_;
class GetSecretResponse_DataEntry_DoNotUse;
class GetSecretResponse_DataEntry_DoNotUseDefaultTypeInternal;
extern GetSecretResponse_DataEntry_DoNotUseDefaultTypeInternal _GetSecretResponse_DataEntry_DoNotUse_default_instance_;
class GetStateRequest;
class GetStateRequestDefaultTypeInternal;
extern GetStateRequestDefaultTypeInternal _GetStateRequest_default_instance_;
class GetStateRequest_MetadataEntry_DoNotUse;
class GetStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetStateRequest_MetadataEntry_DoNotUse_default_instance_;
class GetStateResponse;
class GetStateResponseDefaultTypeInternal;
extern GetStateResponseDefaultTypeInternal _GetStateResponse_default_instance_;
class GetStateResponse_MetadataEntry_DoNotUse;
class GetStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal _GetStateResponse_MetadataEntry_DoNotUse_default_instance_;
class InvokeActorRequest;
class InvokeActorRequestDefaultTypeInternal;
extern InvokeActorRequestDefaultTypeInternal _InvokeActorRequest_default_instance_;
class InvokeActorResponse;
class InvokeActorResponseDefaultTypeInternal;
extern InvokeActorResponseDefaultTypeInternal _InvokeActorResponse_default_instance_;
class InvokeBindingRequest;
class InvokeBindingRequestDefaultTypeInternal;
extern InvokeBindingRequestDefaultTypeInternal _InvokeBindingRequest_default_instance_;
class InvokeBindingRequest_MetadataEntry_DoNotUse;
class InvokeBindingRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern InvokeBindingRequest_MetadataEntry_DoNotUseDefaultTypeInternal _InvokeBindingRequest_MetadataEntry_DoNotUse_default_instance_;
class InvokeBindingResponse;
class InvokeBindingResponseDefaultTypeInternal;
extern InvokeBindingResponseDefaultTypeInternal _InvokeBindingResponse_default_instance_;
class InvokeBindingResponse_MetadataEntry_DoNotUse;
class InvokeBindingResponse_MetadataEntry_DoNotUseDefaultTypeInternal;
extern InvokeBindingResponse_MetadataEntry_DoNotUseDefaultTypeInternal _InvokeBindingResponse_MetadataEntry_DoNotUse_default_instance_;
class InvokeServiceRequest;
class InvokeServiceRequestDefaultTypeInternal;
extern InvokeServiceRequestDefaultTypeInternal _InvokeServiceRequest_default_instance_;
class PublishEventRequest;
class PublishEventRequestDefaultTypeInternal;
extern PublishEventRequestDefaultTypeInternal _PublishEventRequest_default_instance_;
class PublishEventRequest_MetadataEntry_DoNotUse;
class PublishEventRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern PublishEventRequest_MetadataEntry_DoNotUseDefaultTypeInternal _PublishEventRequest_MetadataEntry_DoNotUse_default_instance_;
class RegisterActorReminderRequest;
class RegisterActorReminderRequestDefaultTypeInternal;
extern RegisterActorReminderRequestDefaultTypeInternal _RegisterActorReminderRequest_default_instance_;
class RegisterActorTimerRequest;
class RegisterActorTimerRequestDefaultTypeInternal;
extern RegisterActorTimerRequestDefaultTypeInternal _RegisterActorTimerRequest_default_instance_;
class SaveStateRequest;
class SaveStateRequestDefaultTypeInternal;
extern SaveStateRequestDefaultTypeInternal _SaveStateRequest_default_instance_;
class TransactionalActorStateOperation;
class TransactionalActorStateOperationDefaultTypeInternal;
extern TransactionalActorStateOperationDefaultTypeInternal _TransactionalActorStateOperation_default_instance_;
class TransactionalStateOperation;
class TransactionalStateOperationDefaultTypeInternal;
extern TransactionalStateOperationDefaultTypeInternal _TransactionalStateOperation_default_instance_;
class UnregisterActorReminderRequest;
class UnregisterActorReminderRequestDefaultTypeInternal;
extern UnregisterActorReminderRequestDefaultTypeInternal _UnregisterActorReminderRequest_default_instance_;
class UnregisterActorTimerRequest;
class UnregisterActorTimerRequestDefaultTypeInternal;
extern UnregisterActorTimerRequestDefaultTypeInternal _UnregisterActorTimerRequest_default_instance_;
}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace dapr
namespace google {
namespace protobuf {
template<> ::dapr::proto::runtime::v1::BulkStateItem* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::BulkStateItem>(Arena*);
template<> ::dapr::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::DeleteStateRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::DeleteStateRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::ExecuteStateTransactionRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetActorStateRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetActorStateRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::GetActorStateResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetActorStateResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetBulkSecretRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetBulkSecretRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::GetBulkSecretRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetBulkSecretRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetBulkSecretResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetBulkSecretResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetBulkSecretResponse_DataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetBulkSecretResponse_DataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetBulkStateRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetBulkStateRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetBulkStateResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetBulkStateResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetSecretRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetSecretRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::GetSecretRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetSecretRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetSecretResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetSecretResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetSecretResponse_DataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetSecretResponse_DataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetStateRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetStateRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetStateResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetStateResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::InvokeActorRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::InvokeActorRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::InvokeActorResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::InvokeActorResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::InvokeBindingRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::InvokeBindingRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::InvokeBindingResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::InvokeBindingResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::InvokeServiceRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::InvokeServiceRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::PublishEventRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::PublishEventRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::RegisterActorReminderRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::RegisterActorReminderRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::RegisterActorTimerRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::RegisterActorTimerRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::SaveStateRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SaveStateRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::TransactionalActorStateOperation* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::TransactionalActorStateOperation>(Arena*);
template<> ::dapr::proto::runtime::v1::TransactionalStateOperation* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::TransactionalStateOperation>(Arena*);
template<> ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::UnregisterActorReminderRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::UnregisterActorTimerRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dapr {
namespace proto {
namespace runtime {
namespace v1 {

// ===================================================================

class InvokeServiceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.InvokeServiceRequest) */ {
 public:
  InvokeServiceRequest();
  virtual ~InvokeServiceRequest();

  InvokeServiceRequest(const InvokeServiceRequest& from);

  inline InvokeServiceRequest& operator=(const InvokeServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvokeServiceRequest(InvokeServiceRequest&& from) noexcept
    : InvokeServiceRequest() {
    *this = ::std::move(from);
  }

  inline InvokeServiceRequest& operator=(InvokeServiceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvokeServiceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvokeServiceRequest* internal_default_instance() {
    return reinterpret_cast<const InvokeServiceRequest*>(
               &_InvokeServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(InvokeServiceRequest* other);
  friend void swap(InvokeServiceRequest& a, InvokeServiceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvokeServiceRequest* New() const final {
    return CreateMaybeMessage<InvokeServiceRequest>(NULL);
  }

  InvokeServiceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InvokeServiceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InvokeServiceRequest& from);
  void MergeFrom(const InvokeServiceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeServiceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .dapr.proto.common.v1.InvokeRequest message = 3;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  private:
  const ::dapr::proto::common::v1::InvokeRequest& _internal_message() const;
  public:
  const ::dapr::proto::common::v1::InvokeRequest& message() const;
  ::dapr::proto::common::v1::InvokeRequest* release_message();
  ::dapr::proto::common::v1::InvokeRequest* mutable_message();
  void set_allocated_message(::dapr::proto::common::v1::InvokeRequest* message);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.InvokeServiceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::dapr::proto::common::v1::InvokeRequest* message_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetStateRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetStateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetStateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetStateRequest_MetadataEntry_DoNotUse();
  GetStateRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetStateRequest_MetadataEntry_DoNotUse& other);
  static const GetStateRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetStateRequest_MetadataEntry_DoNotUse*>(&_GetStateRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetStateRequest) */ {
 public:
  GetStateRequest();
  virtual ~GetStateRequest();

  GetStateRequest(const GetStateRequest& from);

  inline GetStateRequest& operator=(const GetStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetStateRequest(GetStateRequest&& from) noexcept
    : GetStateRequest() {
    *this = ::std::move(from);
  }

  inline GetStateRequest& operator=(GetStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetStateRequest* internal_default_instance() {
    return reinterpret_cast<const GetStateRequest*>(
               &_GetStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetStateRequest* other);
  friend void swap(GetStateRequest& a, GetStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetStateRequest* New() const final {
    return CreateMaybeMessage<GetStateRequest>(NULL);
  }

  GetStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetStateRequest& from);
  void MergeFrom(const GetStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 4;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // .dapr.proto.common.v1.StateOptions.StateConsistency consistency = 3;
  void clear_consistency();
  static const int kConsistencyFieldNumber = 3;
  ::dapr::proto::common::v1::StateOptions_StateConsistency consistency() const;
  void set_consistency(::dapr::proto::common::v1::StateOptions_StateConsistency value);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetStateRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  int consistency_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetBulkStateRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetBulkStateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetBulkStateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetBulkStateRequest_MetadataEntry_DoNotUse();
  GetBulkStateRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetBulkStateRequest_MetadataEntry_DoNotUse& other);
  static const GetBulkStateRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetBulkStateRequest_MetadataEntry_DoNotUse*>(&_GetBulkStateRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetBulkStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetBulkStateRequest) */ {
 public:
  GetBulkStateRequest();
  virtual ~GetBulkStateRequest();

  GetBulkStateRequest(const GetBulkStateRequest& from);

  inline GetBulkStateRequest& operator=(const GetBulkStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBulkStateRequest(GetBulkStateRequest&& from) noexcept
    : GetBulkStateRequest() {
    *this = ::std::move(from);
  }

  inline GetBulkStateRequest& operator=(GetBulkStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBulkStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetBulkStateRequest* internal_default_instance() {
    return reinterpret_cast<const GetBulkStateRequest*>(
               &_GetBulkStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(GetBulkStateRequest* other);
  friend void swap(GetBulkStateRequest& a, GetBulkStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBulkStateRequest* New() const final {
    return CreateMaybeMessage<GetBulkStateRequest>(NULL);
  }

  GetBulkStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetBulkStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetBulkStateRequest& from);
  void MergeFrom(const GetBulkStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBulkStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated string keys = 2;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 2;
  const ::std::string& keys(int index) const;
  ::std::string* mutable_keys(int index);
  void set_keys(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_keys(int index, ::std::string&& value);
  #endif
  void set_keys(int index, const char* value);
  void set_keys(int index, const char* value, size_t size);
  ::std::string* add_keys();
  void add_keys(const ::std::string& value);
  #if LANG_CXX11
  void add_keys(::std::string&& value);
  #endif
  void add_keys(const char* value);
  void add_keys(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_keys();

  // map<string, string> metadata = 4;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // int32 parallelism = 3;
  void clear_parallelism();
  static const int kParallelismFieldNumber = 3;
  ::google::protobuf::int32 parallelism() const;
  void set_parallelism(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetBulkStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> keys_;
  ::google::protobuf::internal::MapField<
      GetBulkStateRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  ::google::protobuf::int32 parallelism_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetBulkStateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetBulkStateResponse) */ {
 public:
  GetBulkStateResponse();
  virtual ~GetBulkStateResponse();

  GetBulkStateResponse(const GetBulkStateResponse& from);

  inline GetBulkStateResponse& operator=(const GetBulkStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBulkStateResponse(GetBulkStateResponse&& from) noexcept
    : GetBulkStateResponse() {
    *this = ::std::move(from);
  }

  inline GetBulkStateResponse& operator=(GetBulkStateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBulkStateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetBulkStateResponse* internal_default_instance() {
    return reinterpret_cast<const GetBulkStateResponse*>(
               &_GetBulkStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(GetBulkStateResponse* other);
  friend void swap(GetBulkStateResponse& a, GetBulkStateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBulkStateResponse* New() const final {
    return CreateMaybeMessage<GetBulkStateResponse>(NULL);
  }

  GetBulkStateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetBulkStateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetBulkStateResponse& from);
  void MergeFrom(const GetBulkStateResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBulkStateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dapr.proto.runtime.v1.BulkStateItem items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  ::dapr::proto::runtime::v1::BulkStateItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkStateItem >*
      mutable_items();
  const ::dapr::proto::runtime::v1::BulkStateItem& items(int index) const;
  ::dapr::proto::runtime::v1::BulkStateItem* add_items();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkStateItem >&
      items() const;

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetBulkStateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkStateItem > items_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkStateItem_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<BulkStateItem_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<BulkStateItem_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  BulkStateItem_MetadataEntry_DoNotUse();
  BulkStateItem_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const BulkStateItem_MetadataEntry_DoNotUse& other);
  static const BulkStateItem_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const BulkStateItem_MetadataEntry_DoNotUse*>(&_BulkStateItem_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class BulkStateItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.BulkStateItem) */ {
 public:
  BulkStateItem();
  virtual ~BulkStateItem();

  BulkStateItem(const BulkStateItem& from);

  inline BulkStateItem& operator=(const BulkStateItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkStateItem(BulkStateItem&& from) noexcept
    : BulkStateItem() {
    *this = ::std::move(from);
  }

  inline BulkStateItem& operator=(BulkStateItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkStateItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkStateItem* internal_default_instance() {
    return reinterpret_cast<const BulkStateItem*>(
               &_BulkStateItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(BulkStateItem* other);
  friend void swap(BulkStateItem& a, BulkStateItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkStateItem* New() const final {
    return CreateMaybeMessage<BulkStateItem>(NULL);
  }

  BulkStateItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkStateItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkStateItem& from);
  void MergeFrom(const BulkStateItem& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkStateItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 5;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string etag = 3;
  void clear_etag();
  static const int kEtagFieldNumber = 3;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // string error = 4;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.BulkStateItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      BulkStateItem_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetStateResponse_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetStateResponse_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetStateResponse_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetStateResponse_MetadataEntry_DoNotUse();
  GetStateResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetStateResponse_MetadataEntry_DoNotUse& other);
  static const GetStateResponse_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetStateResponse_MetadataEntry_DoNotUse*>(&_GetStateResponse_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetStateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetStateResponse) */ {
 public:
  GetStateResponse();
  virtual ~GetStateResponse();

  GetStateResponse(const GetStateResponse& from);

  inline GetStateResponse& operator=(const GetStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetStateResponse(GetStateResponse&& from) noexcept
    : GetStateResponse() {
    *this = ::std::move(from);
  }

  inline GetStateResponse& operator=(GetStateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetStateResponse* internal_default_instance() {
    return reinterpret_cast<const GetStateResponse*>(
               &_GetStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(GetStateResponse* other);
  friend void swap(GetStateResponse& a, GetStateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetStateResponse* New() const final {
    return CreateMaybeMessage<GetStateResponse>(NULL);
  }

  GetStateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetStateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetStateResponse& from);
  void MergeFrom(const GetStateResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 3;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string etag = 2;
  void clear_etag();
  static const int kEtagFieldNumber = 2;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetStateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetStateResponse_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteStateRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<DeleteStateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<DeleteStateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  DeleteStateRequest_MetadataEntry_DoNotUse();
  DeleteStateRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const DeleteStateRequest_MetadataEntry_DoNotUse& other);
  static const DeleteStateRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DeleteStateRequest_MetadataEntry_DoNotUse*>(&_DeleteStateRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class DeleteStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.DeleteStateRequest) */ {
 public:
  DeleteStateRequest();
  virtual ~DeleteStateRequest();

  DeleteStateRequest(const DeleteStateRequest& from);

  inline DeleteStateRequest& operator=(const DeleteStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteStateRequest(DeleteStateRequest&& from) noexcept
    : DeleteStateRequest() {
    *this = ::std::move(from);
  }

  inline DeleteStateRequest& operator=(DeleteStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteStateRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteStateRequest*>(
               &_DeleteStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(DeleteStateRequest* other);
  friend void swap(DeleteStateRequest& a, DeleteStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteStateRequest* New() const final {
    return CreateMaybeMessage<DeleteStateRequest>(NULL);
  }

  DeleteStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteStateRequest& from);
  void MergeFrom(const DeleteStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 5;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string etag = 3;
  void clear_etag();
  static const int kEtagFieldNumber = 3;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // .dapr.proto.common.v1.StateOptions options = 4;
  bool has_options() const;
  void clear_options();
  static const int kOptionsFieldNumber = 4;
  private:
  const ::dapr::proto::common::v1::StateOptions& _internal_options() const;
  public:
  const ::dapr::proto::common::v1::StateOptions& options() const;
  ::dapr::proto::common::v1::StateOptions* release_options();
  ::dapr::proto::common::v1::StateOptions* mutable_options();
  void set_allocated_options(::dapr::proto::common::v1::StateOptions* options);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.DeleteStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      DeleteStateRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::dapr::proto::common::v1::StateOptions* options_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SaveStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SaveStateRequest) */ {
 public:
  SaveStateRequest();
  virtual ~SaveStateRequest();

  SaveStateRequest(const SaveStateRequest& from);

  inline SaveStateRequest& operator=(const SaveStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SaveStateRequest(SaveStateRequest&& from) noexcept
    : SaveStateRequest() {
    *this = ::std::move(from);
  }

  inline SaveStateRequest& operator=(SaveStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SaveStateRequest* internal_default_instance() {
    return reinterpret_cast<const SaveStateRequest*>(
               &_SaveStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(SaveStateRequest* other);
  friend void swap(SaveStateRequest& a, SaveStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SaveStateRequest* New() const final {
    return CreateMaybeMessage<SaveStateRequest>(NULL);
  }

  SaveStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SaveStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SaveStateRequest& from);
  void MergeFrom(const SaveStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SaveStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dapr.proto.common.v1.StateItem states = 2;
  int states_size() const;
  void clear_states();
  static const int kStatesFieldNumber = 2;
  ::dapr::proto::common::v1::StateItem* mutable_states(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >*
      mutable_states();
  const ::dapr::proto::common::v1::StateItem& states(int index) const;
  ::dapr::proto::common::v1::StateItem* add_states();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >&
      states() const;

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SaveStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem > states_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PublishEventRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PublishEventRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PublishEventRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  PublishEventRequest_MetadataEntry_DoNotUse();
  PublishEventRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PublishEventRequest_MetadataEntry_DoNotUse& other);
  static const PublishEventRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PublishEventRequest_MetadataEntry_DoNotUse*>(&_PublishEventRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PublishEventRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.PublishEventRequest) */ {
 public:
  PublishEventRequest();
  virtual ~PublishEventRequest();

  PublishEventRequest(const PublishEventRequest& from);

  inline PublishEventRequest& operator=(const PublishEventRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublishEventRequest(PublishEventRequest&& from) noexcept
    : PublishEventRequest() {
    *this = ::std::move(from);
  }

  inline PublishEventRequest& operator=(PublishEventRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishEventRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PublishEventRequest* internal_default_instance() {
    return reinterpret_cast<const PublishEventRequest*>(
               &_PublishEventRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(PublishEventRequest* other);
  friend void swap(PublishEventRequest& a, PublishEventRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublishEventRequest* New() const final {
    return CreateMaybeMessage<PublishEventRequest>(NULL);
  }

  PublishEventRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PublishEventRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PublishEventRequest& from);
  void MergeFrom(const PublishEventRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PublishEventRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 5;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string pubsub_name = 1;
  void clear_pubsub_name();
  static const int kPubsubNameFieldNumber = 1;
  const ::std::string& pubsub_name() const;
  void set_pubsub_name(const ::std::string& value);
  #if LANG_CXX11
  void set_pubsub_name(::std::string&& value);
  #endif
  void set_pubsub_name(const char* value);
  void set_pubsub_name(const char* value, size_t size);
  ::std::string* mutable_pubsub_name();
  ::std::string* release_pubsub_name();
  void set_allocated_pubsub_name(::std::string* pubsub_name);

  // string topic = 2;
  void clear_topic();
  static const int kTopicFieldNumber = 2;
  const ::std::string& topic() const;
  void set_topic(const ::std::string& value);
  #if LANG_CXX11
  void set_topic(::std::string&& value);
  #endif
  void set_topic(const char* value);
  void set_topic(const char* value, size_t size);
  ::std::string* mutable_topic();
  ::std::string* release_topic();
  void set_allocated_topic(::std::string* topic);

  // bytes data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string data_content_type = 4;
  void clear_data_content_type();
  static const int kDataContentTypeFieldNumber = 4;
  const ::std::string& data_content_type() const;
  void set_data_content_type(const ::std::string& value);
  #if LANG_CXX11
  void set_data_content_type(::std::string&& value);
  #endif
  void set_data_content_type(const char* value);
  void set_data_content_type(const char* value, size_t size);
  ::std::string* mutable_data_content_type();
  ::std::string* release_data_content_type();
  void set_allocated_data_content_type(::std::string* data_content_type);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.PublishEventRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PublishEventRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr pubsub_name_;
  ::google::protobuf::internal::ArenaStringPtr topic_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr data_content_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvokeBindingRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<InvokeBindingRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<InvokeBindingRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  InvokeBindingRequest_MetadataEntry_DoNotUse();
  InvokeBindingRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const InvokeBindingRequest_MetadataEntry_DoNotUse& other);
  static const InvokeBindingRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const InvokeBindingRequest_MetadataEntry_DoNotUse*>(&_InvokeBindingRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class InvokeBindingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.InvokeBindingRequest) */ {
 public:
  InvokeBindingRequest();
  virtual ~InvokeBindingRequest();

  InvokeBindingRequest(const InvokeBindingRequest& from);

  inline InvokeBindingRequest& operator=(const InvokeBindingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvokeBindingRequest(InvokeBindingRequest&& from) noexcept
    : InvokeBindingRequest() {
    *this = ::std::move(from);
  }

  inline InvokeBindingRequest& operator=(InvokeBindingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvokeBindingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvokeBindingRequest* internal_default_instance() {
    return reinterpret_cast<const InvokeBindingRequest*>(
               &_InvokeBindingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(InvokeBindingRequest* other);
  friend void swap(InvokeBindingRequest& a, InvokeBindingRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvokeBindingRequest* New() const final {
    return CreateMaybeMessage<InvokeBindingRequest>(NULL);
  }

  InvokeBindingRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InvokeBindingRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InvokeBindingRequest& from);
  void MergeFrom(const InvokeBindingRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeBindingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 3;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string operation = 4;
  void clear_operation();
  static const int kOperationFieldNumber = 4;
  const ::std::string& operation() const;
  void set_operation(const ::std::string& value);
  #if LANG_CXX11
  void set_operation(::std::string&& value);
  #endif
  void set_operation(const char* value);
  void set_operation(const char* value, size_t size);
  ::std::string* mutable_operation();
  ::std::string* release_operation();
  void set_allocated_operation(::std::string* operation);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.InvokeBindingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      InvokeBindingRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr operation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvokeBindingResponse_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<InvokeBindingResponse_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<InvokeBindingResponse_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  InvokeBindingResponse_MetadataEntry_DoNotUse();
  InvokeBindingResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const InvokeBindingResponse_MetadataEntry_DoNotUse& other);
  static const InvokeBindingResponse_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const InvokeBindingResponse_MetadataEntry_DoNotUse*>(&_InvokeBindingResponse_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class InvokeBindingResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.InvokeBindingResponse) */ {
 public:
  InvokeBindingResponse();
  virtual ~InvokeBindingResponse();

  InvokeBindingResponse(const InvokeBindingResponse& from);

  inline InvokeBindingResponse& operator=(const InvokeBindingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvokeBindingResponse(InvokeBindingResponse&& from) noexcept
    : InvokeBindingResponse() {
    *this = ::std::move(from);
  }

  inline InvokeBindingResponse& operator=(InvokeBindingResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvokeBindingResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvokeBindingResponse* internal_default_instance() {
    return reinterpret_cast<const InvokeBindingResponse*>(
               &_InvokeBindingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(InvokeBindingResponse* other);
  friend void swap(InvokeBindingResponse& a, InvokeBindingResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvokeBindingResponse* New() const final {
    return CreateMaybeMessage<InvokeBindingResponse>(NULL);
  }

  InvokeBindingResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InvokeBindingResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InvokeBindingResponse& from);
  void MergeFrom(const InvokeBindingResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeBindingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 2;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.InvokeBindingResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      InvokeBindingResponse_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSecretRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetSecretRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetSecretRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetSecretRequest_MetadataEntry_DoNotUse();
  GetSecretRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetSecretRequest_MetadataEntry_DoNotUse& other);
  static const GetSecretRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetSecretRequest_MetadataEntry_DoNotUse*>(&_GetSecretRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetSecretRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetSecretRequest) */ {
 public:
  GetSecretRequest();
  virtual ~GetSecretRequest();

  GetSecretRequest(const GetSecretRequest& from);

  inline GetSecretRequest& operator=(const GetSecretRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSecretRequest(GetSecretRequest&& from) noexcept
    : GetSecretRequest() {
    *this = ::std::move(from);
  }

  inline GetSecretRequest& operator=(GetSecretRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSecretRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSecretRequest* internal_default_instance() {
    return reinterpret_cast<const GetSecretRequest*>(
               &_GetSecretRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(GetSecretRequest* other);
  friend void swap(GetSecretRequest& a, GetSecretRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSecretRequest* New() const final {
    return CreateMaybeMessage<GetSecretRequest>(NULL);
  }

  GetSecretRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetSecretRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetSecretRequest& from);
  void MergeFrom(const GetSecretRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSecretRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 3;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetSecretRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetSecretRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSecretResponse_DataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetSecretResponse_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetSecretResponse_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetSecretResponse_DataEntry_DoNotUse();
  GetSecretResponse_DataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetSecretResponse_DataEntry_DoNotUse& other);
  static const GetSecretResponse_DataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetSecretResponse_DataEntry_DoNotUse*>(&_GetSecretResponse_DataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetSecretResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetSecretResponse) */ {
 public:
  GetSecretResponse();
  virtual ~GetSecretResponse();

  GetSecretResponse(const GetSecretResponse& from);

  inline GetSecretResponse& operator=(const GetSecretResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSecretResponse(GetSecretResponse&& from) noexcept
    : GetSecretResponse() {
    *this = ::std::move(from);
  }

  inline GetSecretResponse& operator=(GetSecretResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSecretResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSecretResponse* internal_default_instance() {
    return reinterpret_cast<const GetSecretResponse*>(
               &_GetSecretResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(GetSecretResponse* other);
  friend void swap(GetSecretResponse& a, GetSecretResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSecretResponse* New() const final {
    return CreateMaybeMessage<GetSecretResponse>(NULL);
  }

  GetSecretResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetSecretResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetSecretResponse& from);
  void MergeFrom(const GetSecretResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSecretResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      data() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetSecretResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetSecretResponse_DataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetBulkSecretRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetBulkSecretRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetBulkSecretRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetBulkSecretRequest_MetadataEntry_DoNotUse();
  GetBulkSecretRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetBulkSecretRequest_MetadataEntry_DoNotUse& other);
  static const GetBulkSecretRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetBulkSecretRequest_MetadataEntry_DoNotUse*>(&_GetBulkSecretRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetBulkSecretRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetBulkSecretRequest) */ {
 public:
  GetBulkSecretRequest();
  virtual ~GetBulkSecretRequest();

  GetBulkSecretRequest(const GetBulkSecretRequest& from);

  inline GetBulkSecretRequest& operator=(const GetBulkSecretRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBulkSecretRequest(GetBulkSecretRequest&& from) noexcept
    : GetBulkSecretRequest() {
    *this = ::std::move(from);
  }

  inline GetBulkSecretRequest& operator=(GetBulkSecretRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBulkSecretRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetBulkSecretRequest* internal_default_instance() {
    return reinterpret_cast<const GetBulkSecretRequest*>(
               &_GetBulkSecretRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(GetBulkSecretRequest* other);
  friend void swap(GetBulkSecretRequest& a, GetBulkSecretRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBulkSecretRequest* New() const final {
    return CreateMaybeMessage<GetBulkSecretRequest>(NULL);
  }

  GetBulkSecretRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetBulkSecretRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetBulkSecretRequest& from);
  void MergeFrom(const GetBulkSecretRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBulkSecretRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 2;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetBulkSecretRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetBulkSecretRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetBulkSecretResponse_DataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetBulkSecretResponse_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetBulkSecretResponse_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetBulkSecretResponse_DataEntry_DoNotUse();
  GetBulkSecretResponse_DataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetBulkSecretResponse_DataEntry_DoNotUse& other);
  static const GetBulkSecretResponse_DataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetBulkSecretResponse_DataEntry_DoNotUse*>(&_GetBulkSecretResponse_DataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetBulkSecretResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetBulkSecretResponse) */ {
 public:
  GetBulkSecretResponse();
  virtual ~GetBulkSecretResponse();

  GetBulkSecretResponse(const GetBulkSecretResponse& from);

  inline GetBulkSecretResponse& operator=(const GetBulkSecretResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBulkSecretResponse(GetBulkSecretResponse&& from) noexcept
    : GetBulkSecretResponse() {
    *this = ::std::move(from);
  }

  inline GetBulkSecretResponse& operator=(GetBulkSecretResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBulkSecretResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetBulkSecretResponse* internal_default_instance() {
    return reinterpret_cast<const GetBulkSecretResponse*>(
               &_GetBulkSecretResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(GetBulkSecretResponse* other);
  friend void swap(GetBulkSecretResponse& a, GetBulkSecretResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBulkSecretResponse* New() const final {
    return CreateMaybeMessage<GetBulkSecretResponse>(NULL);
  }

  GetBulkSecretResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetBulkSecretResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetBulkSecretResponse& from);
  void MergeFrom(const GetBulkSecretResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBulkSecretResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      data() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetBulkSecretResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetBulkSecretResponse_DataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransactionalStateOperation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.TransactionalStateOperation) */ {
 public:
  TransactionalStateOperation();
  virtual ~TransactionalStateOperation();

  TransactionalStateOperation(const TransactionalStateOperation& from);

  inline TransactionalStateOperation& operator=(const TransactionalStateOperation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransactionalStateOperation(TransactionalStateOperation&& from) noexcept
    : TransactionalStateOperation() {
    *this = ::std::move(from);
  }

  inline TransactionalStateOperation& operator=(TransactionalStateOperation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionalStateOperation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransactionalStateOperation* internal_default_instance() {
    return reinterpret_cast<const TransactionalStateOperation*>(
               &_TransactionalStateOperation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(TransactionalStateOperation* other);
  friend void swap(TransactionalStateOperation& a, TransactionalStateOperation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransactionalStateOperation* New() const final {
    return CreateMaybeMessage<TransactionalStateOperation>(NULL);
  }

  TransactionalStateOperation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransactionalStateOperation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransactionalStateOperation& from);
  void MergeFrom(const TransactionalStateOperation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransactionalStateOperation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string operationType = 1;
  void clear_operationtype();
  static const int kOperationTypeFieldNumber = 1;
  const ::std::string& operationtype() const;
  void set_operationtype(const ::std::string& value);
  #if LANG_CXX11
  void set_operationtype(::std::string&& value);
  #endif
  void set_operationtype(const char* value);
  void set_operationtype(const char* value, size_t size);
  ::std::string* mutable_operationtype();
  ::std::string* release_operationtype();
  void set_allocated_operationtype(::std::string* operationtype);

  // .dapr.proto.common.v1.StateItem request = 2;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 2;
  private:
  const ::dapr::proto::common::v1::StateItem& _internal_request() const;
  public:
  const ::dapr::proto::common::v1::StateItem& request() const;
  ::dapr::proto::common::v1::StateItem* release_request();
  ::dapr::proto::common::v1::StateItem* mutable_request();
  void set_allocated_request(::dapr::proto::common::v1::StateItem* request);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.TransactionalStateOperation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr operationtype_;
  ::dapr::proto::common::v1::StateItem* request_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteStateTransactionRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ExecuteStateTransactionRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<ExecuteStateTransactionRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  ExecuteStateTransactionRequest_MetadataEntry_DoNotUse();
  ExecuteStateTransactionRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ExecuteStateTransactionRequest_MetadataEntry_DoNotUse& other);
  static const ExecuteStateTransactionRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ExecuteStateTransactionRequest_MetadataEntry_DoNotUse*>(&_ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ExecuteStateTransactionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.ExecuteStateTransactionRequest) */ {
 public:
  ExecuteStateTransactionRequest();
  virtual ~ExecuteStateTransactionRequest();

  ExecuteStateTransactionRequest(const ExecuteStateTransactionRequest& from);

  inline ExecuteStateTransactionRequest& operator=(const ExecuteStateTransactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteStateTransactionRequest(ExecuteStateTransactionRequest&& from) noexcept
    : ExecuteStateTransactionRequest() {
    *this = ::std::move(from);
  }

  inline ExecuteStateTransactionRequest& operator=(ExecuteStateTransactionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteStateTransactionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecuteStateTransactionRequest* internal_default_instance() {
    return reinterpret_cast<const ExecuteStateTransactionRequest*>(
               &_ExecuteStateTransactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(ExecuteStateTransactionRequest* other);
  friend void swap(ExecuteStateTransactionRequest& a, ExecuteStateTransactionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteStateTransactionRequest* New() const final {
    return CreateMaybeMessage<ExecuteStateTransactionRequest>(NULL);
  }

  ExecuteStateTransactionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExecuteStateTransactionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExecuteStateTransactionRequest& from);
  void MergeFrom(const ExecuteStateTransactionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecuteStateTransactionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .dapr.proto.runtime.v1.TransactionalStateOperation operations = 2;
  int operations_size() const;
  void clear_operations();
  static const int kOperationsFieldNumber = 2;
  ::dapr::proto::runtime::v1::TransactionalStateOperation* mutable_operations(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalStateOperation >*
      mutable_operations();
  const ::dapr::proto::runtime::v1::TransactionalStateOperation& operations(int index) const;
  ::dapr::proto::runtime::v1::TransactionalStateOperation* add_operations();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalStateOperation >&
      operations() const;

  // map<string, string> metadata = 3;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string storeName = 1;
  void clear_storename();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& storename() const;
  void set_storename(const ::std::string& value);
  #if LANG_CXX11
  void set_storename(::std::string&& value);
  #endif
  void set_storename(const char* value);
  void set_storename(const char* value, size_t size);
  ::std::string* mutable_storename();
  ::std::string* release_storename();
  void set_allocated_storename(::std::string* storename);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalStateOperation > operations_;
  ::google::protobuf::internal::MapField<
      ExecuteStateTransactionRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr storename_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterActorTimerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.RegisterActorTimerRequest) */ {
 public:
  RegisterActorTimerRequest();
  virtual ~RegisterActorTimerRequest();

  RegisterActorTimerRequest(const RegisterActorTimerRequest& from);

  inline RegisterActorTimerRequest& operator=(const RegisterActorTimerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterActorTimerRequest(RegisterActorTimerRequest&& from) noexcept
    : RegisterActorTimerRequest() {
    *this = ::std::move(from);
  }

  inline RegisterActorTimerRequest& operator=(RegisterActorTimerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterActorTimerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterActorTimerRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterActorTimerRequest*>(
               &_RegisterActorTimerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(RegisterActorTimerRequest* other);
  friend void swap(RegisterActorTimerRequest& a, RegisterActorTimerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterActorTimerRequest* New() const final {
    return CreateMaybeMessage<RegisterActorTimerRequest>(NULL);
  }

  RegisterActorTimerRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegisterActorTimerRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegisterActorTimerRequest& from);
  void MergeFrom(const RegisterActorTimerRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterActorTimerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string actor_type = 1;
  void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  const ::std::string& actor_type() const;
  void set_actor_type(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_type(::std::string&& value);
  #endif
  void set_actor_type(const char* value);
  void set_actor_type(const char* value, size_t size);
  ::std::string* mutable_actor_type();
  ::std::string* release_actor_type();
  void set_allocated_actor_type(::std::string* actor_type);

  // string actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  const ::std::string& actor_id() const;
  void set_actor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_id(::std::string&& value);
  #endif
  void set_actor_id(const char* value);
  void set_actor_id(const char* value, size_t size);
  ::std::string* mutable_actor_id();
  ::std::string* release_actor_id();
  void set_allocated_actor_id(::std::string* actor_id);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string due_time = 4;
  void clear_due_time();
  static const int kDueTimeFieldNumber = 4;
  const ::std::string& due_time() const;
  void set_due_time(const ::std::string& value);
  #if LANG_CXX11
  void set_due_time(::std::string&& value);
  #endif
  void set_due_time(const char* value);
  void set_due_time(const char* value, size_t size);
  ::std::string* mutable_due_time();
  ::std::string* release_due_time();
  void set_allocated_due_time(::std::string* due_time);

  // string period = 5;
  void clear_period();
  static const int kPeriodFieldNumber = 5;
  const ::std::string& period() const;
  void set_period(const ::std::string& value);
  #if LANG_CXX11
  void set_period(::std::string&& value);
  #endif
  void set_period(const char* value);
  void set_period(const char* value, size_t size);
  ::std::string* mutable_period();
  ::std::string* release_period();
  void set_allocated_period(::std::string* period);

  // string callback = 6;
  void clear_callback();
  static const int kCallbackFieldNumber = 6;
  const ::std::string& callback() const;
  void set_callback(const ::std::string& value);
  #if LANG_CXX11
  void set_callback(::std::string&& value);
  #endif
  void set_callback(const char* value);
  void set_callback(const char* value, size_t size);
  ::std::string* mutable_callback();
  ::std::string* release_callback();
  void set_allocated_callback(::std::string* callback);

  // bytes data = 7;
  void clear_data();
  static const int kDataFieldNumber = 7;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.RegisterActorTimerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr actor_type_;
  ::google::protobuf::internal::ArenaStringPtr actor_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr due_time_;
  ::google::protobuf::internal::ArenaStringPtr period_;
  ::google::protobuf::internal::ArenaStringPtr callback_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnregisterActorTimerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.UnregisterActorTimerRequest) */ {
 public:
  UnregisterActorTimerRequest();
  virtual ~UnregisterActorTimerRequest();

  UnregisterActorTimerRequest(const UnregisterActorTimerRequest& from);

  inline UnregisterActorTimerRequest& operator=(const UnregisterActorTimerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnregisterActorTimerRequest(UnregisterActorTimerRequest&& from) noexcept
    : UnregisterActorTimerRequest() {
    *this = ::std::move(from);
  }

  inline UnregisterActorTimerRequest& operator=(UnregisterActorTimerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnregisterActorTimerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnregisterActorTimerRequest* internal_default_instance() {
    return reinterpret_cast<const UnregisterActorTimerRequest*>(
               &_UnregisterActorTimerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(UnregisterActorTimerRequest* other);
  friend void swap(UnregisterActorTimerRequest& a, UnregisterActorTimerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnregisterActorTimerRequest* New() const final {
    return CreateMaybeMessage<UnregisterActorTimerRequest>(NULL);
  }

  UnregisterActorTimerRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnregisterActorTimerRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnregisterActorTimerRequest& from);
  void MergeFrom(const UnregisterActorTimerRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnregisterActorTimerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string actor_type = 1;
  void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  const ::std::string& actor_type() const;
  void set_actor_type(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_type(::std::string&& value);
  #endif
  void set_actor_type(const char* value);
  void set_actor_type(const char* value, size_t size);
  ::std::string* mutable_actor_type();
  ::std::string* release_actor_type();
  void set_allocated_actor_type(::std::string* actor_type);

  // string actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  const ::std::string& actor_id() const;
  void set_actor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_id(::std::string&& value);
  #endif
  void set_actor_id(const char* value);
  void set_actor_id(const char* value, size_t size);
  ::std::string* mutable_actor_id();
  ::std::string* release_actor_id();
  void set_allocated_actor_id(::std::string* actor_id);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr actor_type_;
  ::google::protobuf::internal::ArenaStringPtr actor_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterActorReminderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.RegisterActorReminderRequest) */ {
 public:
  RegisterActorReminderRequest();
  virtual ~RegisterActorReminderRequest();

  RegisterActorReminderRequest(const RegisterActorReminderRequest& from);

  inline RegisterActorReminderRequest& operator=(const RegisterActorReminderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterActorReminderRequest(RegisterActorReminderRequest&& from) noexcept
    : RegisterActorReminderRequest() {
    *this = ::std::move(from);
  }

  inline RegisterActorReminderRequest& operator=(RegisterActorReminderRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterActorReminderRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterActorReminderRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterActorReminderRequest*>(
               &_RegisterActorReminderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(RegisterActorReminderRequest* other);
  friend void swap(RegisterActorReminderRequest& a, RegisterActorReminderRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterActorReminderRequest* New() const final {
    return CreateMaybeMessage<RegisterActorReminderRequest>(NULL);
  }

  RegisterActorReminderRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegisterActorReminderRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegisterActorReminderRequest& from);
  void MergeFrom(const RegisterActorReminderRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterActorReminderRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string actor_type = 1;
  void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  const ::std::string& actor_type() const;
  void set_actor_type(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_type(::std::string&& value);
  #endif
  void set_actor_type(const char* value);
  void set_actor_type(const char* value, size_t size);
  ::std::string* mutable_actor_type();
  ::std::string* release_actor_type();
  void set_allocated_actor_type(::std::string* actor_type);

  // string actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  const ::std::string& actor_id() const;
  void set_actor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_id(::std::string&& value);
  #endif
  void set_actor_id(const char* value);
  void set_actor_id(const char* value, size_t size);
  ::std::string* mutable_actor_id();
  ::std::string* release_actor_id();
  void set_allocated_actor_id(::std::string* actor_id);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string due_time = 4;
  void clear_due_time();
  static const int kDueTimeFieldNumber = 4;
  const ::std::string& due_time() const;
  void set_due_time(const ::std::string& value);
  #if LANG_CXX11
  void set_due_time(::std::string&& value);
  #endif
  void set_due_time(const char* value);
  void set_due_time(const char* value, size_t size);
  ::std::string* mutable_due_time();
  ::std::string* release_due_time();
  void set_allocated_due_time(::std::string* due_time);

  // string period = 5;
  void clear_period();
  static const int kPeriodFieldNumber = 5;
  const ::std::string& period() const;
  void set_period(const ::std::string& value);
  #if LANG_CXX11
  void set_period(::std::string&& value);
  #endif
  void set_period(const char* value);
  void set_period(const char* value, size_t size);
  ::std::string* mutable_period();
  ::std::string* release_period();
  void set_allocated_period(::std::string* period);

  // bytes data = 6;
  void clear_data();
  static const int kDataFieldNumber = 6;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.RegisterActorReminderRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr actor_type_;
  ::google::protobuf::internal::ArenaStringPtr actor_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr due_time_;
  ::google::protobuf::internal::ArenaStringPtr period_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnregisterActorReminderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.UnregisterActorReminderRequest) */ {
 public:
  UnregisterActorReminderRequest();
  virtual ~UnregisterActorReminderRequest();

  UnregisterActorReminderRequest(const UnregisterActorReminderRequest& from);

  inline UnregisterActorReminderRequest& operator=(const UnregisterActorReminderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnregisterActorReminderRequest(UnregisterActorReminderRequest&& from) noexcept
    : UnregisterActorReminderRequest() {
    *this = ::std::move(from);
  }

  inline UnregisterActorReminderRequest& operator=(UnregisterActorReminderRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnregisterActorReminderRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnregisterActorReminderRequest* internal_default_instance() {
    return reinterpret_cast<const UnregisterActorReminderRequest*>(
               &_UnregisterActorReminderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(UnregisterActorReminderRequest* other);
  friend void swap(UnregisterActorReminderRequest& a, UnregisterActorReminderRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnregisterActorReminderRequest* New() const final {
    return CreateMaybeMessage<UnregisterActorReminderRequest>(NULL);
  }

  UnregisterActorReminderRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnregisterActorReminderRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnregisterActorReminderRequest& from);
  void MergeFrom(const UnregisterActorReminderRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnregisterActorReminderRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string actor_type = 1;
  void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  const ::std::string& actor_type() const;
  void set_actor_type(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_type(::std::string&& value);
  #endif
  void set_actor_type(const char* value);
  void set_actor_type(const char* value, size_t size);
  ::std::string* mutable_actor_type();
  ::std::string* release_actor_type();
  void set_allocated_actor_type(::std::string* actor_type);

  // string actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  const ::std::string& actor_id() const;
  void set_actor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_id(::std::string&& value);
  #endif
  void set_actor_id(const char* value);
  void set_actor_id(const char* value, size_t size);
  ::std::string* mutable_actor_id();
  ::std::string* release_actor_id();
  void set_allocated_actor_id(::std::string* actor_id);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr actor_type_;
  ::google::protobuf::internal::ArenaStringPtr actor_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetActorStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetActorStateRequest) */ {
 public:
  GetActorStateRequest();
  virtual ~GetActorStateRequest();

  GetActorStateRequest(const GetActorStateRequest& from);

  inline GetActorStateRequest& operator=(const GetActorStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetActorStateRequest(GetActorStateRequest&& from) noexcept
    : GetActorStateRequest() {
    *this = ::std::move(from);
  }

  inline GetActorStateRequest& operator=(GetActorStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetActorStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetActorStateRequest* internal_default_instance() {
    return reinterpret_cast<const GetActorStateRequest*>(
               &_GetActorStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(GetActorStateRequest* other);
  friend void swap(GetActorStateRequest& a, GetActorStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetActorStateRequest* New() const final {
    return CreateMaybeMessage<GetActorStateRequest>(NULL);
  }

  GetActorStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetActorStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetActorStateRequest& from);
  void MergeFrom(const GetActorStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetActorStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string actor_type = 1;
  void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  const ::std::string& actor_type() const;
  void set_actor_type(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_type(::std::string&& value);
  #endif
  void set_actor_type(const char* value);
  void set_actor_type(const char* value, size_t size);
  ::std::string* mutable_actor_type();
  ::std::string* release_actor_type();
  void set_allocated_actor_type(::std::string* actor_type);

  // string actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  const ::std::string& actor_id() const;
  void set_actor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_id(::std::string&& value);
  #endif
  void set_actor_id(const char* value);
  void set_actor_id(const char* value, size_t size);
  ::std::string* mutable_actor_id();
  ::std::string* release_actor_id();
  void set_allocated_actor_id(::std::string* actor_id);

  // string key = 3;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetActorStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr actor_type_;
  ::google::protobuf::internal::ArenaStringPtr actor_id_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetActorStateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetActorStateResponse) */ {
 public:
  GetActorStateResponse();
  virtual ~GetActorStateResponse();

  GetActorStateResponse(const GetActorStateResponse& from);

  inline GetActorStateResponse& operator=(const GetActorStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetActorStateResponse(GetActorStateResponse&& from) noexcept
    : GetActorStateResponse() {
    *this = ::std::move(from);
  }

  inline GetActorStateResponse& operator=(GetActorStateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetActorStateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetActorStateResponse* internal_default_instance() {
    return reinterpret_cast<const GetActorStateResponse*>(
               &_GetActorStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(GetActorStateResponse* other);
  friend void swap(GetActorStateResponse& a, GetActorStateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetActorStateResponse* New() const final {
    return CreateMaybeMessage<GetActorStateResponse>(NULL);
  }

  GetActorStateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetActorStateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetActorStateResponse& from);
  void MergeFrom(const GetActorStateResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetActorStateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetActorStateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteActorStateTransactionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest) */ {
 public:
  ExecuteActorStateTransactionRequest();
  virtual ~ExecuteActorStateTransactionRequest();

  ExecuteActorStateTransactionRequest(const ExecuteActorStateTransactionRequest& from);

  inline ExecuteActorStateTransactionRequest& operator=(const ExecuteActorStateTransactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteActorStateTransactionRequest(ExecuteActorStateTransactionRequest&& from) noexcept
    : ExecuteActorStateTransactionRequest() {
    *this = ::std::move(from);
  }

  inline ExecuteActorStateTransactionRequest& operator=(ExecuteActorStateTransactionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteActorStateTransactionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecuteActorStateTransactionRequest* internal_default_instance() {
    return reinterpret_cast<const ExecuteActorStateTransactionRequest*>(
               &_ExecuteActorStateTransactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(ExecuteActorStateTransactionRequest* other);
  friend void swap(ExecuteActorStateTransactionRequest& a, ExecuteActorStateTransactionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteActorStateTransactionRequest* New() const final {
    return CreateMaybeMessage<ExecuteActorStateTransactionRequest>(NULL);
  }

  ExecuteActorStateTransactionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExecuteActorStateTransactionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExecuteActorStateTransactionRequest& from);
  void MergeFrom(const ExecuteActorStateTransactionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecuteActorStateTransactionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dapr.proto.runtime.v1.TransactionalActorStateOperation operations = 3;
  int operations_size() const;
  void clear_operations();
  static const int kOperationsFieldNumber = 3;
  ::dapr::proto::runtime::v1::TransactionalActorStateOperation* mutable_operations(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalActorStateOperation >*
      mutable_operations();
  const ::dapr::proto::runtime::v1::TransactionalActorStateOperation& operations(int index) const;
  ::dapr::proto::runtime::v1::TransactionalActorStateOperation* add_operations();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalActorStateOperation >&
      operations() const;

  // string actor_type = 1;
  void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  const ::std::string& actor_type() const;
  void set_actor_type(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_type(::std::string&& value);
  #endif
  void set_actor_type(const char* value);
  void set_actor_type(const char* value, size_t size);
  ::std::string* mutable_actor_type();
  ::std::string* release_actor_type();
  void set_allocated_actor_type(::std::string* actor_type);

  // string actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  const ::std::string& actor_id() const;
  void set_actor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_id(::std::string&& value);
  #endif
  void set_actor_id(const char* value);
  void set_actor_id(const char* value, size_t size);
  ::std::string* mutable_actor_id();
  ::std::string* release_actor_id();
  void set_allocated_actor_id(::std::string* actor_id);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalActorStateOperation > operations_;
  ::google::protobuf::internal::ArenaStringPtr actor_type_;
  ::google::protobuf::internal::ArenaStringPtr actor_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransactionalActorStateOperation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.TransactionalActorStateOperation) */ {
 public:
  TransactionalActorStateOperation();
  virtual ~TransactionalActorStateOperation();

  TransactionalActorStateOperation(const TransactionalActorStateOperation& from);

  inline TransactionalActorStateOperation& operator=(const TransactionalActorStateOperation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransactionalActorStateOperation(TransactionalActorStateOperation&& from) noexcept
    : TransactionalActorStateOperation() {
    *this = ::std::move(from);
  }

  inline TransactionalActorStateOperation& operator=(TransactionalActorStateOperation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionalActorStateOperation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransactionalActorStateOperation* internal_default_instance() {
    return reinterpret_cast<const TransactionalActorStateOperation*>(
               &_TransactionalActorStateOperation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(TransactionalActorStateOperation* other);
  friend void swap(TransactionalActorStateOperation& a, TransactionalActorStateOperation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransactionalActorStateOperation* New() const final {
    return CreateMaybeMessage<TransactionalActorStateOperation>(NULL);
  }

  TransactionalActorStateOperation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransactionalActorStateOperation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransactionalActorStateOperation& from);
  void MergeFrom(const TransactionalActorStateOperation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransactionalActorStateOperation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string operationType = 1;
  void clear_operationtype();
  static const int kOperationTypeFieldNumber = 1;
  const ::std::string& operationtype() const;
  void set_operationtype(const ::std::string& value);
  #if LANG_CXX11
  void set_operationtype(::std::string&& value);
  #endif
  void set_operationtype(const char* value);
  void set_operationtype(const char* value, size_t size);
  ::std::string* mutable_operationtype();
  ::std::string* release_operationtype();
  void set_allocated_operationtype(::std::string* operationtype);

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // .google.protobuf.Any value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  private:
  const ::google::protobuf::Any& _internal_value() const;
  public:
  const ::google::protobuf::Any& value() const;
  ::google::protobuf::Any* release_value();
  ::google::protobuf::Any* mutable_value();
  void set_allocated_value(::google::protobuf::Any* value);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.TransactionalActorStateOperation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr operationtype_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::Any* value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvokeActorRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.InvokeActorRequest) */ {
 public:
  InvokeActorRequest();
  virtual ~InvokeActorRequest();

  InvokeActorRequest(const InvokeActorRequest& from);

  inline InvokeActorRequest& operator=(const InvokeActorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvokeActorRequest(InvokeActorRequest&& from) noexcept
    : InvokeActorRequest() {
    *this = ::std::move(from);
  }

  inline InvokeActorRequest& operator=(InvokeActorRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvokeActorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvokeActorRequest* internal_default_instance() {
    return reinterpret_cast<const InvokeActorRequest*>(
               &_InvokeActorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(InvokeActorRequest* other);
  friend void swap(InvokeActorRequest& a, InvokeActorRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvokeActorRequest* New() const final {
    return CreateMaybeMessage<InvokeActorRequest>(NULL);
  }

  InvokeActorRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InvokeActorRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InvokeActorRequest& from);
  void MergeFrom(const InvokeActorRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeActorRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string actor_type = 1;
  void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  const ::std::string& actor_type() const;
  void set_actor_type(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_type(::std::string&& value);
  #endif
  void set_actor_type(const char* value);
  void set_actor_type(const char* value, size_t size);
  ::std::string* mutable_actor_type();
  ::std::string* release_actor_type();
  void set_allocated_actor_type(::std::string* actor_type);

  // string actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  const ::std::string& actor_id() const;
  void set_actor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_id(::std::string&& value);
  #endif
  void set_actor_id(const char* value);
  void set_actor_id(const char* value, size_t size);
  ::std::string* mutable_actor_id();
  ::std::string* release_actor_id();
  void set_allocated_actor_id(::std::string* actor_id);

  // string method = 3;
  void clear_method();
  static const int kMethodFieldNumber = 3;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  #if LANG_CXX11
  void set_method(::std::string&& value);
  #endif
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // bytes data = 4;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.InvokeActorRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr actor_type_;
  ::google::protobuf::internal::ArenaStringPtr actor_id_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvokeActorResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.InvokeActorResponse) */ {
 public:
  InvokeActorResponse();
  virtual ~InvokeActorResponse();

  InvokeActorResponse(const InvokeActorResponse& from);

  inline InvokeActorResponse& operator=(const InvokeActorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvokeActorResponse(InvokeActorResponse&& from) noexcept
    : InvokeActorResponse() {
    *this = ::std::move(from);
  }

  inline InvokeActorResponse& operator=(InvokeActorResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvokeActorResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvokeActorResponse* internal_default_instance() {
    return reinterpret_cast<const InvokeActorResponse*>(
               &_InvokeActorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(InvokeActorResponse* other);
  friend void swap(InvokeActorResponse& a, InvokeActorResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvokeActorResponse* New() const final {
    return CreateMaybeMessage<InvokeActorResponse>(NULL);
  }

  InvokeActorResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InvokeActorResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InvokeActorResponse& from);
  void MergeFrom(const InvokeActorResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeActorResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.InvokeActorResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InvokeServiceRequest

// string id = 1;
inline void InvokeServiceRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeServiceRequest::id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeServiceRequest.id)
  return id_.GetNoArena();
}
inline void InvokeServiceRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeServiceRequest.id)
}
#if LANG_CXX11
inline void InvokeServiceRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeServiceRequest.id)
}
#endif
inline void InvokeServiceRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeServiceRequest.id)
}
inline void InvokeServiceRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeServiceRequest.id)
}
inline ::std::string* InvokeServiceRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeServiceRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeServiceRequest::release_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeServiceRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeServiceRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeServiceRequest.id)
}

// .dapr.proto.common.v1.InvokeRequest message = 3;
inline bool InvokeServiceRequest::has_message() const {
  return this != internal_default_instance() && message_ != NULL;
}
inline const ::dapr::proto::common::v1::InvokeRequest& InvokeServiceRequest::_internal_message() const {
  return *message_;
}
inline const ::dapr::proto::common::v1::InvokeRequest& InvokeServiceRequest::message() const {
  const ::dapr::proto::common::v1::InvokeRequest* p = message_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeServiceRequest.message)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::common::v1::InvokeRequest*>(
      &::dapr::proto::common::v1::_InvokeRequest_default_instance_);
}
inline ::dapr::proto::common::v1::InvokeRequest* InvokeServiceRequest::release_message() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeServiceRequest.message)
  
  ::dapr::proto::common::v1::InvokeRequest* temp = message_;
  message_ = NULL;
  return temp;
}
inline ::dapr::proto::common::v1::InvokeRequest* InvokeServiceRequest::mutable_message() {
  
  if (message_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::InvokeRequest>(GetArenaNoVirtual());
    message_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeServiceRequest.message)
  return message_;
}
inline void InvokeServiceRequest::set_allocated_message(::dapr::proto::common::v1::InvokeRequest* message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(message_);
  }
  if (message) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    
  } else {
    
  }
  message_ = message;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeServiceRequest.message)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetStateRequest

// string store_name = 1;
inline void GetStateRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetStateRequest.store_name)
  return store_name_.GetNoArena();
}
inline void GetStateRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetStateRequest.store_name)
}
#if LANG_CXX11
inline void GetStateRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetStateRequest.store_name)
}
#endif
inline void GetStateRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetStateRequest.store_name)
}
inline void GetStateRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetStateRequest.store_name)
}
inline ::std::string* GetStateRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetStateRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetStateRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetStateRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetStateRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetStateRequest.store_name)
}

// string key = 2;
inline void GetStateRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetStateRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetStateRequest.key)
  return key_.GetNoArena();
}
inline void GetStateRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetStateRequest.key)
}
#if LANG_CXX11
inline void GetStateRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetStateRequest.key)
}
#endif
inline void GetStateRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetStateRequest.key)
}
inline void GetStateRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetStateRequest.key)
}
inline ::std::string* GetStateRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetStateRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetStateRequest::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetStateRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetStateRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetStateRequest.key)
}

// .dapr.proto.common.v1.StateOptions.StateConsistency consistency = 3;
inline void GetStateRequest::clear_consistency() {
  consistency_ = 0;
}
inline ::dapr::proto::common::v1::StateOptions_StateConsistency GetStateRequest::consistency() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetStateRequest.consistency)
  return static_cast< ::dapr::proto::common::v1::StateOptions_StateConsistency >(consistency_);
}
inline void GetStateRequest::set_consistency(::dapr::proto::common::v1::StateOptions_StateConsistency value) {
  
  consistency_ = value;
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetStateRequest.consistency)
}

// map<string, string> metadata = 4;
inline int GetStateRequest::metadata_size() const {
  return metadata_.size();
}
inline void GetStateRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetStateRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetStateRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetStateRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetStateRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetBulkStateRequest

// string store_name = 1;
inline void GetBulkStateRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetBulkStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
  return store_name_.GetNoArena();
}
inline void GetBulkStateRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
}
#if LANG_CXX11
inline void GetBulkStateRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
}
#endif
inline void GetBulkStateRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
}
inline void GetBulkStateRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
}
inline ::std::string* GetBulkStateRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBulkStateRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBulkStateRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
}

// repeated string keys = 2;
inline int GetBulkStateRequest::keys_size() const {
  return keys_.size();
}
inline void GetBulkStateRequest::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& GetBulkStateRequest::keys(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  return keys_.Get(index);
}
inline ::std::string* GetBulkStateRequest::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  return keys_.Mutable(index);
}
inline void GetBulkStateRequest::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  keys_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetBulkStateRequest::set_keys(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  keys_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetBulkStateRequest::set_keys(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline void GetBulkStateRequest::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline ::std::string* GetBulkStateRequest::add_keys() {
  // @@protoc_insertion_point(field_add_mutable:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  return keys_.Add();
}
inline void GetBulkStateRequest::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
#if LANG_CXX11
inline void GetBulkStateRequest::add_keys(::std::string&& value) {
  keys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
#endif
inline void GetBulkStateRequest::add_keys(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline void GetBulkStateRequest::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetBulkStateRequest::keys() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetBulkStateRequest::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  return &keys_;
}

// int32 parallelism = 3;
inline void GetBulkStateRequest::clear_parallelism() {
  parallelism_ = 0;
}
inline ::google::protobuf::int32 GetBulkStateRequest::parallelism() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetBulkStateRequest.parallelism)
  return parallelism_;
}
inline void GetBulkStateRequest::set_parallelism(::google::protobuf::int32 value) {
  
  parallelism_ = value;
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetBulkStateRequest.parallelism)
}

// map<string, string> metadata = 4;
inline int GetBulkStateRequest::metadata_size() const {
  return metadata_.size();
}
inline void GetBulkStateRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetBulkStateRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetBulkStateRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetBulkStateRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetBulkStateRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// GetBulkStateResponse

// repeated .dapr.proto.runtime.v1.BulkStateItem items = 1;
inline int GetBulkStateResponse::items_size() const {
  return items_.size();
}
inline void GetBulkStateResponse::clear_items() {
  items_.Clear();
}
inline ::dapr::proto::runtime::v1::BulkStateItem* GetBulkStateResponse::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetBulkStateResponse.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkStateItem >*
GetBulkStateResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetBulkStateResponse.items)
  return &items_;
}
inline const ::dapr::proto::runtime::v1::BulkStateItem& GetBulkStateResponse::items(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetBulkStateResponse.items)
  return items_.Get(index);
}
inline ::dapr::proto::runtime::v1::BulkStateItem* GetBulkStateResponse::add_items() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetBulkStateResponse.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkStateItem >&
GetBulkStateResponse::items() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetBulkStateResponse.items)
  return items_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BulkStateItem

// string key = 1;
inline void BulkStateItem::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulkStateItem::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkStateItem.key)
  return key_.GetNoArena();
}
inline void BulkStateItem::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkStateItem.key)
}
#if LANG_CXX11
inline void BulkStateItem::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.BulkStateItem.key)
}
#endif
inline void BulkStateItem::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.BulkStateItem.key)
}
inline void BulkStateItem::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.BulkStateItem.key)
}
inline ::std::string* BulkStateItem::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkStateItem.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkStateItem::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkStateItem.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkStateItem::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkStateItem.key)
}

// bytes data = 2;
inline void BulkStateItem::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulkStateItem::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkStateItem.data)
  return data_.GetNoArena();
}
inline void BulkStateItem::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkStateItem.data)
}
#if LANG_CXX11
inline void BulkStateItem::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.BulkStateItem.data)
}
#endif
inline void BulkStateItem::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.BulkStateItem.data)
}
inline void BulkStateItem::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.BulkStateItem.data)
}
inline ::std::string* BulkStateItem::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkStateItem.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkStateItem::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkStateItem.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkStateItem::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkStateItem.data)
}

// string etag = 3;
inline void BulkStateItem::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulkStateItem::etag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkStateItem.etag)
  return etag_.GetNoArena();
}
inline void BulkStateItem::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkStateItem.etag)
}
#if LANG_CXX11
inline void BulkStateItem::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.BulkStateItem.etag)
}
#endif
inline void BulkStateItem::set_etag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.BulkStateItem.etag)
}
inline void BulkStateItem::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.BulkStateItem.etag)
}
inline ::std::string* BulkStateItem::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkStateItem.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkStateItem::release_etag() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkStateItem.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkStateItem::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkStateItem.etag)
}

// string error = 4;
inline void BulkStateItem::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulkStateItem::error() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkStateItem.error)
  return error_.GetNoArena();
}
inline void BulkStateItem::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkStateItem.error)
}
#if LANG_CXX11
inline void BulkStateItem::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.BulkStateItem.error)
}
#endif
inline void BulkStateItem::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.BulkStateItem.error)
}
inline void BulkStateItem::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.BulkStateItem.error)
}
inline ::std::string* BulkStateItem::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkStateItem.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkStateItem::release_error() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkStateItem.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkStateItem::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkStateItem.error)
}

// map<string, string> metadata = 5;
inline int BulkStateItem::metadata_size() const {
  return metadata_.size();
}
inline void BulkStateItem::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
BulkStateItem::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.BulkStateItem.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
BulkStateItem::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.BulkStateItem.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetStateResponse

// bytes data = 1;
inline void GetStateResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetStateResponse::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetStateResponse.data)
  return data_.GetNoArena();
}
inline void GetStateResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetStateResponse.data)
}
#if LANG_CXX11
inline void GetStateResponse::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetStateResponse.data)
}
#endif
inline void GetStateResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetStateResponse.data)
}
inline void GetStateResponse::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetStateResponse.data)
}
inline ::std::string* GetStateResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetStateResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetStateResponse::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetStateResponse.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetStateResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetStateResponse.data)
}

// string etag = 2;
inline void GetStateResponse::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetStateResponse::etag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetStateResponse.etag)
  return etag_.GetNoArena();
}
inline void GetStateResponse::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetStateResponse.etag)
}
#if LANG_CXX11
inline void GetStateResponse::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetStateResponse.etag)
}
#endif
inline void GetStateResponse::set_etag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetStateResponse.etag)
}
inline void GetStateResponse::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetStateResponse.etag)
}
inline ::std::string* GetStateResponse::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetStateResponse.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetStateResponse::release_etag() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetStateResponse.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetStateResponse::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetStateResponse.etag)
}

// map<string, string> metadata = 3;
inline int GetStateResponse::metadata_size() const {
  return metadata_.size();
}
inline void GetStateResponse::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetStateResponse::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetStateResponse.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetStateResponse::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetStateResponse.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DeleteStateRequest

// string store_name = 1;
inline void DeleteStateRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
  return store_name_.GetNoArena();
}
inline void DeleteStateRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
}
#if LANG_CXX11
inline void DeleteStateRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
}
#endif
inline void DeleteStateRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
}
inline void DeleteStateRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
}
inline ::std::string* DeleteStateRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStateRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStateRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
}

// string key = 2;
inline void DeleteStateRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStateRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteStateRequest.key)
  return key_.GetNoArena();
}
inline void DeleteStateRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.DeleteStateRequest.key)
}
#if LANG_CXX11
inline void DeleteStateRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.DeleteStateRequest.key)
}
#endif
inline void DeleteStateRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.DeleteStateRequest.key)
}
inline void DeleteStateRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.DeleteStateRequest.key)
}
inline ::std::string* DeleteStateRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteStateRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStateRequest::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DeleteStateRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStateRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DeleteStateRequest.key)
}

// string etag = 3;
inline void DeleteStateRequest::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStateRequest::etag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteStateRequest.etag)
  return etag_.GetNoArena();
}
inline void DeleteStateRequest::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.DeleteStateRequest.etag)
}
#if LANG_CXX11
inline void DeleteStateRequest::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.DeleteStateRequest.etag)
}
#endif
inline void DeleteStateRequest::set_etag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.DeleteStateRequest.etag)
}
inline void DeleteStateRequest::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.DeleteStateRequest.etag)
}
inline ::std::string* DeleteStateRequest::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteStateRequest.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStateRequest::release_etag() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DeleteStateRequest.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStateRequest::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DeleteStateRequest.etag)
}

// .dapr.proto.common.v1.StateOptions options = 4;
inline bool DeleteStateRequest::has_options() const {
  return this != internal_default_instance() && options_ != NULL;
}
inline const ::dapr::proto::common::v1::StateOptions& DeleteStateRequest::_internal_options() const {
  return *options_;
}
inline const ::dapr::proto::common::v1::StateOptions& DeleteStateRequest::options() const {
  const ::dapr::proto::common::v1::StateOptions* p = options_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteStateRequest.options)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::common::v1::StateOptions*>(
      &::dapr::proto::common::v1::_StateOptions_default_instance_);
}
inline ::dapr::proto::common::v1::StateOptions* DeleteStateRequest::release_options() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DeleteStateRequest.options)
  
  ::dapr::proto::common::v1::StateOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline ::dapr::proto::common::v1::StateOptions* DeleteStateRequest::mutable_options() {
  
  if (options_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::StateOptions>(GetArenaNoVirtual());
    options_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteStateRequest.options)
  return options_;
}
inline void DeleteStateRequest::set_allocated_options(::dapr::proto::common::v1::StateOptions* options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(options_);
  }
  if (options) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    
  } else {
    
  }
  options_ = options;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DeleteStateRequest.options)
}

// map<string, string> metadata = 5;
inline int DeleteStateRequest::metadata_size() const {
  return metadata_.size();
}
inline void DeleteStateRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
DeleteStateRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.DeleteStateRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
DeleteStateRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.DeleteStateRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// SaveStateRequest

// string store_name = 1;
inline void SaveStateRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SaveStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SaveStateRequest.store_name)
  return store_name_.GetNoArena();
}
inline void SaveStateRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SaveStateRequest.store_name)
}
#if LANG_CXX11
inline void SaveStateRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SaveStateRequest.store_name)
}
#endif
inline void SaveStateRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SaveStateRequest.store_name)
}
inline void SaveStateRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SaveStateRequest.store_name)
}
inline ::std::string* SaveStateRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SaveStateRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SaveStateRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SaveStateRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SaveStateRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SaveStateRequest.store_name)
}

// repeated .dapr.proto.common.v1.StateItem states = 2;
inline int SaveStateRequest::states_size() const {
  return states_.size();
}
inline ::dapr::proto::common::v1::StateItem* SaveStateRequest::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SaveStateRequest.states)
  return states_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >*
SaveStateRequest::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.SaveStateRequest.states)
  return &states_;
}
inline const ::dapr::proto::common::v1::StateItem& SaveStateRequest::states(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SaveStateRequest.states)
  return states_.Get(index);
}
inline ::dapr::proto::common::v1::StateItem* SaveStateRequest::add_states() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.SaveStateRequest.states)
  return states_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >&
SaveStateRequest::states() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.SaveStateRequest.states)
  return states_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PublishEventRequest

// string pubsub_name = 1;
inline void PublishEventRequest::clear_pubsub_name() {
  pubsub_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PublishEventRequest::pubsub_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
  return pubsub_name_.GetNoArena();
}
inline void PublishEventRequest::set_pubsub_name(const ::std::string& value) {
  
  pubsub_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
}
#if LANG_CXX11
inline void PublishEventRequest::set_pubsub_name(::std::string&& value) {
  
  pubsub_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
}
#endif
inline void PublishEventRequest::set_pubsub_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pubsub_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
}
inline void PublishEventRequest::set_pubsub_name(const char* value, size_t size) {
  
  pubsub_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
}
inline ::std::string* PublishEventRequest::mutable_pubsub_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
  return pubsub_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishEventRequest::release_pubsub_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
  
  return pubsub_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishEventRequest::set_allocated_pubsub_name(::std::string* pubsub_name) {
  if (pubsub_name != NULL) {
    
  } else {
    
  }
  pubsub_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubsub_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
}

// string topic = 2;
inline void PublishEventRequest::clear_topic() {
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PublishEventRequest::topic() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PublishEventRequest.topic)
  return topic_.GetNoArena();
}
inline void PublishEventRequest::set_topic(const ::std::string& value) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PublishEventRequest.topic)
}
#if LANG_CXX11
inline void PublishEventRequest::set_topic(::std::string&& value) {
  
  topic_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PublishEventRequest.topic)
}
#endif
inline void PublishEventRequest::set_topic(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PublishEventRequest.topic)
}
inline void PublishEventRequest::set_topic(const char* value, size_t size) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PublishEventRequest.topic)
}
inline ::std::string* PublishEventRequest::mutable_topic() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PublishEventRequest.topic)
  return topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishEventRequest::release_topic() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PublishEventRequest.topic)
  
  return topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishEventRequest::set_allocated_topic(::std::string* topic) {
  if (topic != NULL) {
    
  } else {
    
  }
  topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), topic);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PublishEventRequest.topic)
}

// bytes data = 3;
inline void PublishEventRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PublishEventRequest::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PublishEventRequest.data)
  return data_.GetNoArena();
}
inline void PublishEventRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PublishEventRequest.data)
}
#if LANG_CXX11
inline void PublishEventRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PublishEventRequest.data)
}
#endif
inline void PublishEventRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PublishEventRequest.data)
}
inline void PublishEventRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PublishEventRequest.data)
}
inline ::std::string* PublishEventRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PublishEventRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishEventRequest::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PublishEventRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishEventRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PublishEventRequest.data)
}

// string data_content_type = 4;
inline void PublishEventRequest::clear_data_content_type() {
  data_content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PublishEventRequest::data_content_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
  return data_content_type_.GetNoArena();
}
inline void PublishEventRequest::set_data_content_type(const ::std::string& value) {
  
  data_content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
}
#if LANG_CXX11
inline void PublishEventRequest::set_data_content_type(::std::string&& value) {
  
  data_content_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
}
#endif
inline void PublishEventRequest::set_data_content_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
}
inline void PublishEventRequest::set_data_content_type(const char* value, size_t size) {
  
  data_content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
}
inline ::std::string* PublishEventRequest::mutable_data_content_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
  return data_content_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishEventRequest::release_data_content_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
  
  return data_content_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishEventRequest::set_allocated_data_content_type(::std::string* data_content_type) {
  if (data_content_type != NULL) {
    
  } else {
    
  }
  data_content_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_content_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
}

// map<string, string> metadata = 5;
inline int PublishEventRequest::metadata_size() const {
  return metadata_.size();
}
inline void PublishEventRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PublishEventRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.PublishEventRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PublishEventRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.PublishEventRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// InvokeBindingRequest

// string name = 1;
inline void InvokeBindingRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeBindingRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeBindingRequest.name)
  return name_.GetNoArena();
}
inline void InvokeBindingRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeBindingRequest.name)
}
#if LANG_CXX11
inline void InvokeBindingRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeBindingRequest.name)
}
#endif
inline void InvokeBindingRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeBindingRequest.name)
}
inline void InvokeBindingRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeBindingRequest.name)
}
inline ::std::string* InvokeBindingRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeBindingRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeBindingRequest::release_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeBindingRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeBindingRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeBindingRequest.name)
}

// bytes data = 2;
inline void InvokeBindingRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeBindingRequest::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeBindingRequest.data)
  return data_.GetNoArena();
}
inline void InvokeBindingRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeBindingRequest.data)
}
#if LANG_CXX11
inline void InvokeBindingRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeBindingRequest.data)
}
#endif
inline void InvokeBindingRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeBindingRequest.data)
}
inline void InvokeBindingRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeBindingRequest.data)
}
inline ::std::string* InvokeBindingRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeBindingRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeBindingRequest::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeBindingRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeBindingRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeBindingRequest.data)
}

// map<string, string> metadata = 3;
inline int InvokeBindingRequest::metadata_size() const {
  return metadata_.size();
}
inline void InvokeBindingRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
InvokeBindingRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.InvokeBindingRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
InvokeBindingRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.InvokeBindingRequest.metadata)
  return metadata_.MutableMap();
}

// string operation = 4;
inline void InvokeBindingRequest::clear_operation() {
  operation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeBindingRequest::operation() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
  return operation_.GetNoArena();
}
inline void InvokeBindingRequest::set_operation(const ::std::string& value) {
  
  operation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
}
#if LANG_CXX11
inline void InvokeBindingRequest::set_operation(::std::string&& value) {
  
  operation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
}
#endif
inline void InvokeBindingRequest::set_operation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  operation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
}
inline void InvokeBindingRequest::set_operation(const char* value, size_t size) {
  
  operation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
}
inline ::std::string* InvokeBindingRequest::mutable_operation() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
  return operation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeBindingRequest::release_operation() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
  
  return operation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeBindingRequest::set_allocated_operation(::std::string* operation) {
  if (operation != NULL) {
    
  } else {
    
  }
  operation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// InvokeBindingResponse

// bytes data = 1;
inline void InvokeBindingResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeBindingResponse::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeBindingResponse.data)
  return data_.GetNoArena();
}
inline void InvokeBindingResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeBindingResponse.data)
}
#if LANG_CXX11
inline void InvokeBindingResponse::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeBindingResponse.data)
}
#endif
inline void InvokeBindingResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeBindingResponse.data)
}
inline void InvokeBindingResponse::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeBindingResponse.data)
}
inline ::std::string* InvokeBindingResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeBindingResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeBindingResponse::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeBindingResponse.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeBindingResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeBindingResponse.data)
}

// map<string, string> metadata = 2;
inline int InvokeBindingResponse::metadata_size() const {
  return metadata_.size();
}
inline void InvokeBindingResponse::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
InvokeBindingResponse::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.InvokeBindingResponse.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
InvokeBindingResponse::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.InvokeBindingResponse.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetSecretRequest

// string store_name = 1;
inline void GetSecretRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSecretRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetSecretRequest.store_name)
  return store_name_.GetNoArena();
}
inline void GetSecretRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetSecretRequest.store_name)
}
#if LANG_CXX11
inline void GetSecretRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetSecretRequest.store_name)
}
#endif
inline void GetSecretRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetSecretRequest.store_name)
}
inline void GetSecretRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetSecretRequest.store_name)
}
inline ::std::string* GetSecretRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetSecretRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSecretRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetSecretRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSecretRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetSecretRequest.store_name)
}

// string key = 2;
inline void GetSecretRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSecretRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetSecretRequest.key)
  return key_.GetNoArena();
}
inline void GetSecretRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetSecretRequest.key)
}
#if LANG_CXX11
inline void GetSecretRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetSecretRequest.key)
}
#endif
inline void GetSecretRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetSecretRequest.key)
}
inline void GetSecretRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetSecretRequest.key)
}
inline ::std::string* GetSecretRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetSecretRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSecretRequest::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetSecretRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSecretRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetSecretRequest.key)
}

// map<string, string> metadata = 3;
inline int GetSecretRequest::metadata_size() const {
  return metadata_.size();
}
inline void GetSecretRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetSecretRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetSecretRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetSecretRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetSecretRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetSecretResponse

// map<string, string> data = 1;
inline int GetSecretResponse::data_size() const {
  return data_.size();
}
inline void GetSecretResponse::clear_data() {
  data_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetSecretResponse::data() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetSecretResponse.data)
  return data_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetSecretResponse::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetSecretResponse.data)
  return data_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetBulkSecretRequest

// string store_name = 1;
inline void GetBulkSecretRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetBulkSecretRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
  return store_name_.GetNoArena();
}
inline void GetBulkSecretRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
}
#if LANG_CXX11
inline void GetBulkSecretRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
}
#endif
inline void GetBulkSecretRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
}
inline void GetBulkSecretRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
}
inline ::std::string* GetBulkSecretRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBulkSecretRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBulkSecretRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
}

// map<string, string> metadata = 2;
inline int GetBulkSecretRequest::metadata_size() const {
  return metadata_.size();
}
inline void GetBulkSecretRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetBulkSecretRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetBulkSecretRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetBulkSecretRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetBulkSecretRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetBulkSecretResponse

// map<string, string> data = 1;
inline int GetBulkSecretResponse::data_size() const {
  return data_.size();
}
inline void GetBulkSecretResponse::clear_data() {
  data_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetBulkSecretResponse::data() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetBulkSecretResponse.data)
  return data_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetBulkSecretResponse::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetBulkSecretResponse.data)
  return data_.MutableMap();
}

// -------------------------------------------------------------------

// TransactionalStateOperation

// string operationType = 1;
inline void TransactionalStateOperation::clear_operationtype() {
  operationtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TransactionalStateOperation::operationtype() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
  return operationtype_.GetNoArena();
}
inline void TransactionalStateOperation::set_operationtype(const ::std::string& value) {
  
  operationtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
}
#if LANG_CXX11
inline void TransactionalStateOperation::set_operationtype(::std::string&& value) {
  
  operationtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
}
#endif
inline void TransactionalStateOperation::set_operationtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  operationtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
}
inline void TransactionalStateOperation::set_operationtype(const char* value, size_t size) {
  
  operationtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
}
inline ::std::string* TransactionalStateOperation::mutable_operationtype() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
  return operationtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionalStateOperation::release_operationtype() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
  
  return operationtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionalStateOperation::set_allocated_operationtype(::std::string* operationtype) {
  if (operationtype != NULL) {
    
  } else {
    
  }
  operationtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operationtype);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
}

// .dapr.proto.common.v1.StateItem request = 2;
inline bool TransactionalStateOperation::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
inline const ::dapr::proto::common::v1::StateItem& TransactionalStateOperation::_internal_request() const {
  return *request_;
}
inline const ::dapr::proto::common::v1::StateItem& TransactionalStateOperation::request() const {
  const ::dapr::proto::common::v1::StateItem* p = request_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TransactionalStateOperation.request)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::common::v1::StateItem*>(
      &::dapr::proto::common::v1::_StateItem_default_instance_);
}
inline ::dapr::proto::common::v1::StateItem* TransactionalStateOperation::release_request() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TransactionalStateOperation.request)
  
  ::dapr::proto::common::v1::StateItem* temp = request_;
  request_ = NULL;
  return temp;
}
inline ::dapr::proto::common::v1::StateItem* TransactionalStateOperation::mutable_request() {
  
  if (request_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::StateItem>(GetArenaNoVirtual());
    request_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TransactionalStateOperation.request)
  return request_;
}
inline void TransactionalStateOperation::set_allocated_request(::dapr::proto::common::v1::StateItem* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(request_);
  }
  if (request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    
  } else {
    
  }
  request_ = request;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TransactionalStateOperation.request)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ExecuteStateTransactionRequest

// string storeName = 1;
inline void ExecuteStateTransactionRequest::clear_storename() {
  storename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteStateTransactionRequest::storename() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
  return storename_.GetNoArena();
}
inline void ExecuteStateTransactionRequest::set_storename(const ::std::string& value) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
}
#if LANG_CXX11
inline void ExecuteStateTransactionRequest::set_storename(::std::string&& value) {
  
  storename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
}
#endif
inline void ExecuteStateTransactionRequest::set_storename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
}
inline void ExecuteStateTransactionRequest::set_storename(const char* value, size_t size) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
}
inline ::std::string* ExecuteStateTransactionRequest::mutable_storename() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
  return storename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteStateTransactionRequest::release_storename() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
  
  return storename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteStateTransactionRequest::set_allocated_storename(::std::string* storename) {
  if (storename != NULL) {
    
  } else {
    
  }
  storename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storename);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
}

// repeated .dapr.proto.runtime.v1.TransactionalStateOperation operations = 2;
inline int ExecuteStateTransactionRequest::operations_size() const {
  return operations_.size();
}
inline void ExecuteStateTransactionRequest::clear_operations() {
  operations_.Clear();
}
inline ::dapr::proto::runtime::v1::TransactionalStateOperation* ExecuteStateTransactionRequest::mutable_operations(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.operations)
  return operations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalStateOperation >*
ExecuteStateTransactionRequest::mutable_operations() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.operations)
  return &operations_;
}
inline const ::dapr::proto::runtime::v1::TransactionalStateOperation& ExecuteStateTransactionRequest::operations(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.operations)
  return operations_.Get(index);
}
inline ::dapr::proto::runtime::v1::TransactionalStateOperation* ExecuteStateTransactionRequest::add_operations() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.operations)
  return operations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalStateOperation >&
ExecuteStateTransactionRequest::operations() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.operations)
  return operations_;
}

// map<string, string> metadata = 3;
inline int ExecuteStateTransactionRequest::metadata_size() const {
  return metadata_.size();
}
inline void ExecuteStateTransactionRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
ExecuteStateTransactionRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
ExecuteStateTransactionRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// RegisterActorTimerRequest

// string actor_type = 1;
inline void RegisterActorTimerRequest::clear_actor_type() {
  actor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorTimerRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
  return actor_type_.GetNoArena();
}
inline void RegisterActorTimerRequest::set_actor_type(const ::std::string& value) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
}
#if LANG_CXX11
inline void RegisterActorTimerRequest::set_actor_type(::std::string&& value) {
  
  actor_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
}
#endif
inline void RegisterActorTimerRequest::set_actor_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
}
inline void RegisterActorTimerRequest::set_actor_type(const char* value, size_t size) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
}
inline ::std::string* RegisterActorTimerRequest::mutable_actor_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
  return actor_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorTimerRequest::release_actor_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
  
  return actor_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorTimerRequest::set_allocated_actor_type(::std::string* actor_type) {
  if (actor_type != NULL) {
    
  } else {
    
  }
  actor_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
}

// string actor_id = 2;
inline void RegisterActorTimerRequest::clear_actor_id() {
  actor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorTimerRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
  return actor_id_.GetNoArena();
}
inline void RegisterActorTimerRequest::set_actor_id(const ::std::string& value) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
}
#if LANG_CXX11
inline void RegisterActorTimerRequest::set_actor_id(::std::string&& value) {
  
  actor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
}
#endif
inline void RegisterActorTimerRequest::set_actor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
}
inline void RegisterActorTimerRequest::set_actor_id(const char* value, size_t size) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
}
inline ::std::string* RegisterActorTimerRequest::mutable_actor_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
  return actor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorTimerRequest::release_actor_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
  
  return actor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorTimerRequest::set_allocated_actor_id(::std::string* actor_id) {
  if (actor_id != NULL) {
    
  } else {
    
  }
  actor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
}

// string name = 3;
inline void RegisterActorTimerRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorTimerRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
  return name_.GetNoArena();
}
inline void RegisterActorTimerRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
}
#if LANG_CXX11
inline void RegisterActorTimerRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
}
#endif
inline void RegisterActorTimerRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
}
inline void RegisterActorTimerRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
}
inline ::std::string* RegisterActorTimerRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorTimerRequest::release_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorTimerRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
}

// string due_time = 4;
inline void RegisterActorTimerRequest::clear_due_time() {
  due_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorTimerRequest::due_time() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
  return due_time_.GetNoArena();
}
inline void RegisterActorTimerRequest::set_due_time(const ::std::string& value) {
  
  due_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
}
#if LANG_CXX11
inline void RegisterActorTimerRequest::set_due_time(::std::string&& value) {
  
  due_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
}
#endif
inline void RegisterActorTimerRequest::set_due_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  due_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
}
inline void RegisterActorTimerRequest::set_due_time(const char* value, size_t size) {
  
  due_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
}
inline ::std::string* RegisterActorTimerRequest::mutable_due_time() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
  return due_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorTimerRequest::release_due_time() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
  
  return due_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorTimerRequest::set_allocated_due_time(::std::string* due_time) {
  if (due_time != NULL) {
    
  } else {
    
  }
  due_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), due_time);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
}

// string period = 5;
inline void RegisterActorTimerRequest::clear_period() {
  period_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorTimerRequest::period() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
  return period_.GetNoArena();
}
inline void RegisterActorTimerRequest::set_period(const ::std::string& value) {
  
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
}
#if LANG_CXX11
inline void RegisterActorTimerRequest::set_period(::std::string&& value) {
  
  period_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
}
#endif
inline void RegisterActorTimerRequest::set_period(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
}
inline void RegisterActorTimerRequest::set_period(const char* value, size_t size) {
  
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
}
inline ::std::string* RegisterActorTimerRequest::mutable_period() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
  return period_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorTimerRequest::release_period() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
  
  return period_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorTimerRequest::set_allocated_period(::std::string* period) {
  if (period != NULL) {
    
  } else {
    
  }
  period_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), period);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
}

// string callback = 6;
inline void RegisterActorTimerRequest::clear_callback() {
  callback_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorTimerRequest::callback() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
  return callback_.GetNoArena();
}
inline void RegisterActorTimerRequest::set_callback(const ::std::string& value) {
  
  callback_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
}
#if LANG_CXX11
inline void RegisterActorTimerRequest::set_callback(::std::string&& value) {
  
  callback_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
}
#endif
inline void RegisterActorTimerRequest::set_callback(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  callback_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
}
inline void RegisterActorTimerRequest::set_callback(const char* value, size_t size) {
  
  callback_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
}
inline ::std::string* RegisterActorTimerRequest::mutable_callback() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
  return callback_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorTimerRequest::release_callback() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
  
  return callback_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorTimerRequest::set_allocated_callback(::std::string* callback) {
  if (callback != NULL) {
    
  } else {
    
  }
  callback_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), callback);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
}

// bytes data = 7;
inline void RegisterActorTimerRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorTimerRequest::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
  return data_.GetNoArena();
}
inline void RegisterActorTimerRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
}
#if LANG_CXX11
inline void RegisterActorTimerRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
}
#endif
inline void RegisterActorTimerRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
}
inline void RegisterActorTimerRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
}
inline ::std::string* RegisterActorTimerRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorTimerRequest::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorTimerRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
}

// -------------------------------------------------------------------

// UnregisterActorTimerRequest

// string actor_type = 1;
inline void UnregisterActorTimerRequest::clear_actor_type() {
  actor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnregisterActorTimerRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
  return actor_type_.GetNoArena();
}
inline void UnregisterActorTimerRequest::set_actor_type(const ::std::string& value) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
}
#if LANG_CXX11
inline void UnregisterActorTimerRequest::set_actor_type(::std::string&& value) {
  
  actor_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
}
#endif
inline void UnregisterActorTimerRequest::set_actor_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
}
inline void UnregisterActorTimerRequest::set_actor_type(const char* value, size_t size) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
}
inline ::std::string* UnregisterActorTimerRequest::mutable_actor_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
  return actor_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnregisterActorTimerRequest::release_actor_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
  
  return actor_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnregisterActorTimerRequest::set_allocated_actor_type(::std::string* actor_type) {
  if (actor_type != NULL) {
    
  } else {
    
  }
  actor_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
}

// string actor_id = 2;
inline void UnregisterActorTimerRequest::clear_actor_id() {
  actor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnregisterActorTimerRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
  return actor_id_.GetNoArena();
}
inline void UnregisterActorTimerRequest::set_actor_id(const ::std::string& value) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
}
#if LANG_CXX11
inline void UnregisterActorTimerRequest::set_actor_id(::std::string&& value) {
  
  actor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
}
#endif
inline void UnregisterActorTimerRequest::set_actor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
}
inline void UnregisterActorTimerRequest::set_actor_id(const char* value, size_t size) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
}
inline ::std::string* UnregisterActorTimerRequest::mutable_actor_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
  return actor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnregisterActorTimerRequest::release_actor_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
  
  return actor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnregisterActorTimerRequest::set_allocated_actor_id(::std::string* actor_id) {
  if (actor_id != NULL) {
    
  } else {
    
  }
  actor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
}

// string name = 3;
inline void UnregisterActorTimerRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnregisterActorTimerRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
  return name_.GetNoArena();
}
inline void UnregisterActorTimerRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
}
#if LANG_CXX11
inline void UnregisterActorTimerRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
}
#endif
inline void UnregisterActorTimerRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
}
inline void UnregisterActorTimerRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
}
inline ::std::string* UnregisterActorTimerRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnregisterActorTimerRequest::release_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnregisterActorTimerRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
}

// -------------------------------------------------------------------

// RegisterActorReminderRequest

// string actor_type = 1;
inline void RegisterActorReminderRequest::clear_actor_type() {
  actor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorReminderRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
  return actor_type_.GetNoArena();
}
inline void RegisterActorReminderRequest::set_actor_type(const ::std::string& value) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
}
#if LANG_CXX11
inline void RegisterActorReminderRequest::set_actor_type(::std::string&& value) {
  
  actor_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
}
#endif
inline void RegisterActorReminderRequest::set_actor_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
}
inline void RegisterActorReminderRequest::set_actor_type(const char* value, size_t size) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
}
inline ::std::string* RegisterActorReminderRequest::mutable_actor_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
  return actor_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorReminderRequest::release_actor_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
  
  return actor_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorReminderRequest::set_allocated_actor_type(::std::string* actor_type) {
  if (actor_type != NULL) {
    
  } else {
    
  }
  actor_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
}

// string actor_id = 2;
inline void RegisterActorReminderRequest::clear_actor_id() {
  actor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorReminderRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
  return actor_id_.GetNoArena();
}
inline void RegisterActorReminderRequest::set_actor_id(const ::std::string& value) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
}
#if LANG_CXX11
inline void RegisterActorReminderRequest::set_actor_id(::std::string&& value) {
  
  actor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
}
#endif
inline void RegisterActorReminderRequest::set_actor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
}
inline void RegisterActorReminderRequest::set_actor_id(const char* value, size_t size) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
}
inline ::std::string* RegisterActorReminderRequest::mutable_actor_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
  return actor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorReminderRequest::release_actor_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
  
  return actor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorReminderRequest::set_allocated_actor_id(::std::string* actor_id) {
  if (actor_id != NULL) {
    
  } else {
    
  }
  actor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
}

// string name = 3;
inline void RegisterActorReminderRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorReminderRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
  return name_.GetNoArena();
}
inline void RegisterActorReminderRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
}
#if LANG_CXX11
inline void RegisterActorReminderRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
}
#endif
inline void RegisterActorReminderRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
}
inline void RegisterActorReminderRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
}
inline ::std::string* RegisterActorReminderRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorReminderRequest::release_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorReminderRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
}

// string due_time = 4;
inline void RegisterActorReminderRequest::clear_due_time() {
  due_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorReminderRequest::due_time() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
  return due_time_.GetNoArena();
}
inline void RegisterActorReminderRequest::set_due_time(const ::std::string& value) {
  
  due_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
}
#if LANG_CXX11
inline void RegisterActorReminderRequest::set_due_time(::std::string&& value) {
  
  due_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
}
#endif
inline void RegisterActorReminderRequest::set_due_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  due_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
}
inline void RegisterActorReminderRequest::set_due_time(const char* value, size_t size) {
  
  due_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
}
inline ::std::string* RegisterActorReminderRequest::mutable_due_time() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
  return due_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorReminderRequest::release_due_time() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
  
  return due_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorReminderRequest::set_allocated_due_time(::std::string* due_time) {
  if (due_time != NULL) {
    
  } else {
    
  }
  due_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), due_time);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
}

// string period = 5;
inline void RegisterActorReminderRequest::clear_period() {
  period_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorReminderRequest::period() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
  return period_.GetNoArena();
}
inline void RegisterActorReminderRequest::set_period(const ::std::string& value) {
  
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
}
#if LANG_CXX11
inline void RegisterActorReminderRequest::set_period(::std::string&& value) {
  
  period_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
}
#endif
inline void RegisterActorReminderRequest::set_period(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
}
inline void RegisterActorReminderRequest::set_period(const char* value, size_t size) {
  
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
}
inline ::std::string* RegisterActorReminderRequest::mutable_period() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
  return period_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorReminderRequest::release_period() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
  
  return period_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorReminderRequest::set_allocated_period(::std::string* period) {
  if (period != NULL) {
    
  } else {
    
  }
  period_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), period);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
}

// bytes data = 6;
inline void RegisterActorReminderRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorReminderRequest::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
  return data_.GetNoArena();
}
inline void RegisterActorReminderRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
}
#if LANG_CXX11
inline void RegisterActorReminderRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
}
#endif
inline void RegisterActorReminderRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
}
inline void RegisterActorReminderRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
}
inline ::std::string* RegisterActorReminderRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorReminderRequest::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorReminderRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
}

// -------------------------------------------------------------------

// UnregisterActorReminderRequest

// string actor_type = 1;
inline void UnregisterActorReminderRequest::clear_actor_type() {
  actor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnregisterActorReminderRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
  return actor_type_.GetNoArena();
}
inline void UnregisterActorReminderRequest::set_actor_type(const ::std::string& value) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
}
#if LANG_CXX11
inline void UnregisterActorReminderRequest::set_actor_type(::std::string&& value) {
  
  actor_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
}
#endif
inline void UnregisterActorReminderRequest::set_actor_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
}
inline void UnregisterActorReminderRequest::set_actor_type(const char* value, size_t size) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
}
inline ::std::string* UnregisterActorReminderRequest::mutable_actor_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
  return actor_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnregisterActorReminderRequest::release_actor_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
  
  return actor_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnregisterActorReminderRequest::set_allocated_actor_type(::std::string* actor_type) {
  if (actor_type != NULL) {
    
  } else {
    
  }
  actor_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
}

// string actor_id = 2;
inline void UnregisterActorReminderRequest::clear_actor_id() {
  actor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnregisterActorReminderRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
  return actor_id_.GetNoArena();
}
inline void UnregisterActorReminderRequest::set_actor_id(const ::std::string& value) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
}
#if LANG_CXX11
inline void UnregisterActorReminderRequest::set_actor_id(::std::string&& value) {
  
  actor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
}
#endif
inline void UnregisterActorReminderRequest::set_actor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
}
inline void UnregisterActorReminderRequest::set_actor_id(const char* value, size_t size) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
}
inline ::std::string* UnregisterActorReminderRequest::mutable_actor_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
  return actor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnregisterActorReminderRequest::release_actor_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
  
  return actor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnregisterActorReminderRequest::set_allocated_actor_id(::std::string* actor_id) {
  if (actor_id != NULL) {
    
  } else {
    
  }
  actor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
}

// string name = 3;
inline void UnregisterActorReminderRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnregisterActorReminderRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
  return name_.GetNoArena();
}
inline void UnregisterActorReminderRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
}
#if LANG_CXX11
inline void UnregisterActorReminderRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
}
#endif
inline void UnregisterActorReminderRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
}
inline void UnregisterActorReminderRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
}
inline ::std::string* UnregisterActorReminderRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnregisterActorReminderRequest::release_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnregisterActorReminderRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
}

// -------------------------------------------------------------------

// GetActorStateRequest

// string actor_type = 1;
inline void GetActorStateRequest::clear_actor_type() {
  actor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetActorStateRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
  return actor_type_.GetNoArena();
}
inline void GetActorStateRequest::set_actor_type(const ::std::string& value) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
}
#if LANG_CXX11
inline void GetActorStateRequest::set_actor_type(::std::string&& value) {
  
  actor_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
}
#endif
inline void GetActorStateRequest::set_actor_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
}
inline void GetActorStateRequest::set_actor_type(const char* value, size_t size) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
}
inline ::std::string* GetActorStateRequest::mutable_actor_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
  return actor_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetActorStateRequest::release_actor_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
  
  return actor_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetActorStateRequest::set_allocated_actor_type(::std::string* actor_type) {
  if (actor_type != NULL) {
    
  } else {
    
  }
  actor_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
}

// string actor_id = 2;
inline void GetActorStateRequest::clear_actor_id() {
  actor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetActorStateRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
  return actor_id_.GetNoArena();
}
inline void GetActorStateRequest::set_actor_id(const ::std::string& value) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
}
#if LANG_CXX11
inline void GetActorStateRequest::set_actor_id(::std::string&& value) {
  
  actor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
}
#endif
inline void GetActorStateRequest::set_actor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
}
inline void GetActorStateRequest::set_actor_id(const char* value, size_t size) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
}
inline ::std::string* GetActorStateRequest::mutable_actor_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
  return actor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetActorStateRequest::release_actor_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
  
  return actor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetActorStateRequest::set_allocated_actor_id(::std::string* actor_id) {
  if (actor_id != NULL) {
    
  } else {
    
  }
  actor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
}

// string key = 3;
inline void GetActorStateRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetActorStateRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetActorStateRequest.key)
  return key_.GetNoArena();
}
inline void GetActorStateRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetActorStateRequest.key)
}
#if LANG_CXX11
inline void GetActorStateRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetActorStateRequest.key)
}
#endif
inline void GetActorStateRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetActorStateRequest.key)
}
inline void GetActorStateRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetActorStateRequest.key)
}
inline ::std::string* GetActorStateRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetActorStateRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetActorStateRequest::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetActorStateRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetActorStateRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetActorStateRequest.key)
}

// -------------------------------------------------------------------

// GetActorStateResponse

// bytes data = 1;
inline void GetActorStateResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetActorStateResponse::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetActorStateResponse.data)
  return data_.GetNoArena();
}
inline void GetActorStateResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetActorStateResponse.data)
}
#if LANG_CXX11
inline void GetActorStateResponse::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetActorStateResponse.data)
}
#endif
inline void GetActorStateResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetActorStateResponse.data)
}
inline void GetActorStateResponse::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetActorStateResponse.data)
}
inline ::std::string* GetActorStateResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetActorStateResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetActorStateResponse::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetActorStateResponse.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetActorStateResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetActorStateResponse.data)
}

// -------------------------------------------------------------------

// ExecuteActorStateTransactionRequest

// string actor_type = 1;
inline void ExecuteActorStateTransactionRequest::clear_actor_type() {
  actor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteActorStateTransactionRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
  return actor_type_.GetNoArena();
}
inline void ExecuteActorStateTransactionRequest::set_actor_type(const ::std::string& value) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
}
#if LANG_CXX11
inline void ExecuteActorStateTransactionRequest::set_actor_type(::std::string&& value) {
  
  actor_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
}
#endif
inline void ExecuteActorStateTransactionRequest::set_actor_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
}
inline void ExecuteActorStateTransactionRequest::set_actor_type(const char* value, size_t size) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
}
inline ::std::string* ExecuteActorStateTransactionRequest::mutable_actor_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
  return actor_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteActorStateTransactionRequest::release_actor_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
  
  return actor_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteActorStateTransactionRequest::set_allocated_actor_type(::std::string* actor_type) {
  if (actor_type != NULL) {
    
  } else {
    
  }
  actor_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
}

// string actor_id = 2;
inline void ExecuteActorStateTransactionRequest::clear_actor_id() {
  actor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteActorStateTransactionRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
  return actor_id_.GetNoArena();
}
inline void ExecuteActorStateTransactionRequest::set_actor_id(const ::std::string& value) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
}
#if LANG_CXX11
inline void ExecuteActorStateTransactionRequest::set_actor_id(::std::string&& value) {
  
  actor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
}
#endif
inline void ExecuteActorStateTransactionRequest::set_actor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
}
inline void ExecuteActorStateTransactionRequest::set_actor_id(const char* value, size_t size) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
}
inline ::std::string* ExecuteActorStateTransactionRequest::mutable_actor_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
  return actor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteActorStateTransactionRequest::release_actor_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
  
  return actor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteActorStateTransactionRequest::set_allocated_actor_id(::std::string* actor_id) {
  if (actor_id != NULL) {
    
  } else {
    
  }
  actor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
}

// repeated .dapr.proto.runtime.v1.TransactionalActorStateOperation operations = 3;
inline int ExecuteActorStateTransactionRequest::operations_size() const {
  return operations_.size();
}
inline void ExecuteActorStateTransactionRequest::clear_operations() {
  operations_.Clear();
}
inline ::dapr::proto::runtime::v1::TransactionalActorStateOperation* ExecuteActorStateTransactionRequest::mutable_operations(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.operations)
  return operations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalActorStateOperation >*
ExecuteActorStateTransactionRequest::mutable_operations() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.operations)
  return &operations_;
}
inline const ::dapr::proto::runtime::v1::TransactionalActorStateOperation& ExecuteActorStateTransactionRequest::operations(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.operations)
  return operations_.Get(index);
}
inline ::dapr::proto::runtime::v1::TransactionalActorStateOperation* ExecuteActorStateTransactionRequest::add_operations() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.operations)
  return operations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalActorStateOperation >&
ExecuteActorStateTransactionRequest::operations() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.operations)
  return operations_;
}

// -------------------------------------------------------------------

// TransactionalActorStateOperation

// string operationType = 1;
inline void TransactionalActorStateOperation::clear_operationtype() {
  operationtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TransactionalActorStateOperation::operationtype() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
  return operationtype_.GetNoArena();
}
inline void TransactionalActorStateOperation::set_operationtype(const ::std::string& value) {
  
  operationtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
}
#if LANG_CXX11
inline void TransactionalActorStateOperation::set_operationtype(::std::string&& value) {
  
  operationtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
}
#endif
inline void TransactionalActorStateOperation::set_operationtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  operationtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
}
inline void TransactionalActorStateOperation::set_operationtype(const char* value, size_t size) {
  
  operationtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
}
inline ::std::string* TransactionalActorStateOperation::mutable_operationtype() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
  return operationtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionalActorStateOperation::release_operationtype() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
  
  return operationtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionalActorStateOperation::set_allocated_operationtype(::std::string* operationtype) {
  if (operationtype != NULL) {
    
  } else {
    
  }
  operationtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operationtype);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
}

// string key = 2;
inline void TransactionalActorStateOperation::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TransactionalActorStateOperation::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
  return key_.GetNoArena();
}
inline void TransactionalActorStateOperation::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
}
#if LANG_CXX11
inline void TransactionalActorStateOperation::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
}
#endif
inline void TransactionalActorStateOperation::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
}
inline void TransactionalActorStateOperation::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
}
inline ::std::string* TransactionalActorStateOperation::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionalActorStateOperation::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionalActorStateOperation::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
}

// .google.protobuf.Any value = 3;
inline bool TransactionalActorStateOperation::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline const ::google::protobuf::Any& TransactionalActorStateOperation::_internal_value() const {
  return *value_;
}
inline const ::google::protobuf::Any& TransactionalActorStateOperation::value() const {
  const ::google::protobuf::Any* p = value_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TransactionalActorStateOperation.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* TransactionalActorStateOperation::release_value() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TransactionalActorStateOperation.value)
  
  ::google::protobuf::Any* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* TransactionalActorStateOperation::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TransactionalActorStateOperation.value)
  return value_;
}
inline void TransactionalActorStateOperation::set_allocated_value(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(value_);
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TransactionalActorStateOperation.value)
}

// -------------------------------------------------------------------

// InvokeActorRequest

// string actor_type = 1;
inline void InvokeActorRequest::clear_actor_type() {
  actor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeActorRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
  return actor_type_.GetNoArena();
}
inline void InvokeActorRequest::set_actor_type(const ::std::string& value) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
}
#if LANG_CXX11
inline void InvokeActorRequest::set_actor_type(::std::string&& value) {
  
  actor_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
}
#endif
inline void InvokeActorRequest::set_actor_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
}
inline void InvokeActorRequest::set_actor_type(const char* value, size_t size) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
}
inline ::std::string* InvokeActorRequest::mutable_actor_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
  return actor_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeActorRequest::release_actor_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
  
  return actor_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeActorRequest::set_allocated_actor_type(::std::string* actor_type) {
  if (actor_type != NULL) {
    
  } else {
    
  }
  actor_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
}

// string actor_id = 2;
inline void InvokeActorRequest::clear_actor_id() {
  actor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeActorRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
  return actor_id_.GetNoArena();
}
inline void InvokeActorRequest::set_actor_id(const ::std::string& value) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
}
#if LANG_CXX11
inline void InvokeActorRequest::set_actor_id(::std::string&& value) {
  
  actor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
}
#endif
inline void InvokeActorRequest::set_actor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
}
inline void InvokeActorRequest::set_actor_id(const char* value, size_t size) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
}
inline ::std::string* InvokeActorRequest::mutable_actor_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
  return actor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeActorRequest::release_actor_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
  
  return actor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeActorRequest::set_allocated_actor_id(::std::string* actor_id) {
  if (actor_id != NULL) {
    
  } else {
    
  }
  actor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
}

// string method = 3;
inline void InvokeActorRequest::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeActorRequest::method() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeActorRequest.method)
  return method_.GetNoArena();
}
inline void InvokeActorRequest::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeActorRequest.method)
}
#if LANG_CXX11
inline void InvokeActorRequest::set_method(::std::string&& value) {
  
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeActorRequest.method)
}
#endif
inline void InvokeActorRequest::set_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeActorRequest.method)
}
inline void InvokeActorRequest::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeActorRequest.method)
}
inline ::std::string* InvokeActorRequest::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeActorRequest.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeActorRequest::release_method() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeActorRequest.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeActorRequest::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeActorRequest.method)
}

// bytes data = 4;
inline void InvokeActorRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeActorRequest::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeActorRequest.data)
  return data_.GetNoArena();
}
inline void InvokeActorRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeActorRequest.data)
}
#if LANG_CXX11
inline void InvokeActorRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeActorRequest.data)
}
#endif
inline void InvokeActorRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeActorRequest.data)
}
inline void InvokeActorRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeActorRequest.data)
}
inline ::std::string* InvokeActorRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeActorRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeActorRequest::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeActorRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeActorRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeActorRequest.data)
}

// -------------------------------------------------------------------

// InvokeActorResponse

// bytes data = 1;
inline void InvokeActorResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeActorResponse::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeActorResponse.data)
  return data_.GetNoArena();
}
inline void InvokeActorResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeActorResponse.data)
}
#if LANG_CXX11
inline void InvokeActorResponse::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeActorResponse.data)
}
#endif
inline void InvokeActorResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeActorResponse.data)
}
inline void InvokeActorResponse::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeActorResponse.data)
}
inline ::std::string* InvokeActorResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeActorResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeActorResponse::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeActorResponse.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeActorResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeActorResponse.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace dapr

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto
